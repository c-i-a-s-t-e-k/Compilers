Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> <empty>
Rule 4     instructions -> instructions instruction
Rule 5     instructions -> instruction
Rule 6     instruction -> assignment ;
Rule 7     instruction -> if_stmt
Rule 8     instruction -> loops
Rule 9     instruction -> BREAK ;
Rule 10    instruction -> CONTINUE ;
Rule 11    instruction -> return_expr ;
Rule 12    instruction -> PRINT create_stmt ;
Rule 13    instruction -> { instructions }
Rule 14    assignment -> ID = expression
Rule 15    assignment -> ID ADDASSIGN expression
Rule 16    assignment -> ID SUBASSIGN expression
Rule 17    assignment -> ID MULASSIGN expression
Rule 18    assignment -> ID DIVASSIGN expression
Rule 19    assignment -> ID [ expression , expression ] = expression
Rule 20    expression -> expression ADD expression
Rule 21    expression -> expression MINUS expression
Rule 22    expression -> expression MUL expression
Rule 23    expression -> expression DIVIDE expression
Rule 24    expression -> MINUS expression
Rule 25    expression -> expression '
Rule 26    expression -> expression DOTADD expression
Rule 27    expression -> expression DOTSUB expression
Rule 28    expression -> expression DOTMUL expression
Rule 29    expression -> expression DOTDIVIDE expression
Rule 30    expression -> INTNUM
Rule 31    expression -> FLOAT
Rule 32    expression -> matrix_expression
Rule 33    expression -> matrix_create
Rule 34    expression -> ID
Rule 35    matrix_expression -> ZEROS ( expression )
Rule 36    matrix_expression -> ONES ( expression )
Rule 37    matrix_expression -> EYE ( expression )
Rule 38    matrix_create -> [ matrix_rows ]
Rule 39    matrix_rows -> matrix_rows , matrix_rows
Rule 40    matrix_rows -> [ matrix_elems ]
Rule 41    matrix_elems -> matrix_elems , matrix_elems
Rule 42    matrix_elems -> expression
Rule 43    condition -> expression GREATER expression
Rule 44    condition -> expression LESS expression
Rule 45    condition -> expression GREATEREQ expression
Rule 46    condition -> expression LESSEQ expression
Rule 47    condition -> expression NOTEQ expression
Rule 48    condition -> expression EQ expression
Rule 49    if_stmt -> IF ( condition ) instruction
Rule 50    if_stmt -> IF ( condition ) instruction ELSE instruction
Rule 51    create_stmt -> print_stmt
Rule 52    print_stmt -> STRING
Rule 53    print_stmt -> print_stmt , expression
Rule 54    print_stmt -> expression
Rule 55    loops -> while_l
Rule 56    loops -> for_l
Rule 57    while_l -> WHILE ( condition ) instruction
Rule 58    for_l -> FOR ID = expression : expression instruction
Rule 59    return_expr -> RETURN
Rule 60    return_expr -> RETURN expression

Terminals, with rules where they appear

'                    : 25
(                    : 35 36 37 49 50 57
)                    : 35 36 37 49 50 57
,                    : 19 39 41 53
:                    : 58
;                    : 6 9 10 11 12
=                    : 14 19 58
ADD                  : 20
ADDASSIGN            : 15
BREAK                : 9
CONTINUE             : 10
DIVASSIGN            : 18
DIVIDE               : 23
DOTADD               : 26
DOTDIVIDE            : 29
DOTMUL               : 28
DOTSUB               : 27
ELSE                 : 50
EQ                   : 48
EYE                  : 37
FLOAT                : 31
FOR                  : 58
GREATER              : 43
GREATEREQ            : 45
ID                   : 14 15 16 17 18 19 34 58
IF                   : 49 50
INTNUM               : 30
LESS                 : 44
LESSEQ               : 46
MINUS                : 21 24
MUL                  : 22
MULASSIGN            : 17
NOTEQ                : 47
ONES                 : 36
PRINT                : 12
RETURN               : 59 60
STRING               : 52
SUBASSIGN            : 16
WHILE                : 57
ZEROS                : 35
[                    : 19 38 40
]                    : 19 38 40
error                : 
{                    : 13
}                    : 13

Nonterminals, with rules where they appear

assignment           : 6
condition            : 49 50 57
create_stmt          : 12
expression           : 14 15 16 17 18 19 19 19 20 20 21 21 22 22 23 23 24 25 26 26 27 27 28 28 29 29 35 36 37 42 43 43 44 44 45 45 46 46 47 47 48 48 53 54 58 58 60
for_l                : 56
if_stmt              : 7
instruction          : 4 5 49 50 50 57 58
instructions         : 2 4 13
instructions_opt     : 1
loops                : 8
matrix_create        : 33
matrix_elems         : 40 41 41
matrix_expression    : 32
matrix_rows          : 38 39 39
print_stmt           : 51 53
program              : 0
return_expr          : 11
while_l              : 55

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> .
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . assignment ;
    (7) instruction -> . if_stmt
    (8) instruction -> . loops
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . return_expr ;
    (12) instruction -> . PRINT create_stmt ;
    (13) instruction -> . { instructions }
    (14) assignment -> . ID = expression
    (15) assignment -> . ID ADDASSIGN expression
    (16) assignment -> . ID SUBASSIGN expression
    (17) assignment -> . ID MULASSIGN expression
    (18) assignment -> . ID DIVASSIGN expression
    (19) assignment -> . ID [ expression , expression ] = expression
    (49) if_stmt -> . IF ( condition ) instruction
    (50) if_stmt -> . IF ( condition ) instruction ELSE instruction
    (55) loops -> . while_l
    (56) loops -> . for_l
    (59) return_expr -> . RETURN
    (60) return_expr -> . RETURN expression
    (57) while_l -> . WHILE ( condition ) instruction
    (58) for_l -> . FOR ID = expression : expression instruction

    $end            reduce using rule 3 (instructions_opt -> .)
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    PRINT           shift and go to state 11
    {               shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    RETURN          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    instruction                    shift and go to state 4
    assignment                     shift and go to state 5
    if_stmt                        shift and go to state 6
    loops                          shift and go to state 7
    return_expr                    shift and go to state 10
    while_l                        shift and go to state 15
    for_l                          shift and go to state 16

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . assignment ;
    (7) instruction -> . if_stmt
    (8) instruction -> . loops
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . return_expr ;
    (12) instruction -> . PRINT create_stmt ;
    (13) instruction -> . { instructions }
    (14) assignment -> . ID = expression
    (15) assignment -> . ID ADDASSIGN expression
    (16) assignment -> . ID SUBASSIGN expression
    (17) assignment -> . ID MULASSIGN expression
    (18) assignment -> . ID DIVASSIGN expression
    (19) assignment -> . ID [ expression , expression ] = expression
    (49) if_stmt -> . IF ( condition ) instruction
    (50) if_stmt -> . IF ( condition ) instruction ELSE instruction
    (55) loops -> . while_l
    (56) loops -> . for_l
    (59) return_expr -> . RETURN
    (60) return_expr -> . RETURN expression
    (57) while_l -> . WHILE ( condition ) instruction
    (58) for_l -> . FOR ID = expression : expression instruction

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    PRINT           shift and go to state 11
    {               shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    RETURN          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19

    instruction                    shift and go to state 20
    assignment                     shift and go to state 5
    if_stmt                        shift and go to state 6
    loops                          shift and go to state 7
    return_expr                    shift and go to state 10
    while_l                        shift and go to state 15
    for_l                          shift and go to state 16

state 4

    (5) instructions -> instruction .

    BREAK           reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    {               reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    IF              reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)
    }               reduce using rule 5 (instructions -> instruction .)


state 5

    (6) instruction -> assignment . ;

    ;               shift and go to state 21


state 6

    (7) instruction -> if_stmt .

    BREAK           reduce using rule 7 (instruction -> if_stmt .)
    CONTINUE        reduce using rule 7 (instruction -> if_stmt .)
    PRINT           reduce using rule 7 (instruction -> if_stmt .)
    {               reduce using rule 7 (instruction -> if_stmt .)
    ID              reduce using rule 7 (instruction -> if_stmt .)
    IF              reduce using rule 7 (instruction -> if_stmt .)
    RETURN          reduce using rule 7 (instruction -> if_stmt .)
    WHILE           reduce using rule 7 (instruction -> if_stmt .)
    FOR             reduce using rule 7 (instruction -> if_stmt .)
    $end            reduce using rule 7 (instruction -> if_stmt .)
    }               reduce using rule 7 (instruction -> if_stmt .)
    ELSE            reduce using rule 7 (instruction -> if_stmt .)


state 7

    (8) instruction -> loops .

    BREAK           reduce using rule 8 (instruction -> loops .)
    CONTINUE        reduce using rule 8 (instruction -> loops .)
    PRINT           reduce using rule 8 (instruction -> loops .)
    {               reduce using rule 8 (instruction -> loops .)
    ID              reduce using rule 8 (instruction -> loops .)
    IF              reduce using rule 8 (instruction -> loops .)
    RETURN          reduce using rule 8 (instruction -> loops .)
    WHILE           reduce using rule 8 (instruction -> loops .)
    FOR             reduce using rule 8 (instruction -> loops .)
    $end            reduce using rule 8 (instruction -> loops .)
    }               reduce using rule 8 (instruction -> loops .)
    ELSE            reduce using rule 8 (instruction -> loops .)


state 8

    (9) instruction -> BREAK . ;

    ;               shift and go to state 22


state 9

    (10) instruction -> CONTINUE . ;

    ;               shift and go to state 23


state 10

    (11) instruction -> return_expr . ;

    ;               shift and go to state 24


state 11

    (12) instruction -> PRINT . create_stmt ;
    (51) create_stmt -> . print_stmt
    (52) print_stmt -> . STRING
    (53) print_stmt -> . print_stmt , expression
    (54) print_stmt -> . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    STRING          shift and go to state 27
    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    create_stmt                    shift and go to state 25
    print_stmt                     shift and go to state 26
    expression                     shift and go to state 28
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 12

    (13) instruction -> { . instructions }
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . assignment ;
    (7) instruction -> . if_stmt
    (8) instruction -> . loops
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . return_expr ;
    (12) instruction -> . PRINT create_stmt ;
    (13) instruction -> . { instructions }
    (14) assignment -> . ID = expression
    (15) assignment -> . ID ADDASSIGN expression
    (16) assignment -> . ID SUBASSIGN expression
    (17) assignment -> . ID MULASSIGN expression
    (18) assignment -> . ID DIVASSIGN expression
    (19) assignment -> . ID [ expression , expression ] = expression
    (49) if_stmt -> . IF ( condition ) instruction
    (50) if_stmt -> . IF ( condition ) instruction ELSE instruction
    (55) loops -> . while_l
    (56) loops -> . for_l
    (59) return_expr -> . RETURN
    (60) return_expr -> . RETURN expression
    (57) while_l -> . WHILE ( condition ) instruction
    (58) for_l -> . FOR ID = expression : expression instruction

    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    PRINT           shift and go to state 11
    {               shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    RETURN          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19

    instructions                   shift and go to state 39
    instruction                    shift and go to state 4
    assignment                     shift and go to state 5
    if_stmt                        shift and go to state 6
    loops                          shift and go to state 7
    return_expr                    shift and go to state 10
    while_l                        shift and go to state 15
    for_l                          shift and go to state 16

state 13

    (14) assignment -> ID . = expression
    (15) assignment -> ID . ADDASSIGN expression
    (16) assignment -> ID . SUBASSIGN expression
    (17) assignment -> ID . MULASSIGN expression
    (18) assignment -> ID . DIVASSIGN expression
    (19) assignment -> ID . [ expression , expression ] = expression

    =               shift and go to state 40
    ADDASSIGN       shift and go to state 41
    SUBASSIGN       shift and go to state 42
    MULASSIGN       shift and go to state 43
    DIVASSIGN       shift and go to state 44
    [               shift and go to state 45


state 14

    (49) if_stmt -> IF . ( condition ) instruction
    (50) if_stmt -> IF . ( condition ) instruction ELSE instruction

    (               shift and go to state 46


state 15

    (55) loops -> while_l .

    BREAK           reduce using rule 55 (loops -> while_l .)
    CONTINUE        reduce using rule 55 (loops -> while_l .)
    PRINT           reduce using rule 55 (loops -> while_l .)
    {               reduce using rule 55 (loops -> while_l .)
    ID              reduce using rule 55 (loops -> while_l .)
    IF              reduce using rule 55 (loops -> while_l .)
    RETURN          reduce using rule 55 (loops -> while_l .)
    WHILE           reduce using rule 55 (loops -> while_l .)
    FOR             reduce using rule 55 (loops -> while_l .)
    $end            reduce using rule 55 (loops -> while_l .)
    }               reduce using rule 55 (loops -> while_l .)
    ELSE            reduce using rule 55 (loops -> while_l .)


state 16

    (56) loops -> for_l .

    BREAK           reduce using rule 56 (loops -> for_l .)
    CONTINUE        reduce using rule 56 (loops -> for_l .)
    PRINT           reduce using rule 56 (loops -> for_l .)
    {               reduce using rule 56 (loops -> for_l .)
    ID              reduce using rule 56 (loops -> for_l .)
    IF              reduce using rule 56 (loops -> for_l .)
    RETURN          reduce using rule 56 (loops -> for_l .)
    WHILE           reduce using rule 56 (loops -> for_l .)
    FOR             reduce using rule 56 (loops -> for_l .)
    $end            reduce using rule 56 (loops -> for_l .)
    }               reduce using rule 56 (loops -> for_l .)
    ELSE            reduce using rule 56 (loops -> for_l .)


state 17

    (59) return_expr -> RETURN .
    (60) return_expr -> RETURN . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    ;               reduce using rule 59 (return_expr -> RETURN .)
    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 47
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 18

    (57) while_l -> WHILE . ( condition ) instruction

    (               shift and go to state 48


state 19

    (58) for_l -> FOR . ID = expression : expression instruction

    ID              shift and go to state 49


state 20

    (4) instructions -> instructions instruction .

    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    {               reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    IF              reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    }               reduce using rule 4 (instructions -> instructions instruction .)


state 21

    (6) instruction -> assignment ; .

    BREAK           reduce using rule 6 (instruction -> assignment ; .)
    CONTINUE        reduce using rule 6 (instruction -> assignment ; .)
    PRINT           reduce using rule 6 (instruction -> assignment ; .)
    {               reduce using rule 6 (instruction -> assignment ; .)
    ID              reduce using rule 6 (instruction -> assignment ; .)
    IF              reduce using rule 6 (instruction -> assignment ; .)
    RETURN          reduce using rule 6 (instruction -> assignment ; .)
    WHILE           reduce using rule 6 (instruction -> assignment ; .)
    FOR             reduce using rule 6 (instruction -> assignment ; .)
    $end            reduce using rule 6 (instruction -> assignment ; .)
    }               reduce using rule 6 (instruction -> assignment ; .)
    ELSE            reduce using rule 6 (instruction -> assignment ; .)


state 22

    (9) instruction -> BREAK ; .

    BREAK           reduce using rule 9 (instruction -> BREAK ; .)
    CONTINUE        reduce using rule 9 (instruction -> BREAK ; .)
    PRINT           reduce using rule 9 (instruction -> BREAK ; .)
    {               reduce using rule 9 (instruction -> BREAK ; .)
    ID              reduce using rule 9 (instruction -> BREAK ; .)
    IF              reduce using rule 9 (instruction -> BREAK ; .)
    RETURN          reduce using rule 9 (instruction -> BREAK ; .)
    WHILE           reduce using rule 9 (instruction -> BREAK ; .)
    FOR             reduce using rule 9 (instruction -> BREAK ; .)
    $end            reduce using rule 9 (instruction -> BREAK ; .)
    }               reduce using rule 9 (instruction -> BREAK ; .)
    ELSE            reduce using rule 9 (instruction -> BREAK ; .)


state 23

    (10) instruction -> CONTINUE ; .

    BREAK           reduce using rule 10 (instruction -> CONTINUE ; .)
    CONTINUE        reduce using rule 10 (instruction -> CONTINUE ; .)
    PRINT           reduce using rule 10 (instruction -> CONTINUE ; .)
    {               reduce using rule 10 (instruction -> CONTINUE ; .)
    ID              reduce using rule 10 (instruction -> CONTINUE ; .)
    IF              reduce using rule 10 (instruction -> CONTINUE ; .)
    RETURN          reduce using rule 10 (instruction -> CONTINUE ; .)
    WHILE           reduce using rule 10 (instruction -> CONTINUE ; .)
    FOR             reduce using rule 10 (instruction -> CONTINUE ; .)
    $end            reduce using rule 10 (instruction -> CONTINUE ; .)
    }               reduce using rule 10 (instruction -> CONTINUE ; .)
    ELSE            reduce using rule 10 (instruction -> CONTINUE ; .)


state 24

    (11) instruction -> return_expr ; .

    BREAK           reduce using rule 11 (instruction -> return_expr ; .)
    CONTINUE        reduce using rule 11 (instruction -> return_expr ; .)
    PRINT           reduce using rule 11 (instruction -> return_expr ; .)
    {               reduce using rule 11 (instruction -> return_expr ; .)
    ID              reduce using rule 11 (instruction -> return_expr ; .)
    IF              reduce using rule 11 (instruction -> return_expr ; .)
    RETURN          reduce using rule 11 (instruction -> return_expr ; .)
    WHILE           reduce using rule 11 (instruction -> return_expr ; .)
    FOR             reduce using rule 11 (instruction -> return_expr ; .)
    $end            reduce using rule 11 (instruction -> return_expr ; .)
    }               reduce using rule 11 (instruction -> return_expr ; .)
    ELSE            reduce using rule 11 (instruction -> return_expr ; .)


state 25

    (12) instruction -> PRINT create_stmt . ;

    ;               shift and go to state 50


state 26

    (51) create_stmt -> print_stmt .
    (53) print_stmt -> print_stmt . , expression

    ;               reduce using rule 51 (create_stmt -> print_stmt .)
    ,               shift and go to state 51


state 27

    (52) print_stmt -> STRING .

    ,               reduce using rule 52 (print_stmt -> STRING .)
    ;               reduce using rule 52 (print_stmt -> STRING .)


state 28

    (54) print_stmt -> expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    ,               reduce using rule 54 (print_stmt -> expression .)
    ;               reduce using rule 54 (print_stmt -> expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 29

    (24) expression -> MINUS . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 61
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 30

    (30) expression -> INTNUM .

    ADD             reduce using rule 30 (expression -> INTNUM .)
    MINUS           reduce using rule 30 (expression -> INTNUM .)
    MUL             reduce using rule 30 (expression -> INTNUM .)
    DIVIDE          reduce using rule 30 (expression -> INTNUM .)
    '               reduce using rule 30 (expression -> INTNUM .)
    DOTADD          reduce using rule 30 (expression -> INTNUM .)
    DOTSUB          reduce using rule 30 (expression -> INTNUM .)
    DOTMUL          reduce using rule 30 (expression -> INTNUM .)
    DOTDIVIDE       reduce using rule 30 (expression -> INTNUM .)
    ,               reduce using rule 30 (expression -> INTNUM .)
    ;               reduce using rule 30 (expression -> INTNUM .)
    GREATER         reduce using rule 30 (expression -> INTNUM .)
    LESS            reduce using rule 30 (expression -> INTNUM .)
    GREATEREQ       reduce using rule 30 (expression -> INTNUM .)
    LESSEQ          reduce using rule 30 (expression -> INTNUM .)
    NOTEQ           reduce using rule 30 (expression -> INTNUM .)
    EQ              reduce using rule 30 (expression -> INTNUM .)
    )               reduce using rule 30 (expression -> INTNUM .)
    ]               reduce using rule 30 (expression -> INTNUM .)
    :               reduce using rule 30 (expression -> INTNUM .)
    BREAK           reduce using rule 30 (expression -> INTNUM .)
    CONTINUE        reduce using rule 30 (expression -> INTNUM .)
    PRINT           reduce using rule 30 (expression -> INTNUM .)
    {               reduce using rule 30 (expression -> INTNUM .)
    ID              reduce using rule 30 (expression -> INTNUM .)
    IF              reduce using rule 30 (expression -> INTNUM .)
    RETURN          reduce using rule 30 (expression -> INTNUM .)
    WHILE           reduce using rule 30 (expression -> INTNUM .)
    FOR             reduce using rule 30 (expression -> INTNUM .)


state 31

    (31) expression -> FLOAT .

    ADD             reduce using rule 31 (expression -> FLOAT .)
    MINUS           reduce using rule 31 (expression -> FLOAT .)
    MUL             reduce using rule 31 (expression -> FLOAT .)
    DIVIDE          reduce using rule 31 (expression -> FLOAT .)
    '               reduce using rule 31 (expression -> FLOAT .)
    DOTADD          reduce using rule 31 (expression -> FLOAT .)
    DOTSUB          reduce using rule 31 (expression -> FLOAT .)
    DOTMUL          reduce using rule 31 (expression -> FLOAT .)
    DOTDIVIDE       reduce using rule 31 (expression -> FLOAT .)
    ,               reduce using rule 31 (expression -> FLOAT .)
    ;               reduce using rule 31 (expression -> FLOAT .)
    GREATER         reduce using rule 31 (expression -> FLOAT .)
    LESS            reduce using rule 31 (expression -> FLOAT .)
    GREATEREQ       reduce using rule 31 (expression -> FLOAT .)
    LESSEQ          reduce using rule 31 (expression -> FLOAT .)
    NOTEQ           reduce using rule 31 (expression -> FLOAT .)
    EQ              reduce using rule 31 (expression -> FLOAT .)
    )               reduce using rule 31 (expression -> FLOAT .)
    ]               reduce using rule 31 (expression -> FLOAT .)
    :               reduce using rule 31 (expression -> FLOAT .)
    BREAK           reduce using rule 31 (expression -> FLOAT .)
    CONTINUE        reduce using rule 31 (expression -> FLOAT .)
    PRINT           reduce using rule 31 (expression -> FLOAT .)
    {               reduce using rule 31 (expression -> FLOAT .)
    ID              reduce using rule 31 (expression -> FLOAT .)
    IF              reduce using rule 31 (expression -> FLOAT .)
    RETURN          reduce using rule 31 (expression -> FLOAT .)
    WHILE           reduce using rule 31 (expression -> FLOAT .)
    FOR             reduce using rule 31 (expression -> FLOAT .)


state 32

    (32) expression -> matrix_expression .

    ADD             reduce using rule 32 (expression -> matrix_expression .)
    MINUS           reduce using rule 32 (expression -> matrix_expression .)
    MUL             reduce using rule 32 (expression -> matrix_expression .)
    DIVIDE          reduce using rule 32 (expression -> matrix_expression .)
    '               reduce using rule 32 (expression -> matrix_expression .)
    DOTADD          reduce using rule 32 (expression -> matrix_expression .)
    DOTSUB          reduce using rule 32 (expression -> matrix_expression .)
    DOTMUL          reduce using rule 32 (expression -> matrix_expression .)
    DOTDIVIDE       reduce using rule 32 (expression -> matrix_expression .)
    ,               reduce using rule 32 (expression -> matrix_expression .)
    ;               reduce using rule 32 (expression -> matrix_expression .)
    GREATER         reduce using rule 32 (expression -> matrix_expression .)
    LESS            reduce using rule 32 (expression -> matrix_expression .)
    GREATEREQ       reduce using rule 32 (expression -> matrix_expression .)
    LESSEQ          reduce using rule 32 (expression -> matrix_expression .)
    NOTEQ           reduce using rule 32 (expression -> matrix_expression .)
    EQ              reduce using rule 32 (expression -> matrix_expression .)
    )               reduce using rule 32 (expression -> matrix_expression .)
    ]               reduce using rule 32 (expression -> matrix_expression .)
    :               reduce using rule 32 (expression -> matrix_expression .)
    BREAK           reduce using rule 32 (expression -> matrix_expression .)
    CONTINUE        reduce using rule 32 (expression -> matrix_expression .)
    PRINT           reduce using rule 32 (expression -> matrix_expression .)
    {               reduce using rule 32 (expression -> matrix_expression .)
    ID              reduce using rule 32 (expression -> matrix_expression .)
    IF              reduce using rule 32 (expression -> matrix_expression .)
    RETURN          reduce using rule 32 (expression -> matrix_expression .)
    WHILE           reduce using rule 32 (expression -> matrix_expression .)
    FOR             reduce using rule 32 (expression -> matrix_expression .)


state 33

    (33) expression -> matrix_create .

    ADD             reduce using rule 33 (expression -> matrix_create .)
    MINUS           reduce using rule 33 (expression -> matrix_create .)
    MUL             reduce using rule 33 (expression -> matrix_create .)
    DIVIDE          reduce using rule 33 (expression -> matrix_create .)
    '               reduce using rule 33 (expression -> matrix_create .)
    DOTADD          reduce using rule 33 (expression -> matrix_create .)
    DOTSUB          reduce using rule 33 (expression -> matrix_create .)
    DOTMUL          reduce using rule 33 (expression -> matrix_create .)
    DOTDIVIDE       reduce using rule 33 (expression -> matrix_create .)
    ,               reduce using rule 33 (expression -> matrix_create .)
    ;               reduce using rule 33 (expression -> matrix_create .)
    GREATER         reduce using rule 33 (expression -> matrix_create .)
    LESS            reduce using rule 33 (expression -> matrix_create .)
    GREATEREQ       reduce using rule 33 (expression -> matrix_create .)
    LESSEQ          reduce using rule 33 (expression -> matrix_create .)
    NOTEQ           reduce using rule 33 (expression -> matrix_create .)
    EQ              reduce using rule 33 (expression -> matrix_create .)
    )               reduce using rule 33 (expression -> matrix_create .)
    ]               reduce using rule 33 (expression -> matrix_create .)
    :               reduce using rule 33 (expression -> matrix_create .)
    BREAK           reduce using rule 33 (expression -> matrix_create .)
    CONTINUE        reduce using rule 33 (expression -> matrix_create .)
    PRINT           reduce using rule 33 (expression -> matrix_create .)
    {               reduce using rule 33 (expression -> matrix_create .)
    ID              reduce using rule 33 (expression -> matrix_create .)
    IF              reduce using rule 33 (expression -> matrix_create .)
    RETURN          reduce using rule 33 (expression -> matrix_create .)
    WHILE           reduce using rule 33 (expression -> matrix_create .)
    FOR             reduce using rule 33 (expression -> matrix_create .)


state 34

    (34) expression -> ID .

    ADD             reduce using rule 34 (expression -> ID .)
    MINUS           reduce using rule 34 (expression -> ID .)
    MUL             reduce using rule 34 (expression -> ID .)
    DIVIDE          reduce using rule 34 (expression -> ID .)
    '               reduce using rule 34 (expression -> ID .)
    DOTADD          reduce using rule 34 (expression -> ID .)
    DOTSUB          reduce using rule 34 (expression -> ID .)
    DOTMUL          reduce using rule 34 (expression -> ID .)
    DOTDIVIDE       reduce using rule 34 (expression -> ID .)
    ,               reduce using rule 34 (expression -> ID .)
    ;               reduce using rule 34 (expression -> ID .)
    GREATER         reduce using rule 34 (expression -> ID .)
    LESS            reduce using rule 34 (expression -> ID .)
    GREATEREQ       reduce using rule 34 (expression -> ID .)
    LESSEQ          reduce using rule 34 (expression -> ID .)
    NOTEQ           reduce using rule 34 (expression -> ID .)
    EQ              reduce using rule 34 (expression -> ID .)
    )               reduce using rule 34 (expression -> ID .)
    ]               reduce using rule 34 (expression -> ID .)
    :               reduce using rule 34 (expression -> ID .)
    BREAK           reduce using rule 34 (expression -> ID .)
    CONTINUE        reduce using rule 34 (expression -> ID .)
    PRINT           reduce using rule 34 (expression -> ID .)
    {               reduce using rule 34 (expression -> ID .)
    ID              reduce using rule 34 (expression -> ID .)
    IF              reduce using rule 34 (expression -> ID .)
    RETURN          reduce using rule 34 (expression -> ID .)
    WHILE           reduce using rule 34 (expression -> ID .)
    FOR             reduce using rule 34 (expression -> ID .)


state 35

    (35) matrix_expression -> ZEROS . ( expression )

    (               shift and go to state 62


state 36

    (36) matrix_expression -> ONES . ( expression )

    (               shift and go to state 63


state 37

    (37) matrix_expression -> EYE . ( expression )

    (               shift and go to state 64


state 38

    (38) matrix_create -> [ . matrix_rows ]
    (39) matrix_rows -> . matrix_rows , matrix_rows
    (40) matrix_rows -> . [ matrix_elems ]

    [               shift and go to state 65

    matrix_rows                    shift and go to state 66

state 39

    (13) instruction -> { instructions . }
    (4) instructions -> instructions . instruction
    (6) instruction -> . assignment ;
    (7) instruction -> . if_stmt
    (8) instruction -> . loops
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . return_expr ;
    (12) instruction -> . PRINT create_stmt ;
    (13) instruction -> . { instructions }
    (14) assignment -> . ID = expression
    (15) assignment -> . ID ADDASSIGN expression
    (16) assignment -> . ID SUBASSIGN expression
    (17) assignment -> . ID MULASSIGN expression
    (18) assignment -> . ID DIVASSIGN expression
    (19) assignment -> . ID [ expression , expression ] = expression
    (49) if_stmt -> . IF ( condition ) instruction
    (50) if_stmt -> . IF ( condition ) instruction ELSE instruction
    (55) loops -> . while_l
    (56) loops -> . for_l
    (59) return_expr -> . RETURN
    (60) return_expr -> . RETURN expression
    (57) while_l -> . WHILE ( condition ) instruction
    (58) for_l -> . FOR ID = expression : expression instruction

    }               shift and go to state 67
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    PRINT           shift and go to state 11
    {               shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    RETURN          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19

    instruction                    shift and go to state 20
    assignment                     shift and go to state 5
    if_stmt                        shift and go to state 6
    loops                          shift and go to state 7
    return_expr                    shift and go to state 10
    while_l                        shift and go to state 15
    for_l                          shift and go to state 16

state 40

    (14) assignment -> ID = . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 68
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 41

    (15) assignment -> ID ADDASSIGN . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 69
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 42

    (16) assignment -> ID SUBASSIGN . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 70
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 43

    (17) assignment -> ID MULASSIGN . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 71
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 44

    (18) assignment -> ID DIVASSIGN . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 72
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 45

    (19) assignment -> ID [ . expression , expression ] = expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 73
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 46

    (49) if_stmt -> IF ( . condition ) instruction
    (50) if_stmt -> IF ( . condition ) instruction ELSE instruction
    (43) condition -> . expression GREATER expression
    (44) condition -> . expression LESS expression
    (45) condition -> . expression GREATEREQ expression
    (46) condition -> . expression LESSEQ expression
    (47) condition -> . expression NOTEQ expression
    (48) condition -> . expression EQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    condition                      shift and go to state 74
    expression                     shift and go to state 75
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 47

    (60) return_expr -> RETURN expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    ;               reduce using rule 60 (return_expr -> RETURN expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 48

    (57) while_l -> WHILE ( . condition ) instruction
    (43) condition -> . expression GREATER expression
    (44) condition -> . expression LESS expression
    (45) condition -> . expression GREATEREQ expression
    (46) condition -> . expression LESSEQ expression
    (47) condition -> . expression NOTEQ expression
    (48) condition -> . expression EQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    condition                      shift and go to state 76
    expression                     shift and go to state 75
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 49

    (58) for_l -> FOR ID . = expression : expression instruction

    =               shift and go to state 77


state 50

    (12) instruction -> PRINT create_stmt ; .

    BREAK           reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    CONTINUE        reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    PRINT           reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    {               reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    ID              reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    IF              reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    RETURN          reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    WHILE           reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    FOR             reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    $end            reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    }               reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    ELSE            reduce using rule 12 (instruction -> PRINT create_stmt ; .)


state 51

    (53) print_stmt -> print_stmt , . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 78
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 52

    (20) expression -> expression ADD . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 79
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 53

    (21) expression -> expression MINUS . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 80
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 54

    (22) expression -> expression MUL . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 81
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 55

    (23) expression -> expression DIVIDE . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 82
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 56

    (25) expression -> expression ' .

    ADD             reduce using rule 25 (expression -> expression ' .)
    MINUS           reduce using rule 25 (expression -> expression ' .)
    MUL             reduce using rule 25 (expression -> expression ' .)
    DIVIDE          reduce using rule 25 (expression -> expression ' .)
    '               reduce using rule 25 (expression -> expression ' .)
    DOTADD          reduce using rule 25 (expression -> expression ' .)
    DOTSUB          reduce using rule 25 (expression -> expression ' .)
    DOTMUL          reduce using rule 25 (expression -> expression ' .)
    DOTDIVIDE       reduce using rule 25 (expression -> expression ' .)
    ,               reduce using rule 25 (expression -> expression ' .)
    ;               reduce using rule 25 (expression -> expression ' .)
    GREATER         reduce using rule 25 (expression -> expression ' .)
    LESS            reduce using rule 25 (expression -> expression ' .)
    GREATEREQ       reduce using rule 25 (expression -> expression ' .)
    LESSEQ          reduce using rule 25 (expression -> expression ' .)
    NOTEQ           reduce using rule 25 (expression -> expression ' .)
    EQ              reduce using rule 25 (expression -> expression ' .)
    )               reduce using rule 25 (expression -> expression ' .)
    ]               reduce using rule 25 (expression -> expression ' .)
    :               reduce using rule 25 (expression -> expression ' .)
    BREAK           reduce using rule 25 (expression -> expression ' .)
    CONTINUE        reduce using rule 25 (expression -> expression ' .)
    PRINT           reduce using rule 25 (expression -> expression ' .)
    {               reduce using rule 25 (expression -> expression ' .)
    ID              reduce using rule 25 (expression -> expression ' .)
    IF              reduce using rule 25 (expression -> expression ' .)
    RETURN          reduce using rule 25 (expression -> expression ' .)
    WHILE           reduce using rule 25 (expression -> expression ' .)
    FOR             reduce using rule 25 (expression -> expression ' .)


state 57

    (26) expression -> expression DOTADD . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 83
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 58

    (27) expression -> expression DOTSUB . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 84
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 59

    (28) expression -> expression DOTMUL . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 85
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 60

    (29) expression -> expression DOTDIVIDE . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 86
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 61

    (24) expression -> MINUS expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    ADD             reduce using rule 24 (expression -> MINUS expression .)
    MINUS           reduce using rule 24 (expression -> MINUS expression .)
    MUL             reduce using rule 24 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 24 (expression -> MINUS expression .)
    '               reduce using rule 24 (expression -> MINUS expression .)
    DOTADD          reduce using rule 24 (expression -> MINUS expression .)
    DOTSUB          reduce using rule 24 (expression -> MINUS expression .)
    DOTMUL          reduce using rule 24 (expression -> MINUS expression .)
    DOTDIVIDE       reduce using rule 24 (expression -> MINUS expression .)
    ,               reduce using rule 24 (expression -> MINUS expression .)
    ;               reduce using rule 24 (expression -> MINUS expression .)
    GREATER         reduce using rule 24 (expression -> MINUS expression .)
    LESS            reduce using rule 24 (expression -> MINUS expression .)
    GREATEREQ       reduce using rule 24 (expression -> MINUS expression .)
    LESSEQ          reduce using rule 24 (expression -> MINUS expression .)
    NOTEQ           reduce using rule 24 (expression -> MINUS expression .)
    EQ              reduce using rule 24 (expression -> MINUS expression .)
    )               reduce using rule 24 (expression -> MINUS expression .)
    ]               reduce using rule 24 (expression -> MINUS expression .)
    :               reduce using rule 24 (expression -> MINUS expression .)
    BREAK           reduce using rule 24 (expression -> MINUS expression .)
    CONTINUE        reduce using rule 24 (expression -> MINUS expression .)
    PRINT           reduce using rule 24 (expression -> MINUS expression .)
    {               reduce using rule 24 (expression -> MINUS expression .)
    ID              reduce using rule 24 (expression -> MINUS expression .)
    IF              reduce using rule 24 (expression -> MINUS expression .)
    RETURN          reduce using rule 24 (expression -> MINUS expression .)
    WHILE           reduce using rule 24 (expression -> MINUS expression .)
    FOR             reduce using rule 24 (expression -> MINUS expression .)

  ! ADD             [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! MUL             [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! '               [ shift and go to state 56 ]
  ! DOTADD          [ shift and go to state 57 ]
  ! DOTSUB          [ shift and go to state 58 ]
  ! DOTMUL          [ shift and go to state 59 ]
  ! DOTDIVIDE       [ shift and go to state 60 ]


state 62

    (35) matrix_expression -> ZEROS ( . expression )
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 87
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 63

    (36) matrix_expression -> ONES ( . expression )
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 88
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 64

    (37) matrix_expression -> EYE ( . expression )
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 89
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 65

    (40) matrix_rows -> [ . matrix_elems ]
    (41) matrix_elems -> . matrix_elems , matrix_elems
    (42) matrix_elems -> . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    matrix_elems                   shift and go to state 90
    expression                     shift and go to state 91
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 66

    (38) matrix_create -> [ matrix_rows . ]
    (39) matrix_rows -> matrix_rows . , matrix_rows

    ]               shift and go to state 92
    ,               shift and go to state 93


state 67

    (13) instruction -> { instructions } .

    BREAK           reduce using rule 13 (instruction -> { instructions } .)
    CONTINUE        reduce using rule 13 (instruction -> { instructions } .)
    PRINT           reduce using rule 13 (instruction -> { instructions } .)
    {               reduce using rule 13 (instruction -> { instructions } .)
    ID              reduce using rule 13 (instruction -> { instructions } .)
    IF              reduce using rule 13 (instruction -> { instructions } .)
    RETURN          reduce using rule 13 (instruction -> { instructions } .)
    WHILE           reduce using rule 13 (instruction -> { instructions } .)
    FOR             reduce using rule 13 (instruction -> { instructions } .)
    $end            reduce using rule 13 (instruction -> { instructions } .)
    }               reduce using rule 13 (instruction -> { instructions } .)
    ELSE            reduce using rule 13 (instruction -> { instructions } .)


state 68

    (14) assignment -> ID = expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    ;               reduce using rule 14 (assignment -> ID = expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 69

    (15) assignment -> ID ADDASSIGN expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    ;               reduce using rule 15 (assignment -> ID ADDASSIGN expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 70

    (16) assignment -> ID SUBASSIGN expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    ;               reduce using rule 16 (assignment -> ID SUBASSIGN expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 71

    (17) assignment -> ID MULASSIGN expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    ;               reduce using rule 17 (assignment -> ID MULASSIGN expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 72

    (18) assignment -> ID DIVASSIGN expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    ;               reduce using rule 18 (assignment -> ID DIVASSIGN expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 73

    (19) assignment -> ID [ expression . , expression ] = expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    ,               shift and go to state 94
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 74

    (49) if_stmt -> IF ( condition . ) instruction
    (50) if_stmt -> IF ( condition . ) instruction ELSE instruction

    )               shift and go to state 95


state 75

    (43) condition -> expression . GREATER expression
    (44) condition -> expression . LESS expression
    (45) condition -> expression . GREATEREQ expression
    (46) condition -> expression . LESSEQ expression
    (47) condition -> expression . NOTEQ expression
    (48) condition -> expression . EQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    GREATER         shift and go to state 96
    LESS            shift and go to state 97
    GREATEREQ       shift and go to state 98
    LESSEQ          shift and go to state 99
    NOTEQ           shift and go to state 100
    EQ              shift and go to state 101
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 76

    (57) while_l -> WHILE ( condition . ) instruction

    )               shift and go to state 102


state 77

    (58) for_l -> FOR ID = . expression : expression instruction
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 103
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 78

    (53) print_stmt -> print_stmt , expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    ,               reduce using rule 53 (print_stmt -> print_stmt , expression .)
    ;               reduce using rule 53 (print_stmt -> print_stmt , expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 79

    (20) expression -> expression ADD expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    ADD             reduce using rule 20 (expression -> expression ADD expression .)
    MINUS           reduce using rule 20 (expression -> expression ADD expression .)
    '               reduce using rule 20 (expression -> expression ADD expression .)
    DOTADD          reduce using rule 20 (expression -> expression ADD expression .)
    DOTSUB          reduce using rule 20 (expression -> expression ADD expression .)
    DOTMUL          reduce using rule 20 (expression -> expression ADD expression .)
    DOTDIVIDE       reduce using rule 20 (expression -> expression ADD expression .)
    ,               reduce using rule 20 (expression -> expression ADD expression .)
    ;               reduce using rule 20 (expression -> expression ADD expression .)
    GREATER         reduce using rule 20 (expression -> expression ADD expression .)
    LESS            reduce using rule 20 (expression -> expression ADD expression .)
    GREATEREQ       reduce using rule 20 (expression -> expression ADD expression .)
    LESSEQ          reduce using rule 20 (expression -> expression ADD expression .)
    NOTEQ           reduce using rule 20 (expression -> expression ADD expression .)
    EQ              reduce using rule 20 (expression -> expression ADD expression .)
    )               reduce using rule 20 (expression -> expression ADD expression .)
    ]               reduce using rule 20 (expression -> expression ADD expression .)
    :               reduce using rule 20 (expression -> expression ADD expression .)
    BREAK           reduce using rule 20 (expression -> expression ADD expression .)
    CONTINUE        reduce using rule 20 (expression -> expression ADD expression .)
    PRINT           reduce using rule 20 (expression -> expression ADD expression .)
    {               reduce using rule 20 (expression -> expression ADD expression .)
    ID              reduce using rule 20 (expression -> expression ADD expression .)
    IF              reduce using rule 20 (expression -> expression ADD expression .)
    RETURN          reduce using rule 20 (expression -> expression ADD expression .)
    WHILE           reduce using rule 20 (expression -> expression ADD expression .)
    FOR             reduce using rule 20 (expression -> expression ADD expression .)
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55

  ! MUL             [ reduce using rule 20 (expression -> expression ADD expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression ADD expression .) ]
  ! ADD             [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! '               [ shift and go to state 56 ]
  ! DOTADD          [ shift and go to state 57 ]
  ! DOTSUB          [ shift and go to state 58 ]
  ! DOTMUL          [ shift and go to state 59 ]
  ! DOTDIVIDE       [ shift and go to state 60 ]


state 80

    (21) expression -> expression MINUS expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    ADD             reduce using rule 21 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 21 (expression -> expression MINUS expression .)
    '               reduce using rule 21 (expression -> expression MINUS expression .)
    DOTADD          reduce using rule 21 (expression -> expression MINUS expression .)
    DOTSUB          reduce using rule 21 (expression -> expression MINUS expression .)
    DOTMUL          reduce using rule 21 (expression -> expression MINUS expression .)
    DOTDIVIDE       reduce using rule 21 (expression -> expression MINUS expression .)
    ,               reduce using rule 21 (expression -> expression MINUS expression .)
    ;               reduce using rule 21 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 21 (expression -> expression MINUS expression .)
    LESS            reduce using rule 21 (expression -> expression MINUS expression .)
    GREATEREQ       reduce using rule 21 (expression -> expression MINUS expression .)
    LESSEQ          reduce using rule 21 (expression -> expression MINUS expression .)
    NOTEQ           reduce using rule 21 (expression -> expression MINUS expression .)
    EQ              reduce using rule 21 (expression -> expression MINUS expression .)
    )               reduce using rule 21 (expression -> expression MINUS expression .)
    ]               reduce using rule 21 (expression -> expression MINUS expression .)
    :               reduce using rule 21 (expression -> expression MINUS expression .)
    BREAK           reduce using rule 21 (expression -> expression MINUS expression .)
    CONTINUE        reduce using rule 21 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 21 (expression -> expression MINUS expression .)
    {               reduce using rule 21 (expression -> expression MINUS expression .)
    ID              reduce using rule 21 (expression -> expression MINUS expression .)
    IF              reduce using rule 21 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 21 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 21 (expression -> expression MINUS expression .)
    FOR             reduce using rule 21 (expression -> expression MINUS expression .)
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55

  ! MUL             [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! ADD             [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! '               [ shift and go to state 56 ]
  ! DOTADD          [ shift and go to state 57 ]
  ! DOTSUB          [ shift and go to state 58 ]
  ! DOTMUL          [ shift and go to state 59 ]
  ! DOTDIVIDE       [ shift and go to state 60 ]


state 81

    (22) expression -> expression MUL expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    ADD             reduce using rule 22 (expression -> expression MUL expression .)
    MINUS           reduce using rule 22 (expression -> expression MUL expression .)
    MUL             reduce using rule 22 (expression -> expression MUL expression .)
    DIVIDE          reduce using rule 22 (expression -> expression MUL expression .)
    '               reduce using rule 22 (expression -> expression MUL expression .)
    DOTADD          reduce using rule 22 (expression -> expression MUL expression .)
    DOTSUB          reduce using rule 22 (expression -> expression MUL expression .)
    DOTMUL          reduce using rule 22 (expression -> expression MUL expression .)
    DOTDIVIDE       reduce using rule 22 (expression -> expression MUL expression .)
    ,               reduce using rule 22 (expression -> expression MUL expression .)
    ;               reduce using rule 22 (expression -> expression MUL expression .)
    GREATER         reduce using rule 22 (expression -> expression MUL expression .)
    LESS            reduce using rule 22 (expression -> expression MUL expression .)
    GREATEREQ       reduce using rule 22 (expression -> expression MUL expression .)
    LESSEQ          reduce using rule 22 (expression -> expression MUL expression .)
    NOTEQ           reduce using rule 22 (expression -> expression MUL expression .)
    EQ              reduce using rule 22 (expression -> expression MUL expression .)
    )               reduce using rule 22 (expression -> expression MUL expression .)
    ]               reduce using rule 22 (expression -> expression MUL expression .)
    :               reduce using rule 22 (expression -> expression MUL expression .)
    BREAK           reduce using rule 22 (expression -> expression MUL expression .)
    CONTINUE        reduce using rule 22 (expression -> expression MUL expression .)
    PRINT           reduce using rule 22 (expression -> expression MUL expression .)
    {               reduce using rule 22 (expression -> expression MUL expression .)
    ID              reduce using rule 22 (expression -> expression MUL expression .)
    IF              reduce using rule 22 (expression -> expression MUL expression .)
    RETURN          reduce using rule 22 (expression -> expression MUL expression .)
    WHILE           reduce using rule 22 (expression -> expression MUL expression .)
    FOR             reduce using rule 22 (expression -> expression MUL expression .)

  ! ADD             [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! MUL             [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! '               [ shift and go to state 56 ]
  ! DOTADD          [ shift and go to state 57 ]
  ! DOTSUB          [ shift and go to state 58 ]
  ! DOTMUL          [ shift and go to state 59 ]
  ! DOTDIVIDE       [ shift and go to state 60 ]


state 82

    (23) expression -> expression DIVIDE expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    ADD             reduce using rule 23 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 23 (expression -> expression DIVIDE expression .)
    MUL             reduce using rule 23 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 23 (expression -> expression DIVIDE expression .)
    '               reduce using rule 23 (expression -> expression DIVIDE expression .)
    DOTADD          reduce using rule 23 (expression -> expression DIVIDE expression .)
    DOTSUB          reduce using rule 23 (expression -> expression DIVIDE expression .)
    DOTMUL          reduce using rule 23 (expression -> expression DIVIDE expression .)
    DOTDIVIDE       reduce using rule 23 (expression -> expression DIVIDE expression .)
    ,               reduce using rule 23 (expression -> expression DIVIDE expression .)
    ;               reduce using rule 23 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 23 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 23 (expression -> expression DIVIDE expression .)
    GREATEREQ       reduce using rule 23 (expression -> expression DIVIDE expression .)
    LESSEQ          reduce using rule 23 (expression -> expression DIVIDE expression .)
    NOTEQ           reduce using rule 23 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 23 (expression -> expression DIVIDE expression .)
    )               reduce using rule 23 (expression -> expression DIVIDE expression .)
    ]               reduce using rule 23 (expression -> expression DIVIDE expression .)
    :               reduce using rule 23 (expression -> expression DIVIDE expression .)
    BREAK           reduce using rule 23 (expression -> expression DIVIDE expression .)
    CONTINUE        reduce using rule 23 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 23 (expression -> expression DIVIDE expression .)
    {               reduce using rule 23 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 23 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 23 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 23 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 23 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 23 (expression -> expression DIVIDE expression .)

  ! ADD             [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! MUL             [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! '               [ shift and go to state 56 ]
  ! DOTADD          [ shift and go to state 57 ]
  ! DOTSUB          [ shift and go to state 58 ]
  ! DOTMUL          [ shift and go to state 59 ]
  ! DOTDIVIDE       [ shift and go to state 60 ]


state 83

    (26) expression -> expression DOTADD expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    '               reduce using rule 26 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 26 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 26 (expression -> expression DOTADD expression .)
    ,               reduce using rule 26 (expression -> expression DOTADD expression .)
    ;               reduce using rule 26 (expression -> expression DOTADD expression .)
    GREATER         reduce using rule 26 (expression -> expression DOTADD expression .)
    LESS            reduce using rule 26 (expression -> expression DOTADD expression .)
    GREATEREQ       reduce using rule 26 (expression -> expression DOTADD expression .)
    LESSEQ          reduce using rule 26 (expression -> expression DOTADD expression .)
    NOTEQ           reduce using rule 26 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 26 (expression -> expression DOTADD expression .)
    )               reduce using rule 26 (expression -> expression DOTADD expression .)
    ]               reduce using rule 26 (expression -> expression DOTADD expression .)
    :               reduce using rule 26 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 26 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 26 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 26 (expression -> expression DOTADD expression .)
    {               reduce using rule 26 (expression -> expression DOTADD expression .)
    ID              reduce using rule 26 (expression -> expression DOTADD expression .)
    IF              reduce using rule 26 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 26 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 26 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 26 (expression -> expression DOTADD expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60

  ! ADD             [ reduce using rule 26 (expression -> expression DOTADD expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression DOTADD expression .) ]
  ! MUL             [ reduce using rule 26 (expression -> expression DOTADD expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 26 (expression -> expression DOTADD expression .) ]
  ! DOTDIVIDE       [ reduce using rule 26 (expression -> expression DOTADD expression .) ]
  ! '               [ shift and go to state 56 ]
  ! DOTADD          [ shift and go to state 57 ]
  ! DOTSUB          [ shift and go to state 58 ]


state 84

    (27) expression -> expression DOTSUB expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    '               reduce using rule 27 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 27 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 27 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 27 (expression -> expression DOTSUB expression .)
    ;               reduce using rule 27 (expression -> expression DOTSUB expression .)
    GREATER         reduce using rule 27 (expression -> expression DOTSUB expression .)
    LESS            reduce using rule 27 (expression -> expression DOTSUB expression .)
    GREATEREQ       reduce using rule 27 (expression -> expression DOTSUB expression .)
    LESSEQ          reduce using rule 27 (expression -> expression DOTSUB expression .)
    NOTEQ           reduce using rule 27 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 27 (expression -> expression DOTSUB expression .)
    )               reduce using rule 27 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 27 (expression -> expression DOTSUB expression .)
    :               reduce using rule 27 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 27 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 27 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 27 (expression -> expression DOTSUB expression .)
    {               reduce using rule 27 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 27 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 27 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 27 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 27 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 27 (expression -> expression DOTSUB expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60

  ! ADD             [ reduce using rule 27 (expression -> expression DOTSUB expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression DOTSUB expression .) ]
  ! MUL             [ reduce using rule 27 (expression -> expression DOTSUB expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 27 (expression -> expression DOTSUB expression .) ]
  ! DOTDIVIDE       [ reduce using rule 27 (expression -> expression DOTSUB expression .) ]
  ! '               [ shift and go to state 56 ]
  ! DOTADD          [ shift and go to state 57 ]
  ! DOTSUB          [ shift and go to state 58 ]


state 85

    (28) expression -> expression DOTMUL expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    '               reduce using rule 28 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 28 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 28 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 28 (expression -> expression DOTMUL expression .)
    DOTDIVIDE       reduce using rule 28 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 28 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 28 (expression -> expression DOTMUL expression .)
    GREATER         reduce using rule 28 (expression -> expression DOTMUL expression .)
    LESS            reduce using rule 28 (expression -> expression DOTMUL expression .)
    GREATEREQ       reduce using rule 28 (expression -> expression DOTMUL expression .)
    LESSEQ          reduce using rule 28 (expression -> expression DOTMUL expression .)
    NOTEQ           reduce using rule 28 (expression -> expression DOTMUL expression .)
    EQ              reduce using rule 28 (expression -> expression DOTMUL expression .)
    )               reduce using rule 28 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 28 (expression -> expression DOTMUL expression .)
    :               reduce using rule 28 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 28 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 28 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 28 (expression -> expression DOTMUL expression .)
    {               reduce using rule 28 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 28 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 28 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 28 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 28 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 28 (expression -> expression DOTMUL expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55

  ! ADD             [ reduce using rule 28 (expression -> expression DOTMUL expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression DOTMUL expression .) ]
  ! MUL             [ reduce using rule 28 (expression -> expression DOTMUL expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression DOTMUL expression .) ]
  ! '               [ shift and go to state 56 ]
  ! DOTADD          [ shift and go to state 57 ]
  ! DOTSUB          [ shift and go to state 58 ]
  ! DOTMUL          [ shift and go to state 59 ]
  ! DOTDIVIDE       [ shift and go to state 60 ]


state 86

    (29) expression -> expression DOTDIVIDE expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    '               reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    DOTADD          reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    DOTSUB          reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    DOTMUL          reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    DOTDIVIDE       reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    ,               reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    ;               reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    GREATER         reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    LESS            reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    GREATEREQ       reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    LESSEQ          reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    NOTEQ           reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    EQ              reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    )               reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    ]               reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    :               reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    BREAK           reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    CONTINUE        reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    PRINT           reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    {               reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    ID              reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    IF              reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    RETURN          reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    WHILE           reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    FOR             reduce using rule 29 (expression -> expression DOTDIVIDE expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55

  ! ADD             [ reduce using rule 29 (expression -> expression DOTDIVIDE expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression DOTDIVIDE expression .) ]
  ! MUL             [ reduce using rule 29 (expression -> expression DOTDIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression DOTDIVIDE expression .) ]
  ! '               [ shift and go to state 56 ]
  ! DOTADD          [ shift and go to state 57 ]
  ! DOTSUB          [ shift and go to state 58 ]
  ! DOTMUL          [ shift and go to state 59 ]
  ! DOTDIVIDE       [ shift and go to state 60 ]


state 87

    (35) matrix_expression -> ZEROS ( expression . )
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    )               shift and go to state 104
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 88

    (36) matrix_expression -> ONES ( expression . )
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    )               shift and go to state 105
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 89

    (37) matrix_expression -> EYE ( expression . )
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    )               shift and go to state 106
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 90

    (40) matrix_rows -> [ matrix_elems . ]
    (41) matrix_elems -> matrix_elems . , matrix_elems

    ]               shift and go to state 107
    ,               shift and go to state 108


state 91

    (42) matrix_elems -> expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    ]               reduce using rule 42 (matrix_elems -> expression .)
    ,               reduce using rule 42 (matrix_elems -> expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 92

    (38) matrix_create -> [ matrix_rows ] .

    ADD             reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    MINUS           reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    MUL             reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    DIVIDE          reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    '               reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    DOTADD          reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    DOTSUB          reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    DOTMUL          reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    DOTDIVIDE       reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    ,               reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    ;               reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    GREATER         reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    LESS            reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    GREATEREQ       reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    LESSEQ          reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    NOTEQ           reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    EQ              reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    )               reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    ]               reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    :               reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    BREAK           reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    CONTINUE        reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    PRINT           reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    {               reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    ID              reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    IF              reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    RETURN          reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    WHILE           reduce using rule 38 (matrix_create -> [ matrix_rows ] .)
    FOR             reduce using rule 38 (matrix_create -> [ matrix_rows ] .)


state 93

    (39) matrix_rows -> matrix_rows , . matrix_rows
    (39) matrix_rows -> . matrix_rows , matrix_rows
    (40) matrix_rows -> . [ matrix_elems ]

    [               shift and go to state 65

    matrix_rows                    shift and go to state 109

state 94

    (19) assignment -> ID [ expression , . expression ] = expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 110
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 95

    (49) if_stmt -> IF ( condition ) . instruction
    (50) if_stmt -> IF ( condition ) . instruction ELSE instruction
    (6) instruction -> . assignment ;
    (7) instruction -> . if_stmt
    (8) instruction -> . loops
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . return_expr ;
    (12) instruction -> . PRINT create_stmt ;
    (13) instruction -> . { instructions }
    (14) assignment -> . ID = expression
    (15) assignment -> . ID ADDASSIGN expression
    (16) assignment -> . ID SUBASSIGN expression
    (17) assignment -> . ID MULASSIGN expression
    (18) assignment -> . ID DIVASSIGN expression
    (19) assignment -> . ID [ expression , expression ] = expression
    (49) if_stmt -> . IF ( condition ) instruction
    (50) if_stmt -> . IF ( condition ) instruction ELSE instruction
    (55) loops -> . while_l
    (56) loops -> . for_l
    (59) return_expr -> . RETURN
    (60) return_expr -> . RETURN expression
    (57) while_l -> . WHILE ( condition ) instruction
    (58) for_l -> . FOR ID = expression : expression instruction

    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    PRINT           shift and go to state 11
    {               shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    RETURN          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19

    instruction                    shift and go to state 111
    assignment                     shift and go to state 5
    if_stmt                        shift and go to state 6
    loops                          shift and go to state 7
    return_expr                    shift and go to state 10
    while_l                        shift and go to state 15
    for_l                          shift and go to state 16

state 96

    (43) condition -> expression GREATER . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 112
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 97

    (44) condition -> expression LESS . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 113
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 98

    (45) condition -> expression GREATEREQ . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 114
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 99

    (46) condition -> expression LESSEQ . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 115
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 100

    (47) condition -> expression NOTEQ . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 116
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 101

    (48) condition -> expression EQ . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 117
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 102

    (57) while_l -> WHILE ( condition ) . instruction
    (6) instruction -> . assignment ;
    (7) instruction -> . if_stmt
    (8) instruction -> . loops
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . return_expr ;
    (12) instruction -> . PRINT create_stmt ;
    (13) instruction -> . { instructions }
    (14) assignment -> . ID = expression
    (15) assignment -> . ID ADDASSIGN expression
    (16) assignment -> . ID SUBASSIGN expression
    (17) assignment -> . ID MULASSIGN expression
    (18) assignment -> . ID DIVASSIGN expression
    (19) assignment -> . ID [ expression , expression ] = expression
    (49) if_stmt -> . IF ( condition ) instruction
    (50) if_stmt -> . IF ( condition ) instruction ELSE instruction
    (55) loops -> . while_l
    (56) loops -> . for_l
    (59) return_expr -> . RETURN
    (60) return_expr -> . RETURN expression
    (57) while_l -> . WHILE ( condition ) instruction
    (58) for_l -> . FOR ID = expression : expression instruction

    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    PRINT           shift and go to state 11
    {               shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    RETURN          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19

    instruction                    shift and go to state 118
    assignment                     shift and go to state 5
    if_stmt                        shift and go to state 6
    loops                          shift and go to state 7
    return_expr                    shift and go to state 10
    while_l                        shift and go to state 15
    for_l                          shift and go to state 16

state 103

    (58) for_l -> FOR ID = expression . : expression instruction
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    :               shift and go to state 119
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 104

    (35) matrix_expression -> ZEROS ( expression ) .

    ADD             reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    MINUS           reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    MUL             reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    DIVIDE          reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    '               reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    DOTADD          reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    DOTSUB          reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    DOTMUL          reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    DOTDIVIDE       reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    ,               reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    ;               reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    GREATER         reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    LESS            reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    GREATEREQ       reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    LESSEQ          reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    NOTEQ           reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    EQ              reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    )               reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    ]               reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    :               reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    BREAK           reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    CONTINUE        reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    PRINT           reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    {               reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    ID              reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    IF              reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    RETURN          reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    WHILE           reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)
    FOR             reduce using rule 35 (matrix_expression -> ZEROS ( expression ) .)


state 105

    (36) matrix_expression -> ONES ( expression ) .

    ADD             reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    MINUS           reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    MUL             reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    DIVIDE          reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    '               reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    DOTADD          reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    DOTSUB          reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    DOTMUL          reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    DOTDIVIDE       reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    ,               reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    ;               reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    GREATER         reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    LESS            reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    GREATEREQ       reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    LESSEQ          reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    NOTEQ           reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    EQ              reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    )               reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    ]               reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    :               reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    BREAK           reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    CONTINUE        reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    PRINT           reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    {               reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    ID              reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    IF              reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    RETURN          reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    WHILE           reduce using rule 36 (matrix_expression -> ONES ( expression ) .)
    FOR             reduce using rule 36 (matrix_expression -> ONES ( expression ) .)


state 106

    (37) matrix_expression -> EYE ( expression ) .

    ADD             reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    MINUS           reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    MUL             reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    DIVIDE          reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    '               reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    DOTADD          reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    DOTSUB          reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    DOTMUL          reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    DOTDIVIDE       reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    ,               reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    ;               reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    GREATER         reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    LESS            reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    GREATEREQ       reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    LESSEQ          reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    NOTEQ           reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    EQ              reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    )               reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    ]               reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    :               reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    BREAK           reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    CONTINUE        reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    PRINT           reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    {               reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    ID              reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    IF              reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    RETURN          reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    WHILE           reduce using rule 37 (matrix_expression -> EYE ( expression ) .)
    FOR             reduce using rule 37 (matrix_expression -> EYE ( expression ) .)


state 107

    (40) matrix_rows -> [ matrix_elems ] .

    ]               reduce using rule 40 (matrix_rows -> [ matrix_elems ] .)
    ,               reduce using rule 40 (matrix_rows -> [ matrix_elems ] .)


state 108

    (41) matrix_elems -> matrix_elems , . matrix_elems
    (41) matrix_elems -> . matrix_elems , matrix_elems
    (42) matrix_elems -> . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    matrix_elems                   shift and go to state 120
    expression                     shift and go to state 91
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 109

    (39) matrix_rows -> matrix_rows , matrix_rows .
    (39) matrix_rows -> matrix_rows . , matrix_rows

  ! shift/reduce conflict for , resolved as shift
    ]               reduce using rule 39 (matrix_rows -> matrix_rows , matrix_rows .)
    ,               shift and go to state 93

  ! ,               [ reduce using rule 39 (matrix_rows -> matrix_rows , matrix_rows .) ]


state 110

    (19) assignment -> ID [ expression , expression . ] = expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    ]               shift and go to state 121
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 111

    (49) if_stmt -> IF ( condition ) instruction .
    (50) if_stmt -> IF ( condition ) instruction . ELSE instruction

    BREAK           reduce using rule 49 (if_stmt -> IF ( condition ) instruction .)
    CONTINUE        reduce using rule 49 (if_stmt -> IF ( condition ) instruction .)
    PRINT           reduce using rule 49 (if_stmt -> IF ( condition ) instruction .)
    {               reduce using rule 49 (if_stmt -> IF ( condition ) instruction .)
    ID              reduce using rule 49 (if_stmt -> IF ( condition ) instruction .)
    IF              reduce using rule 49 (if_stmt -> IF ( condition ) instruction .)
    RETURN          reduce using rule 49 (if_stmt -> IF ( condition ) instruction .)
    WHILE           reduce using rule 49 (if_stmt -> IF ( condition ) instruction .)
    FOR             reduce using rule 49 (if_stmt -> IF ( condition ) instruction .)
    $end            reduce using rule 49 (if_stmt -> IF ( condition ) instruction .)
    }               reduce using rule 49 (if_stmt -> IF ( condition ) instruction .)
    ELSE            shift and go to state 122

  ! ELSE            [ reduce using rule 49 (if_stmt -> IF ( condition ) instruction .) ]


state 112

    (43) condition -> expression GREATER expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    )               reduce using rule 43 (condition -> expression GREATER expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 113

    (44) condition -> expression LESS expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    )               reduce using rule 44 (condition -> expression LESS expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 114

    (45) condition -> expression GREATEREQ expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    )               reduce using rule 45 (condition -> expression GREATEREQ expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 115

    (46) condition -> expression LESSEQ expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    )               reduce using rule 46 (condition -> expression LESSEQ expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 116

    (47) condition -> expression NOTEQ expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    )               reduce using rule 47 (condition -> expression NOTEQ expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 117

    (48) condition -> expression EQ expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    )               reduce using rule 48 (condition -> expression EQ expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60


state 118

    (57) while_l -> WHILE ( condition ) instruction .

    BREAK           reduce using rule 57 (while_l -> WHILE ( condition ) instruction .)
    CONTINUE        reduce using rule 57 (while_l -> WHILE ( condition ) instruction .)
    PRINT           reduce using rule 57 (while_l -> WHILE ( condition ) instruction .)
    {               reduce using rule 57 (while_l -> WHILE ( condition ) instruction .)
    ID              reduce using rule 57 (while_l -> WHILE ( condition ) instruction .)
    IF              reduce using rule 57 (while_l -> WHILE ( condition ) instruction .)
    RETURN          reduce using rule 57 (while_l -> WHILE ( condition ) instruction .)
    WHILE           reduce using rule 57 (while_l -> WHILE ( condition ) instruction .)
    FOR             reduce using rule 57 (while_l -> WHILE ( condition ) instruction .)
    $end            reduce using rule 57 (while_l -> WHILE ( condition ) instruction .)
    }               reduce using rule 57 (while_l -> WHILE ( condition ) instruction .)
    ELSE            reduce using rule 57 (while_l -> WHILE ( condition ) instruction .)


state 119

    (58) for_l -> FOR ID = expression : . expression instruction
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 123
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 120

    (41) matrix_elems -> matrix_elems , matrix_elems .
    (41) matrix_elems -> matrix_elems . , matrix_elems

  ! shift/reduce conflict for , resolved as shift
    ]               reduce using rule 41 (matrix_elems -> matrix_elems , matrix_elems .)
    ,               shift and go to state 108

  ! ,               [ reduce using rule 41 (matrix_elems -> matrix_elems , matrix_elems .) ]


state 121

    (19) assignment -> ID [ expression , expression ] . = expression

    =               shift and go to state 124


state 122

    (50) if_stmt -> IF ( condition ) instruction ELSE . instruction
    (6) instruction -> . assignment ;
    (7) instruction -> . if_stmt
    (8) instruction -> . loops
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . return_expr ;
    (12) instruction -> . PRINT create_stmt ;
    (13) instruction -> . { instructions }
    (14) assignment -> . ID = expression
    (15) assignment -> . ID ADDASSIGN expression
    (16) assignment -> . ID SUBASSIGN expression
    (17) assignment -> . ID MULASSIGN expression
    (18) assignment -> . ID DIVASSIGN expression
    (19) assignment -> . ID [ expression , expression ] = expression
    (49) if_stmt -> . IF ( condition ) instruction
    (50) if_stmt -> . IF ( condition ) instruction ELSE instruction
    (55) loops -> . while_l
    (56) loops -> . for_l
    (59) return_expr -> . RETURN
    (60) return_expr -> . RETURN expression
    (57) while_l -> . WHILE ( condition ) instruction
    (58) for_l -> . FOR ID = expression : expression instruction

    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    PRINT           shift and go to state 11
    {               shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    RETURN          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19

    instruction                    shift and go to state 125
    assignment                     shift and go to state 5
    if_stmt                        shift and go to state 6
    loops                          shift and go to state 7
    return_expr                    shift and go to state 10
    while_l                        shift and go to state 15
    for_l                          shift and go to state 16

state 123

    (58) for_l -> FOR ID = expression : expression . instruction
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression
    (6) instruction -> . assignment ;
    (7) instruction -> . if_stmt
    (8) instruction -> . loops
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . return_expr ;
    (12) instruction -> . PRINT create_stmt ;
    (13) instruction -> . { instructions }
    (14) assignment -> . ID = expression
    (15) assignment -> . ID ADDASSIGN expression
    (16) assignment -> . ID SUBASSIGN expression
    (17) assignment -> . ID MULASSIGN expression
    (18) assignment -> . ID DIVASSIGN expression
    (19) assignment -> . ID [ expression , expression ] = expression
    (49) if_stmt -> . IF ( condition ) instruction
    (50) if_stmt -> . IF ( condition ) instruction ELSE instruction
    (55) loops -> . while_l
    (56) loops -> . for_l
    (59) return_expr -> . RETURN
    (60) return_expr -> . RETURN expression
    (57) while_l -> . WHILE ( condition ) instruction
    (58) for_l -> . FOR ID = expression : expression instruction

    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    PRINT           shift and go to state 11
    {               shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    RETURN          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19

    instruction                    shift and go to state 126
    assignment                     shift and go to state 5
    if_stmt                        shift and go to state 6
    loops                          shift and go to state 7
    return_expr                    shift and go to state 10
    while_l                        shift and go to state 15
    for_l                          shift and go to state 16

state 124

    (19) assignment -> ID [ expression , expression ] = . expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression '
    (26) expression -> . expression DOTADD expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTMUL expression
    (29) expression -> . expression DOTDIVIDE expression
    (30) expression -> . INTNUM
    (31) expression -> . FLOAT
    (32) expression -> . matrix_expression
    (33) expression -> . matrix_create
    (34) expression -> . ID
    (35) matrix_expression -> . ZEROS ( expression )
    (36) matrix_expression -> . ONES ( expression )
    (37) matrix_expression -> . EYE ( expression )
    (38) matrix_create -> . [ matrix_rows ]

    MINUS           shift and go to state 29
    INTNUM          shift and go to state 30
    FLOAT           shift and go to state 31
    ID              shift and go to state 34
    ZEROS           shift and go to state 35
    ONES            shift and go to state 36
    EYE             shift and go to state 37
    [               shift and go to state 38

    expression                     shift and go to state 127
    matrix_expression              shift and go to state 32
    matrix_create                  shift and go to state 33

state 125

    (50) if_stmt -> IF ( condition ) instruction ELSE instruction .

    BREAK           reduce using rule 50 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 50 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    PRINT           reduce using rule 50 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    {               reduce using rule 50 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    ID              reduce using rule 50 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    IF              reduce using rule 50 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    RETURN          reduce using rule 50 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    WHILE           reduce using rule 50 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    FOR             reduce using rule 50 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    $end            reduce using rule 50 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    }               reduce using rule 50 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    ELSE            reduce using rule 50 (if_stmt -> IF ( condition ) instruction ELSE instruction .)


state 126

    (58) for_l -> FOR ID = expression : expression instruction .

    BREAK           reduce using rule 58 (for_l -> FOR ID = expression : expression instruction .)
    CONTINUE        reduce using rule 58 (for_l -> FOR ID = expression : expression instruction .)
    PRINT           reduce using rule 58 (for_l -> FOR ID = expression : expression instruction .)
    {               reduce using rule 58 (for_l -> FOR ID = expression : expression instruction .)
    ID              reduce using rule 58 (for_l -> FOR ID = expression : expression instruction .)
    IF              reduce using rule 58 (for_l -> FOR ID = expression : expression instruction .)
    RETURN          reduce using rule 58 (for_l -> FOR ID = expression : expression instruction .)
    WHILE           reduce using rule 58 (for_l -> FOR ID = expression : expression instruction .)
    FOR             reduce using rule 58 (for_l -> FOR ID = expression : expression instruction .)
    $end            reduce using rule 58 (for_l -> FOR ID = expression : expression instruction .)
    }               reduce using rule 58 (for_l -> FOR ID = expression : expression instruction .)
    ELSE            reduce using rule 58 (for_l -> FOR ID = expression : expression instruction .)


state 127

    (19) assignment -> ID [ expression , expression ] = expression .
    (20) expression -> expression . ADD expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIVIDE expression
    (25) expression -> expression . '
    (26) expression -> expression . DOTADD expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTMUL expression
    (29) expression -> expression . DOTDIVIDE expression

    ;               reduce using rule 19 (assignment -> ID [ expression , expression ] = expression .)
    ADD             shift and go to state 52
    MINUS           shift and go to state 53
    MUL             shift and go to state 54
    DIVIDE          shift and go to state 55
    '               shift and go to state 56
    DOTADD          shift and go to state 57
    DOTSUB          shift and go to state 58
    DOTMUL          shift and go to state 59
    DOTDIVIDE       shift and go to state 60

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for , in state 109 resolved as shift
WARNING: shift/reduce conflict for , in state 120 resolved as shift
