
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFXnonassocELSEleftDOTADDDOTSUBleftDOTMULDOTDIVIDEleftADDMINUSleftDIVIDEMULrightUMINUSADD ADDASSIGN BREAK CONTINUE DIVASSIGN DIVIDE DOTADD DOTDIVIDE DOTMUL DOTSUB ELSE EQ EYE FLOAT FOR GREATER GREATEREQ ID IF INTNUM LESS LESSEQ MINUS MUL MULASSIGN NOTEQ ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSprogram : instructions_optinstructions_opt : instructions instructions_opt : instructions : instructions instruction instructions : instruction instruction : assignment \';\'\n                   | if_stmt\n                   | loops\n                   | BREAK \';\'\n                   | CONTINUE \';\'\n                   | return_expr \';\'\n                   | PRINT create_stmt \';\'\n                   | \'{\' instructions \'}\'assignment : ID \'=\' expression\n                  | ID ADDASSIGN expression\n                  | ID SUBASSIGN expression\n                  | ID MULASSIGN expression \n                  | ID DIVASSIGN expression\n                  | ID \'[\' expression \',\' expression \']\' \'=\' expression expression : expression ADD expression\n                  | expression MINUS expression\n                  | expression MUL expression\n                  | expression DIVIDE expressionexpression : MINUS expression %prec UMINUSexpression : expression "\'" expression : expression DOTADD expression\n                  | expression DOTSUB expression\n                  | expression DOTMUL expression\n                  | expression DOTDIVIDE expressionexpression : INTNUM\n                  | FLOAT\n                  | matrix_expression\n                  | matrix_createexpression : IDmatrix_expression : ZEROS \'(\' expression \')\'\n                         | ONES \'(\' expression \')\'\n                         | EYE \'(\' expression \')\'matrix_create : \'[\' matrix_rows \']\'matrix_rows : matrix_rows \',\' matrix_rows\n                   | \'[\' matrix_elems \']\'matrix_elems : matrix_elems \',\' matrix_elems\n                   | expressioncondition : expression GREATER expression\n                 | expression LESS expression\n                 | expression GREATEREQ expression\n                 | expression LESSEQ expression\n                 | expression NOTEQ expression\n                 | expression EQ expressionif_stmt : IF \'(\' condition \')\' instruction %prec IFX\n               | IF \'(\' condition \')\' instruction ELSE instruction\n               create_stmt : print_stmtprint_stmt : STRING\n                  | print_stmt \',\' expression\n                  | expressionloops : while_l\n             | for_lwhile_l : WHILE "(" condition ")" instructionfor_l : FOR ID "=" expression ":" expression instructionreturn_expr : RETURN\n                   | RETURN expression'
    
_lr_action_items = {'$end':([0,1,2,3,4,6,7,15,16,20,21,22,23,24,50,67,111,118,125,126,],[-3,0,-1,-2,-5,-7,-8,-55,-56,-4,-6,-9,-10,-11,-12,-13,-49,-57,-50,-58,]),'BREAK':([0,3,4,6,7,12,15,16,20,21,22,23,24,30,31,32,33,34,39,50,56,61,67,79,80,81,82,83,84,85,86,92,95,102,104,105,106,111,118,122,123,125,126,],[8,8,-5,-7,-8,8,-55,-56,-4,-6,-9,-10,-11,-30,-31,-32,-33,-34,8,-12,-25,-24,-13,-20,-21,-22,-23,-26,-27,-28,-29,-38,8,8,-35,-36,-37,-49,-57,8,8,-50,-58,]),'CONTINUE':([0,3,4,6,7,12,15,16,20,21,22,23,24,30,31,32,33,34,39,50,56,61,67,79,80,81,82,83,84,85,86,92,95,102,104,105,106,111,118,122,123,125,126,],[9,9,-5,-7,-8,9,-55,-56,-4,-6,-9,-10,-11,-30,-31,-32,-33,-34,9,-12,-25,-24,-13,-20,-21,-22,-23,-26,-27,-28,-29,-38,9,9,-35,-36,-37,-49,-57,9,9,-50,-58,]),'PRINT':([0,3,4,6,7,12,15,16,20,21,22,23,24,30,31,32,33,34,39,50,56,61,67,79,80,81,82,83,84,85,86,92,95,102,104,105,106,111,118,122,123,125,126,],[11,11,-5,-7,-8,11,-55,-56,-4,-6,-9,-10,-11,-30,-31,-32,-33,-34,11,-12,-25,-24,-13,-20,-21,-22,-23,-26,-27,-28,-29,-38,11,11,-35,-36,-37,-49,-57,11,11,-50,-58,]),'{':([0,3,4,6,7,12,15,16,20,21,22,23,24,30,31,32,33,34,39,50,56,61,67,79,80,81,82,83,84,85,86,92,95,102,104,105,106,111,118,122,123,125,126,],[12,12,-5,-7,-8,12,-55,-56,-4,-6,-9,-10,-11,-30,-31,-32,-33,-34,12,-12,-25,-24,-13,-20,-21,-22,-23,-26,-27,-28,-29,-38,12,12,-35,-36,-37,-49,-57,12,12,-50,-58,]),'ID':([0,3,4,6,7,11,12,15,16,17,19,20,21,22,23,24,29,30,31,32,33,34,39,40,41,42,43,44,45,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,77,79,80,81,82,83,84,85,86,92,94,95,96,97,98,99,100,101,102,104,105,106,108,111,118,119,122,123,124,125,126,],[13,13,-5,-7,-8,34,13,-55,-56,34,49,-4,-6,-9,-10,-11,34,-30,-31,-32,-33,-34,13,34,34,34,34,34,34,34,34,-12,34,34,34,34,34,-25,34,34,34,34,-24,34,34,34,34,-13,34,-20,-21,-22,-23,-26,-27,-28,-29,-38,34,13,34,34,34,34,34,34,13,-35,-36,-37,34,-49,-57,34,13,13,34,-50,-58,]),'IF':([0,3,4,6,7,12,15,16,20,21,22,23,24,30,31,32,33,34,39,50,56,61,67,79,80,81,82,83,84,85,86,92,95,102,104,105,106,111,118,122,123,125,126,],[14,14,-5,-7,-8,14,-55,-56,-4,-6,-9,-10,-11,-30,-31,-32,-33,-34,14,-12,-25,-24,-13,-20,-21,-22,-23,-26,-27,-28,-29,-38,14,14,-35,-36,-37,-49,-57,14,14,-50,-58,]),'RETURN':([0,3,4,6,7,12,15,16,20,21,22,23,24,30,31,32,33,34,39,50,56,61,67,79,80,81,82,83,84,85,86,92,95,102,104,105,106,111,118,122,123,125,126,],[17,17,-5,-7,-8,17,-55,-56,-4,-6,-9,-10,-11,-30,-31,-32,-33,-34,17,-12,-25,-24,-13,-20,-21,-22,-23,-26,-27,-28,-29,-38,17,17,-35,-36,-37,-49,-57,17,17,-50,-58,]),'WHILE':([0,3,4,6,7,12,15,16,20,21,22,23,24,30,31,32,33,34,39,50,56,61,67,79,80,81,82,83,84,85,86,92,95,102,104,105,106,111,118,122,123,125,126,],[18,18,-5,-7,-8,18,-55,-56,-4,-6,-9,-10,-11,-30,-31,-32,-33,-34,18,-12,-25,-24,-13,-20,-21,-22,-23,-26,-27,-28,-29,-38,18,18,-35,-36,-37,-49,-57,18,18,-50,-58,]),'FOR':([0,3,4,6,7,12,15,16,20,21,22,23,24,30,31,32,33,34,39,50,56,61,67,79,80,81,82,83,84,85,86,92,95,102,104,105,106,111,118,122,123,125,126,],[19,19,-5,-7,-8,19,-55,-56,-4,-6,-9,-10,-11,-30,-31,-32,-33,-34,19,-12,-25,-24,-13,-20,-21,-22,-23,-26,-27,-28,-29,-38,19,19,-35,-36,-37,-49,-57,19,19,-50,-58,]),'}':([4,6,7,15,16,20,21,22,23,24,39,50,67,111,118,125,126,],[-5,-7,-8,-55,-56,-4,-6,-9,-10,-11,67,-12,-13,-49,-57,-50,-58,]),';':([5,8,9,10,17,25,26,27,28,30,31,32,33,34,47,56,61,68,69,70,71,72,78,79,80,81,82,83,84,85,86,92,104,105,106,127,],[21,22,23,24,-59,50,-51,-52,-54,-30,-31,-32,-33,-34,-60,-25,-24,-14,-15,-16,-17,-18,-53,-20,-21,-22,-23,-26,-27,-28,-29,-38,-35,-36,-37,-19,]),'ELSE':([6,7,15,16,21,22,23,24,50,67,111,118,125,126,],[-7,-8,-55,-56,-6,-9,-10,-11,-12,-13,122,-57,-50,-58,]),'STRING':([11,],[27,]),'MINUS':([11,17,28,29,30,31,32,33,34,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,75,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,94,96,97,98,99,100,101,103,104,105,106,108,110,112,113,114,115,116,117,119,123,124,127,],[29,29,53,29,-30,-31,-32,-33,-34,29,29,29,29,29,29,29,53,29,29,29,29,29,29,-25,29,29,29,29,-24,29,29,29,29,53,53,53,53,53,53,53,29,53,-20,-21,-22,-23,53,53,53,53,53,53,53,53,-38,29,29,29,29,29,29,29,53,-35,-36,-37,29,53,53,53,53,53,53,53,29,53,29,53,]),'INTNUM':([11,17,29,40,41,42,43,44,45,46,48,51,52,53,54,55,57,58,59,60,62,63,64,65,77,94,96,97,98,99,100,101,108,119,124,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'FLOAT':([11,17,29,40,41,42,43,44,45,46,48,51,52,53,54,55,57,58,59,60,62,63,64,65,77,94,96,97,98,99,100,101,108,119,124,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'ZEROS':([11,17,29,40,41,42,43,44,45,46,48,51,52,53,54,55,57,58,59,60,62,63,64,65,77,94,96,97,98,99,100,101,108,119,124,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'ONES':([11,17,29,40,41,42,43,44,45,46,48,51,52,53,54,55,57,58,59,60,62,63,64,65,77,94,96,97,98,99,100,101,108,119,124,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'EYE':([11,17,29,40,41,42,43,44,45,46,48,51,52,53,54,55,57,58,59,60,62,63,64,65,77,94,96,97,98,99,100,101,108,119,124,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'[':([11,13,17,29,38,40,41,42,43,44,45,46,48,51,52,53,54,55,57,58,59,60,62,63,64,65,77,93,94,96,97,98,99,100,101,108,119,124,],[38,45,38,38,65,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,65,38,38,38,38,38,38,38,38,38,38,]),'=':([13,49,121,],[40,77,124,]),'ADDASSIGN':([13,],[41,]),'SUBASSIGN':([13,],[42,]),'MULASSIGN':([13,],[43,]),'DIVASSIGN':([13,],[44,]),'(':([14,18,35,36,37,],[46,48,62,63,64,]),',':([26,27,28,30,31,32,33,34,56,61,66,73,78,79,80,81,82,83,84,85,86,90,91,92,104,105,106,107,109,120,],[51,-52,-54,-30,-31,-32,-33,-34,-25,-24,93,94,-53,-20,-21,-22,-23,-26,-27,-28,-29,108,-42,-38,-35,-36,-37,-40,93,108,]),'ADD':([28,30,31,32,33,34,47,56,61,68,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,91,92,103,104,105,106,110,112,113,114,115,116,117,123,127,],[52,-30,-31,-32,-33,-34,52,-25,-24,52,52,52,52,52,52,52,52,-20,-21,-22,-23,52,52,52,52,52,52,52,52,-38,52,-35,-36,-37,52,52,52,52,52,52,52,52,52,]),'MUL':([28,30,31,32,33,34,47,56,61,68,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,91,92,103,104,105,106,110,112,113,114,115,116,117,123,127,],[54,-30,-31,-32,-33,-34,54,-25,-24,54,54,54,54,54,54,54,54,54,54,-22,-23,54,54,54,54,54,54,54,54,-38,54,-35,-36,-37,54,54,54,54,54,54,54,54,54,]),'DIVIDE':([28,30,31,32,33,34,47,56,61,68,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,91,92,103,104,105,106,110,112,113,114,115,116,117,123,127,],[55,-30,-31,-32,-33,-34,55,-25,-24,55,55,55,55,55,55,55,55,55,55,-22,-23,55,55,55,55,55,55,55,55,-38,55,-35,-36,-37,55,55,55,55,55,55,55,55,55,]),"'":([28,30,31,32,33,34,47,56,61,68,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,91,92,103,104,105,106,110,112,113,114,115,116,117,123,127,],[56,-30,-31,-32,-33,-34,56,-25,-24,56,56,56,56,56,56,56,56,-20,-21,-22,-23,-26,-27,-28,-29,56,56,56,56,-38,56,-35,-36,-37,56,56,56,56,56,56,56,56,56,]),'DOTADD':([28,30,31,32,33,34,47,56,61,68,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,91,92,103,104,105,106,110,112,113,114,115,116,117,123,127,],[57,-30,-31,-32,-33,-34,57,-25,-24,57,57,57,57,57,57,57,57,-20,-21,-22,-23,-26,-27,-28,-29,57,57,57,57,-38,57,-35,-36,-37,57,57,57,57,57,57,57,57,57,]),'DOTSUB':([28,30,31,32,33,34,47,56,61,68,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,91,92,103,104,105,106,110,112,113,114,115,116,117,123,127,],[58,-30,-31,-32,-33,-34,58,-25,-24,58,58,58,58,58,58,58,58,-20,-21,-22,-23,-26,-27,-28,-29,58,58,58,58,-38,58,-35,-36,-37,58,58,58,58,58,58,58,58,58,]),'DOTMUL':([28,30,31,32,33,34,47,56,61,68,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,91,92,103,104,105,106,110,112,113,114,115,116,117,123,127,],[59,-30,-31,-32,-33,-34,59,-25,-24,59,59,59,59,59,59,59,59,-20,-21,-22,-23,59,59,-28,-29,59,59,59,59,-38,59,-35,-36,-37,59,59,59,59,59,59,59,59,59,]),'DOTDIVIDE':([28,30,31,32,33,34,47,56,61,68,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,91,92,103,104,105,106,110,112,113,114,115,116,117,123,127,],[60,-30,-31,-32,-33,-34,60,-25,-24,60,60,60,60,60,60,60,60,-20,-21,-22,-23,60,60,-28,-29,60,60,60,60,-38,60,-35,-36,-37,60,60,60,60,60,60,60,60,60,]),'GREATER':([30,31,32,33,34,56,61,75,79,80,81,82,83,84,85,86,92,104,105,106,],[-30,-31,-32,-33,-34,-25,-24,96,-20,-21,-22,-23,-26,-27,-28,-29,-38,-35,-36,-37,]),'LESS':([30,31,32,33,34,56,61,75,79,80,81,82,83,84,85,86,92,104,105,106,],[-30,-31,-32,-33,-34,-25,-24,97,-20,-21,-22,-23,-26,-27,-28,-29,-38,-35,-36,-37,]),'GREATEREQ':([30,31,32,33,34,56,61,75,79,80,81,82,83,84,85,86,92,104,105,106,],[-30,-31,-32,-33,-34,-25,-24,98,-20,-21,-22,-23,-26,-27,-28,-29,-38,-35,-36,-37,]),'LESSEQ':([30,31,32,33,34,56,61,75,79,80,81,82,83,84,85,86,92,104,105,106,],[-30,-31,-32,-33,-34,-25,-24,99,-20,-21,-22,-23,-26,-27,-28,-29,-38,-35,-36,-37,]),'NOTEQ':([30,31,32,33,34,56,61,75,79,80,81,82,83,84,85,86,92,104,105,106,],[-30,-31,-32,-33,-34,-25,-24,100,-20,-21,-22,-23,-26,-27,-28,-29,-38,-35,-36,-37,]),'EQ':([30,31,32,33,34,56,61,75,79,80,81,82,83,84,85,86,92,104,105,106,],[-30,-31,-32,-33,-34,-25,-24,101,-20,-21,-22,-23,-26,-27,-28,-29,-38,-35,-36,-37,]),')':([30,31,32,33,34,56,61,74,76,79,80,81,82,83,84,85,86,87,88,89,92,104,105,106,112,113,114,115,116,117,],[-30,-31,-32,-33,-34,-25,-24,95,102,-20,-21,-22,-23,-26,-27,-28,-29,104,105,106,-38,-35,-36,-37,-43,-44,-45,-46,-47,-48,]),']':([30,31,32,33,34,56,61,66,79,80,81,82,83,84,85,86,90,91,92,104,105,106,107,109,110,120,],[-30,-31,-32,-33,-34,-25,-24,92,-20,-21,-22,-23,-26,-27,-28,-29,107,-42,-38,-35,-36,-37,-40,-39,121,-41,]),':':([30,31,32,33,34,56,61,79,80,81,82,83,84,85,86,92,103,104,105,106,],[-30,-31,-32,-33,-34,-25,-24,-20,-21,-22,-23,-26,-27,-28,-29,-38,119,-35,-36,-37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,12,],[3,39,]),'instruction':([0,3,12,39,95,102,122,123,],[4,20,4,20,111,118,125,126,]),'assignment':([0,3,12,39,95,102,122,123,],[5,5,5,5,5,5,5,5,]),'if_stmt':([0,3,12,39,95,102,122,123,],[6,6,6,6,6,6,6,6,]),'loops':([0,3,12,39,95,102,122,123,],[7,7,7,7,7,7,7,7,]),'return_expr':([0,3,12,39,95,102,122,123,],[10,10,10,10,10,10,10,10,]),'while_l':([0,3,12,39,95,102,122,123,],[15,15,15,15,15,15,15,15,]),'for_l':([0,3,12,39,95,102,122,123,],[16,16,16,16,16,16,16,16,]),'create_stmt':([11,],[25,]),'print_stmt':([11,],[26,]),'expression':([11,17,29,40,41,42,43,44,45,46,48,51,52,53,54,55,57,58,59,60,62,63,64,65,77,94,96,97,98,99,100,101,108,119,124,],[28,47,61,68,69,70,71,72,73,75,75,78,79,80,81,82,83,84,85,86,87,88,89,91,103,110,112,113,114,115,116,117,91,123,127,]),'matrix_expression':([11,17,29,40,41,42,43,44,45,46,48,51,52,53,54,55,57,58,59,60,62,63,64,65,77,94,96,97,98,99,100,101,108,119,124,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'matrix_create':([11,17,29,40,41,42,43,44,45,46,48,51,52,53,54,55,57,58,59,60,62,63,64,65,77,94,96,97,98,99,100,101,108,119,124,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'matrix_rows':([38,93,],[66,109,]),'condition':([46,48,],[74,76,]),'matrix_elems':([65,108,],[90,120,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',29),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','Mparser.py',32),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','Mparser.py',35),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','Mparser.py',38),
  ('instructions -> instruction','instructions',1,'p_instructions_2','Mparser.py',41),
  ('instruction -> assignment ;','instruction',2,'p_instruction','Mparser.py',44),
  ('instruction -> if_stmt','instruction',1,'p_instruction','Mparser.py',45),
  ('instruction -> loops','instruction',1,'p_instruction','Mparser.py',46),
  ('instruction -> BREAK ;','instruction',2,'p_instruction','Mparser.py',47),
  ('instruction -> CONTINUE ;','instruction',2,'p_instruction','Mparser.py',48),
  ('instruction -> return_expr ;','instruction',2,'p_instruction','Mparser.py',49),
  ('instruction -> PRINT create_stmt ;','instruction',3,'p_instruction','Mparser.py',50),
  ('instruction -> { instructions }','instruction',3,'p_instruction','Mparser.py',51),
  ('assignment -> ID = expression','assignment',3,'p_assignment','Mparser.py',54),
  ('assignment -> ID ADDASSIGN expression','assignment',3,'p_assignment','Mparser.py',55),
  ('assignment -> ID SUBASSIGN expression','assignment',3,'p_assignment','Mparser.py',56),
  ('assignment -> ID MULASSIGN expression','assignment',3,'p_assignment','Mparser.py',57),
  ('assignment -> ID DIVASSIGN expression','assignment',3,'p_assignment','Mparser.py',58),
  ('assignment -> ID [ expression , expression ] = expression','assignment',8,'p_assignment','Mparser.py',59),
  ('expression -> expression ADD expression','expression',3,'p_expression_binop','Mparser.py',64),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','Mparser.py',65),
  ('expression -> expression MUL expression','expression',3,'p_expression_binop','Mparser.py',66),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','Mparser.py',67),
  ('expression -> MINUS expression','expression',2,'p_expressions_unaryneg','Mparser.py',71),
  ("expression -> expression '",'expression',2,'p_expressions_transpose','Mparser.py',75),
  ('expression -> expression DOTADD expression','expression',3,'p_expression_matroxop','Mparser.py',79),
  ('expression -> expression DOTSUB expression','expression',3,'p_expression_matroxop','Mparser.py',80),
  ('expression -> expression DOTMUL expression','expression',3,'p_expression_matroxop','Mparser.py',81),
  ('expression -> expression DOTDIVIDE expression','expression',3,'p_expression_matroxop','Mparser.py',82),
  ('expression -> INTNUM','expression',1,'p_expression_number','Mparser.py',86),
  ('expression -> FLOAT','expression',1,'p_expression_number','Mparser.py',87),
  ('expression -> matrix_expression','expression',1,'p_expression_number','Mparser.py',88),
  ('expression -> matrix_create','expression',1,'p_expression_number','Mparser.py',89),
  ('expression -> ID','expression',1,'p_expression_id','Mparser.py',93),
  ('matrix_expression -> ZEROS ( expression )','matrix_expression',4,'p_matrix_expression','Mparser.py',97),
  ('matrix_expression -> ONES ( expression )','matrix_expression',4,'p_matrix_expression','Mparser.py',98),
  ('matrix_expression -> EYE ( expression )','matrix_expression',4,'p_matrix_expression','Mparser.py',99),
  ('matrix_create -> [ matrix_rows ]','matrix_create',3,'p_matrix_create','Mparser.py',103),
  ('matrix_rows -> matrix_rows , matrix_rows','matrix_rows',3,'p_matrix_rows','Mparser.py',107),
  ('matrix_rows -> [ matrix_elems ]','matrix_rows',3,'p_matrix_rows','Mparser.py',108),
  ('matrix_elems -> matrix_elems , matrix_elems','matrix_elems',3,'p_matrix_elems','Mparser.py',112),
  ('matrix_elems -> expression','matrix_elems',1,'p_matrix_elems','Mparser.py',113),
  ('condition -> expression GREATER expression','condition',3,'p_condition','Mparser.py',116),
  ('condition -> expression LESS expression','condition',3,'p_condition','Mparser.py',117),
  ('condition -> expression GREATEREQ expression','condition',3,'p_condition','Mparser.py',118),
  ('condition -> expression LESSEQ expression','condition',3,'p_condition','Mparser.py',119),
  ('condition -> expression NOTEQ expression','condition',3,'p_condition','Mparser.py',120),
  ('condition -> expression EQ expression','condition',3,'p_condition','Mparser.py',121),
  ('if_stmt -> IF ( condition ) instruction','if_stmt',5,'p_if_stmt','Mparser.py',125),
  ('if_stmt -> IF ( condition ) instruction ELSE instruction','if_stmt',7,'p_if_stmt','Mparser.py',126),
  ('create_stmt -> print_stmt','create_stmt',1,'p_create_stmt','Mparser.py',131),
  ('print_stmt -> STRING','print_stmt',1,'p_print_stmt','Mparser.py',135),
  ('print_stmt -> print_stmt , expression','print_stmt',3,'p_print_stmt','Mparser.py',136),
  ('print_stmt -> expression','print_stmt',1,'p_print_stmt','Mparser.py',137),
  ('loops -> while_l','loops',1,'p_loops','Mparser.py',141),
  ('loops -> for_l','loops',1,'p_loops','Mparser.py',142),
  ('while_l -> WHILE ( condition ) instruction','while_l',5,'p_while_l','Mparser.py',146),
  ('for_l -> FOR ID = expression : expression instruction','for_l',7,'p_for_l','Mparser.py',150),
  ('return_expr -> RETURN','return_expr',1,'p_return_expr','Mparser.py',154),
  ('return_expr -> RETURN expression','return_expr',2,'p_return_expr','Mparser.py',155),
]
