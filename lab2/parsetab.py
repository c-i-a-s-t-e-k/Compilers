
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftDOTADDDOTSUBleftDOTMULDOTDIVIDEleftADDMINUSleftDIVIDEMULADD ADDASSIGN BREAK CONTINUE DIVASSIGN DIVIDE DOTADD DOTDIVIDE DOTMUL DOTSUB ELSE EQ EYE FLOAT FOR GREATER GREATEREQ ID IF INTNUM LESS LESSEQ MINUS MUL MULASSIGN NOTEQ ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSprogram : instructions_optinstructions_opt : instructions instructions_opt : instructions : instructions instruction instructions : instruction instruction : assignment assignment : ID '=' expression ';'\n                  | ID ADDASSIGN expression ';'\n                  | ID SUBASSIGN expression ';'\n                  | ID MULASSIGN expression ';'\n                  | ID DIVASSIGN expression ';'\n                  | ID '[' expression ',' expression ']' '=' expression ';' expression : expression ADD expression\n                  | expression MINUS expression\n                  | expression MUL expression\n                  | expression DIVIDE expressionexpression : expression DOTADD expression\n                  | expression DOTSUB expression\n                  | expression DOTMUL expression\n                  | expression DOTDIVIDE expressionexpression : INTNUM\n                  | FLOAT\n                  | matrix_expression\n                  | matrix_createexpression : IDmatrix_expression : ZEROS '(' expression ')'\n                         | ONES '(' expression ')'\n                         | EYE '(' expression ')'matrix_create : '[' matrix_rows ']'matrix_rows : matrix_rows ',' matrix_rows\n                   | '[' matrix_elems ']'matrix_elems : matrix_elems ',' matrix_elems\n                   | expression"
    
_lr_action_items = {'$end':([0,1,2,3,4,5,7,29,43,44,45,46,74,],[-3,0,-1,-2,-5,-6,-4,-7,-8,-9,-10,-11,-12,]),'ID':([0,3,4,5,7,8,9,10,11,12,13,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,68,72,74,],[6,6,-5,-6,-4,14,14,14,14,14,14,-7,14,14,14,14,14,14,14,14,14,14,14,14,-8,-9,-10,-11,14,14,14,-12,]),'=':([6,70,],[8,72,]),'ADDASSIGN':([6,],[9,]),'SUBASSIGN':([6,],[10,]),'MULASSIGN':([6,],[11,]),'DIVASSIGN':([6,],[12,]),'[':([6,8,9,10,11,12,13,23,30,31,32,33,34,35,36,37,38,39,40,41,47,62,68,72,],[13,23,23,23,23,23,23,41,23,23,23,23,23,23,23,23,23,23,23,23,23,41,23,23,]),'INTNUM':([8,9,10,11,12,13,30,31,32,33,34,35,36,37,38,39,40,41,47,68,72,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'FLOAT':([8,9,10,11,12,13,30,31,32,33,34,35,36,37,38,39,40,41,47,68,72,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'ZEROS':([8,9,10,11,12,13,30,31,32,33,34,35,36,37,38,39,40,41,47,68,72,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'ONES':([8,9,10,11,12,13,30,31,32,33,34,35,36,37,38,39,40,41,47,68,72,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'EYE':([8,9,10,11,12,13,30,31,32,33,34,35,36,37,38,39,40,41,47,68,72,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),';':([14,15,16,17,18,19,24,25,26,27,48,49,50,51,52,53,54,55,61,64,65,66,73,],[-25,29,-21,-22,-23,-24,43,44,45,46,-13,-14,-15,-16,-17,-18,-19,-20,-29,-26,-27,-28,74,]),'ADD':([14,15,16,17,18,19,24,25,26,27,28,48,49,50,51,52,53,54,55,56,57,58,60,61,63,64,65,66,73,],[-25,30,-21,-22,-23,-24,30,30,30,30,30,-13,-14,-15,-16,30,30,30,30,30,30,30,30,-29,30,-26,-27,-28,30,]),'MINUS':([14,15,16,17,18,19,24,25,26,27,28,48,49,50,51,52,53,54,55,56,57,58,60,61,63,64,65,66,73,],[-25,31,-21,-22,-23,-24,31,31,31,31,31,-13,-14,-15,-16,31,31,31,31,31,31,31,31,-29,31,-26,-27,-28,31,]),'MUL':([14,15,16,17,18,19,24,25,26,27,28,48,49,50,51,52,53,54,55,56,57,58,60,61,63,64,65,66,73,],[-25,32,-21,-22,-23,-24,32,32,32,32,32,32,32,-15,-16,32,32,32,32,32,32,32,32,-29,32,-26,-27,-28,32,]),'DIVIDE':([14,15,16,17,18,19,24,25,26,27,28,48,49,50,51,52,53,54,55,56,57,58,60,61,63,64,65,66,73,],[-25,33,-21,-22,-23,-24,33,33,33,33,33,33,33,-15,-16,33,33,33,33,33,33,33,33,-29,33,-26,-27,-28,33,]),'DOTADD':([14,15,16,17,18,19,24,25,26,27,28,48,49,50,51,52,53,54,55,56,57,58,60,61,63,64,65,66,73,],[-25,34,-21,-22,-23,-24,34,34,34,34,34,-13,-14,-15,-16,-17,-18,-19,-20,34,34,34,34,-29,34,-26,-27,-28,34,]),'DOTSUB':([14,15,16,17,18,19,24,25,26,27,28,48,49,50,51,52,53,54,55,56,57,58,60,61,63,64,65,66,73,],[-25,35,-21,-22,-23,-24,35,35,35,35,35,-13,-14,-15,-16,-17,-18,-19,-20,35,35,35,35,-29,35,-26,-27,-28,35,]),'DOTMUL':([14,15,16,17,18,19,24,25,26,27,28,48,49,50,51,52,53,54,55,56,57,58,60,61,63,64,65,66,73,],[-25,36,-21,-22,-23,-24,36,36,36,36,36,-13,-14,-15,-16,36,36,-19,-20,36,36,36,36,-29,36,-26,-27,-28,36,]),'DOTDIVIDE':([14,15,16,17,18,19,24,25,26,27,28,48,49,50,51,52,53,54,55,56,57,58,60,61,63,64,65,66,73,],[-25,37,-21,-22,-23,-24,37,37,37,37,37,-13,-14,-15,-16,37,37,-19,-20,37,37,37,37,-29,37,-26,-27,-28,37,]),',':([14,16,17,18,19,28,42,48,49,50,51,52,53,54,55,59,60,61,64,65,66,67,69,71,],[-25,-21,-22,-23,-24,47,62,-13,-14,-15,-16,-17,-18,-19,-20,68,-33,-29,-26,-27,-28,-31,62,68,]),')':([14,16,17,18,19,48,49,50,51,52,53,54,55,56,57,58,61,64,65,66,],[-25,-21,-22,-23,-24,-13,-14,-15,-16,-17,-18,-19,-20,64,65,66,-29,-26,-27,-28,]),']':([14,16,17,18,19,42,48,49,50,51,52,53,54,55,59,60,61,63,64,65,66,67,69,71,],[-25,-21,-22,-23,-24,61,-13,-14,-15,-16,-17,-18,-19,-20,67,-33,-29,70,-26,-27,-28,-31,-30,-32,]),'(':([20,21,22,],[38,39,40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,],[3,]),'instruction':([0,3,],[4,7,]),'assignment':([0,3,],[5,5,]),'expression':([8,9,10,11,12,13,30,31,32,33,34,35,36,37,38,39,40,41,47,68,72,],[15,24,25,26,27,28,48,49,50,51,52,53,54,55,56,57,58,60,63,60,73,]),'matrix_expression':([8,9,10,11,12,13,30,31,32,33,34,35,36,37,38,39,40,41,47,68,72,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'matrix_create':([8,9,10,11,12,13,30,31,32,33,34,35,36,37,38,39,40,41,47,68,72,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'matrix_rows':([23,62,],[42,69,]),'matrix_elems':([41,68,],[59,71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',50),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','Mparser.py',53),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','Mparser.py',56),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','Mparser.py',59),
  ('instructions -> instruction','instructions',1,'p_instructions_2','Mparser.py',62),
  ('instruction -> assignment','instruction',1,'p_instruction','Mparser.py',65),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Mparser.py',68),
  ('assignment -> ID ADDASSIGN expression ;','assignment',4,'p_assignment','Mparser.py',69),
  ('assignment -> ID SUBASSIGN expression ;','assignment',4,'p_assignment','Mparser.py',70),
  ('assignment -> ID MULASSIGN expression ;','assignment',4,'p_assignment','Mparser.py',71),
  ('assignment -> ID DIVASSIGN expression ;','assignment',4,'p_assignment','Mparser.py',72),
  ('assignment -> ID [ expression , expression ] = expression ;','assignment',9,'p_assignment','Mparser.py',73),
  ('expression -> expression ADD expression','expression',3,'p_expression_binop','Mparser.py',94),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','Mparser.py',95),
  ('expression -> expression MUL expression','expression',3,'p_expression_binop','Mparser.py',96),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','Mparser.py',97),
  ('expression -> expression DOTADD expression','expression',3,'p_expression_matroxop','Mparser.py',105),
  ('expression -> expression DOTSUB expression','expression',3,'p_expression_matroxop','Mparser.py',106),
  ('expression -> expression DOTMUL expression','expression',3,'p_expression_matroxop','Mparser.py',107),
  ('expression -> expression DOTDIVIDE expression','expression',3,'p_expression_matroxop','Mparser.py',108),
  ('expression -> INTNUM','expression',1,'p_expression_number','Mparser.py',137),
  ('expression -> FLOAT','expression',1,'p_expression_number','Mparser.py',138),
  ('expression -> matrix_expression','expression',1,'p_expression_number','Mparser.py',139),
  ('expression -> matrix_create','expression',1,'p_expression_number','Mparser.py',140),
  ('expression -> ID','expression',1,'p_expression_id','Mparser.py',144),
  ('matrix_expression -> ZEROS ( expression )','matrix_expression',4,'p_matrix_expression','Mparser.py',152),
  ('matrix_expression -> ONES ( expression )','matrix_expression',4,'p_matrix_expression','Mparser.py',153),
  ('matrix_expression -> EYE ( expression )','matrix_expression',4,'p_matrix_expression','Mparser.py',154),
  ('matrix_create -> [ matrix_rows ]','matrix_create',3,'p_matrix_create','Mparser.py',163),
  ('matrix_rows -> matrix_rows , matrix_rows','matrix_rows',3,'p_matrix_rows','Mparser.py',167),
  ('matrix_rows -> [ matrix_elems ]','matrix_rows',3,'p_matrix_rows','Mparser.py',168),
  ('matrix_elems -> matrix_elems , matrix_elems','matrix_elems',3,'p_matrix_elems','Mparser.py',177),
  ('matrix_elems -> expression','matrix_elems',1,'p_matrix_elems','Mparser.py',178),
]
