
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQNOTEQLESSGREATERLESSEQGREATEREQleftDOTADDDOTSUBleftDOTMULDOTDIVIDEleftADDMINUSleftDIVIDEMULright\'ADD ADDASSIGN BREAK CONTINUE DIVASSIGN DIVIDE DOTADD DOTDIVIDE DOTMUL DOTSUB ELSE EQ EYE FLOAT FOR GREATER GREATEREQ ID IF INTNUM LESS LESSEQ MINUS MUL MULASSIGN NOTEQ ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSprogram : instructions_optinstructions_opt : instructions instructions_opt : instructions : instructions instruction instructions : instruction instruction : assignment assignment : ID \'=\' expression \';\'\n                  | ID ADDASSIGN expression \';\'\n                  | ID SUBASSIGN expression \';\'\n                  | ID MULASSIGN expression \';\'\n                  | ID DIVASSIGN expression \';\'\n                  | ID \'[\' expression \',\' expression \']\' \'=\' expression \';\' expression : expression ADD expression\n                  | expression MINUS expression\n                  | expression MUL expression\n                  | expression DIVIDE expressionexpression : MINUS expressionexpression : expression "\'" expression : expression DOTADD expression\n                  | expression DOTSUB expression\n                  | expression DOTMUL expression\n                  | expression DOTDIVIDE expressionexpression : INTNUM\n                  | FLOAT\n                  | matrix_expression\n                  | matrix_createexpression : IDmatrix_expression : ZEROS \'(\' expression \')\'\n                         | ONES \'(\' expression \')\'\n                         | EYE \'(\' expression \')\'matrix_create : \'[\' matrix_rows \']\'matrix_rows : matrix_rows \',\' matrix_rows\n                   | \'[\' matrix_elems \']\'matrix_elems : matrix_elems \',\' matrix_elems\n                   | expressionexpression : expression EQ expression\n                  | expression NOTEQ expression\n                  | expression GREATER expression\n                  | expression GREATEREQ expression\n                  | expression LESS expression\n                  | expression LESSEQ expressionexpression : IF \'(\' expression \')\' expression\n                  | IF \'(\' expression \')\' expression ELSE expression'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,7,31,54,55,56,57,96,],[-3,0,-1,-2,-5,-6,-4,-7,-8,-9,-10,-11,-12,]),'ID':([0,3,4,5,7,8,9,10,11,12,13,16,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,54,55,56,57,58,82,87,92,93,96,],[6,6,-5,-6,-4,14,14,14,14,14,14,14,-7,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-8,-9,-10,-11,14,14,14,14,14,-12,]),'=':([6,89,],[8,92,]),'ADDASSIGN':([6,],[9,]),'SUBASSIGN':([6,],[10,]),'MULASSIGN':([6,],[11,]),'DIVASSIGN':([6,],[12,]),'[':([6,8,9,10,11,12,13,16,25,32,33,34,35,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,58,80,82,87,92,93,],[13,25,25,25,25,25,25,25,52,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,52,25,25,25,25,]),'MINUS':([8,9,10,11,12,13,14,15,16,17,18,19,20,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,81,82,83,84,85,87,90,92,93,94,95,],[16,16,16,16,16,16,-27,33,16,-23,-24,-25,-26,33,33,33,33,33,16,16,16,16,-18,16,16,16,16,16,16,16,16,16,16,-17,16,16,16,16,16,16,-13,-14,-15,-16,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-31,33,16,-28,-29,-30,16,33,16,16,33,33,]),'INTNUM':([8,9,10,11,12,13,16,32,33,34,35,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,58,82,87,92,93,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'FLOAT':([8,9,10,11,12,13,16,32,33,34,35,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,58,82,87,92,93,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'IF':([8,9,10,11,12,13,16,32,33,34,35,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,58,82,87,92,93,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'ZEROS':([8,9,10,11,12,13,16,32,33,34,35,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,58,82,87,92,93,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'ONES':([8,9,10,11,12,13,16,32,33,34,35,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,58,82,87,92,93,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'EYE':([8,9,10,11,12,13,16,32,33,34,35,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,58,82,87,92,93,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),';':([14,15,17,18,19,20,26,27,28,29,36,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,79,83,84,85,90,94,95,],[-27,31,-23,-24,-25,-26,54,55,56,57,-18,-17,-13,-14,-15,-16,-19,-20,-21,-22,-36,-37,-38,-39,-40,-41,-31,-28,-29,-30,-42,96,-43,]),'ADD':([14,15,17,18,19,20,26,27,28,29,30,36,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,81,83,84,85,90,94,95,],[-27,32,-23,-24,-25,-26,32,32,32,32,32,-18,-17,-13,-14,-15,-16,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-31,32,-28,-29,-30,32,32,32,]),'MUL':([14,15,17,18,19,20,26,27,28,29,30,36,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,81,83,84,85,90,94,95,],[-27,34,-23,-24,-25,-26,34,34,34,34,34,-18,34,34,34,-15,-16,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-31,34,-28,-29,-30,34,34,34,]),'DIVIDE':([14,15,17,18,19,20,26,27,28,29,30,36,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,81,83,84,85,90,94,95,],[-27,35,-23,-24,-25,-26,35,35,35,35,35,-18,35,35,35,-15,-16,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-31,35,-28,-29,-30,35,35,35,]),"'":([14,15,17,18,19,20,26,27,28,29,30,36,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,81,83,84,85,90,94,95,],[-27,36,-23,-24,-25,-26,36,36,36,36,36,-18,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-31,36,-28,-29,-30,36,36,36,]),'DOTADD':([14,15,17,18,19,20,26,27,28,29,30,36,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,81,83,84,85,90,94,95,],[-27,37,-23,-24,-25,-26,37,37,37,37,37,-18,-17,-13,-14,-15,-16,-19,-20,-21,-22,37,37,37,37,37,37,37,37,37,37,37,-31,37,-28,-29,-30,37,37,37,]),'DOTSUB':([14,15,17,18,19,20,26,27,28,29,30,36,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,81,83,84,85,90,94,95,],[-27,38,-23,-24,-25,-26,38,38,38,38,38,-18,-17,-13,-14,-15,-16,-19,-20,-21,-22,38,38,38,38,38,38,38,38,38,38,38,-31,38,-28,-29,-30,38,38,38,]),'DOTMUL':([14,15,17,18,19,20,26,27,28,29,30,36,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,81,83,84,85,90,94,95,],[-27,39,-23,-24,-25,-26,39,39,39,39,39,-18,-17,-13,-14,-15,-16,39,39,-21,-22,39,39,39,39,39,39,39,39,39,39,39,-31,39,-28,-29,-30,39,39,39,]),'DOTDIVIDE':([14,15,17,18,19,20,26,27,28,29,30,36,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,81,83,84,85,90,94,95,],[-27,40,-23,-24,-25,-26,40,40,40,40,40,-18,-17,-13,-14,-15,-16,40,40,-21,-22,40,40,40,40,40,40,40,40,40,40,40,-31,40,-28,-29,-30,40,40,40,]),'EQ':([14,15,17,18,19,20,26,27,28,29,30,36,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,81,83,84,85,90,94,95,],[-27,41,-23,-24,-25,-26,41,41,41,41,41,-18,-17,-13,-14,-15,-16,-19,-20,-21,-22,-36,-37,-38,-39,-40,-41,41,41,41,41,41,-31,41,-28,-29,-30,41,41,41,]),'NOTEQ':([14,15,17,18,19,20,26,27,28,29,30,36,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,81,83,84,85,90,94,95,],[-27,42,-23,-24,-25,-26,42,42,42,42,42,-18,-17,-13,-14,-15,-16,-19,-20,-21,-22,-36,-37,-38,-39,-40,-41,42,42,42,42,42,-31,42,-28,-29,-30,42,42,42,]),'GREATER':([14,15,17,18,19,20,26,27,28,29,30,36,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,81,83,84,85,90,94,95,],[-27,43,-23,-24,-25,-26,43,43,43,43,43,-18,-17,-13,-14,-15,-16,-19,-20,-21,-22,-36,-37,-38,-39,-40,-41,43,43,43,43,43,-31,43,-28,-29,-30,43,43,43,]),'GREATEREQ':([14,15,17,18,19,20,26,27,28,29,30,36,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,81,83,84,85,90,94,95,],[-27,44,-23,-24,-25,-26,44,44,44,44,44,-18,-17,-13,-14,-15,-16,-19,-20,-21,-22,-36,-37,-38,-39,-40,-41,44,44,44,44,44,-31,44,-28,-29,-30,44,44,44,]),'LESS':([14,15,17,18,19,20,26,27,28,29,30,36,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,81,83,84,85,90,94,95,],[-27,45,-23,-24,-25,-26,45,45,45,45,45,-18,-17,-13,-14,-15,-16,-19,-20,-21,-22,-36,-37,-38,-39,-40,-41,45,45,45,45,45,-31,45,-28,-29,-30,45,45,45,]),'LESSEQ':([14,15,17,18,19,20,26,27,28,29,30,36,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,81,83,84,85,90,94,95,],[-27,46,-23,-24,-25,-26,46,46,46,46,46,-18,-17,-13,-14,-15,-16,-19,-20,-21,-22,-36,-37,-38,-39,-40,-41,46,46,46,46,46,-31,46,-28,-29,-30,46,46,46,]),',':([14,17,18,19,20,30,36,47,53,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,83,84,85,86,88,90,91,95,],[-27,-23,-24,-25,-26,58,-18,-17,80,-13,-14,-15,-16,-19,-20,-21,-22,-36,-37,-38,-39,-40,-41,87,-35,-31,-28,-29,-30,-33,80,-42,87,-43,]),')':([14,17,18,19,20,36,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,83,84,85,90,95,],[-27,-23,-24,-25,-26,-18,-17,-13,-14,-15,-16,-19,-20,-21,-22,-36,-37,-38,-39,-40,-41,82,83,84,85,-31,-28,-29,-30,-42,-43,]),']':([14,17,18,19,20,36,47,53,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,81,83,84,85,86,88,90,91,95,],[-27,-23,-24,-25,-26,-18,-17,79,-13,-14,-15,-16,-19,-20,-21,-22,-36,-37,-38,-39,-40,-41,86,-35,-31,89,-28,-29,-30,-33,-32,-42,-34,-43,]),'ELSE':([14,17,18,19,20,36,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,79,83,84,85,90,95,],[-27,-23,-24,-25,-26,-18,-17,-13,-14,-15,-16,-19,-20,-21,-22,-36,-37,-38,-39,-40,-41,-31,-28,-29,-30,93,-43,]),'(':([21,22,23,24,],[48,49,50,51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,],[3,]),'instruction':([0,3,],[4,7,]),'assignment':([0,3,],[5,5,]),'expression':([8,9,10,11,12,13,16,32,33,34,35,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,58,82,87,92,93,],[15,26,27,28,29,30,47,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,81,90,78,94,95,]),'matrix_expression':([8,9,10,11,12,13,16,32,33,34,35,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,58,82,87,92,93,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'matrix_create':([8,9,10,11,12,13,16,32,33,34,35,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,58,82,87,92,93,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'matrix_rows':([25,80,],[53,88,]),'matrix_elems':([52,87,],[77,91,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',44),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','Mparser.py',47),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','Mparser.py',50),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','Mparser.py',53),
  ('instructions -> instruction','instructions',1,'p_instructions_2','Mparser.py',56),
  ('instruction -> assignment','instruction',1,'p_instruction','Mparser.py',59),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Mparser.py',62),
  ('assignment -> ID ADDASSIGN expression ;','assignment',4,'p_assignment','Mparser.py',63),
  ('assignment -> ID SUBASSIGN expression ;','assignment',4,'p_assignment','Mparser.py',64),
  ('assignment -> ID MULASSIGN expression ;','assignment',4,'p_assignment','Mparser.py',65),
  ('assignment -> ID DIVASSIGN expression ;','assignment',4,'p_assignment','Mparser.py',66),
  ('assignment -> ID [ expression , expression ] = expression ;','assignment',9,'p_assignment','Mparser.py',67),
  ('expression -> expression ADD expression','expression',3,'p_expression_binop','Mparser.py',71),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','Mparser.py',72),
  ('expression -> expression MUL expression','expression',3,'p_expression_binop','Mparser.py',73),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','Mparser.py',74),
  ('expression -> MINUS expression','expression',2,'p_expressions_unaryneg','Mparser.py',78),
  ("expression -> expression '",'expression',2,'p_expressions_transpose','Mparser.py',82),
  ('expression -> expression DOTADD expression','expression',3,'p_expression_matroxop','Mparser.py',86),
  ('expression -> expression DOTSUB expression','expression',3,'p_expression_matroxop','Mparser.py',87),
  ('expression -> expression DOTMUL expression','expression',3,'p_expression_matroxop','Mparser.py',88),
  ('expression -> expression DOTDIVIDE expression','expression',3,'p_expression_matroxop','Mparser.py',89),
  ('expression -> INTNUM','expression',1,'p_expression_number','Mparser.py',93),
  ('expression -> FLOAT','expression',1,'p_expression_number','Mparser.py',94),
  ('expression -> matrix_expression','expression',1,'p_expression_number','Mparser.py',95),
  ('expression -> matrix_create','expression',1,'p_expression_number','Mparser.py',96),
  ('expression -> ID','expression',1,'p_expression_id','Mparser.py',100),
  ('matrix_expression -> ZEROS ( expression )','matrix_expression',4,'p_matrix_expression','Mparser.py',104),
  ('matrix_expression -> ONES ( expression )','matrix_expression',4,'p_matrix_expression','Mparser.py',105),
  ('matrix_expression -> EYE ( expression )','matrix_expression',4,'p_matrix_expression','Mparser.py',106),
  ('matrix_create -> [ matrix_rows ]','matrix_create',3,'p_matrix_create','Mparser.py',110),
  ('matrix_rows -> matrix_rows , matrix_rows','matrix_rows',3,'p_matrix_rows','Mparser.py',114),
  ('matrix_rows -> [ matrix_elems ]','matrix_rows',3,'p_matrix_rows','Mparser.py',115),
  ('matrix_elems -> matrix_elems , matrix_elems','matrix_elems',3,'p_matrix_elems','Mparser.py',119),
  ('matrix_elems -> expression','matrix_elems',1,'p_matrix_elems','Mparser.py',120),
  ('expression -> expression EQ expression','expression',3,'p_expression_operations','Mparser.py',125),
  ('expression -> expression NOTEQ expression','expression',3,'p_expression_operations','Mparser.py',126),
  ('expression -> expression GREATER expression','expression',3,'p_expression_operations','Mparser.py',127),
  ('expression -> expression GREATEREQ expression','expression',3,'p_expression_operations','Mparser.py',128),
  ('expression -> expression LESS expression','expression',3,'p_expression_operations','Mparser.py',129),
  ('expression -> expression LESSEQ expression','expression',3,'p_expression_operations','Mparser.py',130),
  ('expression -> IF ( expression ) expression','expression',5,'p_expression_if_else','Mparser.py',136),
  ('expression -> IF ( expression ) expression ELSE expression','expression',7,'p_expression_if_else','Mparser.py',137),
]
