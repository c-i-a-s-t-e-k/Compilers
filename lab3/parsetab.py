
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFXnonassocELSEleftDOTADDDOTSUBleftADDMINUSleftDOTMULDOTDIVIDEleftDIVIDEMULrightUMINUSADD ADDASSIGN BREAK CONTINUE DIVASSIGN DIVIDE DOTADD DOTDIVIDE DOTMUL DOTSUB ELSE EQ EYE FLOAT FOR GREATER GREATEREQ ID IF INTNUM LESS LESSEQ MINUS MUL MULASSIGN NOTEQ ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSprogram : instructions_optinstructions_opt : instructions instructions_opt : instructions : instructions instruction instructions : instruction instruction : assignment \';\'\n                    | if_stmt\n                    | loops\n                    | BREAK \';\'\n                    | CONTINUE \';\'\n                    | return_expr \';\'instruction : PRINT create_stmt \';\'instruction : \'{\' instructions \'}\'assignment : ID \'=\' expression\n                    | ID ADDASSIGN expression\n                    | ID SUBASSIGN expression\n                    | ID MULASSIGN expression \n                    | ID DIVASSIGN expression\n                    | ID \'[\' expression \',\' expression \']\' ADDASSIGN expression\n                    | ID \'[\' expression \',\' expression \']\' SUBASSIGN expression\n                    | ID \'[\' expression \',\' expression \']\' MULASSIGN expression\n                    | ID \'[\' expression \',\' expression \']\' DIVASSIGN expression\n                    | ID \'[\' expression \',\' expression \']\' \'=\' expression expression : expression ADD expression\n                    | expression MINUS expression\n                    | expression MUL expression\n                    | expression DIVIDE expressionexpression : MINUS expression %prec UMINUSexpression : ID "\'"expression : expression DOTADD expression\n                    | expression DOTSUB expression\n                    | expression DOTMUL expression\n                    | expression DOTDIVIDE expressionexpression : matrix_expression\n                    | matrix_createexpression : INTNUMexpression : FLOATexpression : IDmatrix_expression : ZEROS \'(\' expression \')\' matrix_expression : ONES \'(\' expression \')\' matrix_expression : EYE \'(\' expression \')\' matrix_create : \'[\' matrix_rows \']\'matrix_rows : \'[\' matrix_elems \']\' \',\' matrix_rows\n                    | \'[\' matrix_elems \']\'matrix_elems : expression \',\' matrix_elems\n                    | expressioncondition : expression GREATER expression\n                    | expression LESS expression\n                    | expression GREATEREQ expression\n                    | expression LESSEQ expression\n                    | expression NOTEQ expression\n                    | expression EQ expressionif_stmt : IF \'(\' condition \')\' instruction %prec IFX\n                | IF \'(\' condition \')\' instruction ELSE instruction\n                create_stmt : p_print_listp_print_list : STRING p_print_list : p_print_list \',\' expression\n                    | expressionloops : while_l\n                | for_lwhile_l : WHILE "(" condition ")" instructionfor_l : FOR ID "=" expression ":" expression instructionreturn_expr : RETURN\n                    | RETURN expression'
    
_lr_action_items = {'$end':([0,1,2,3,4,6,7,15,16,20,21,22,23,24,50,67,109,116,129,130,],[-3,0,-1,-2,-5,-7,-8,-59,-60,-4,-6,-9,-10,-11,-12,-13,-53,-61,-54,-62,]),'BREAK':([0,3,4,6,7,12,15,16,20,21,22,23,24,30,31,32,33,34,39,50,60,61,67,79,80,81,82,83,84,85,86,92,94,101,103,104,105,109,116,121,122,129,130,],[8,8,-5,-7,-8,8,-59,-60,-4,-6,-9,-10,-11,-38,-34,-35,-36,-37,8,-12,-28,-29,-13,-24,-25,-26,-27,-30,-31,-32,-33,-42,8,8,-39,-40,-41,-53,-61,8,8,-54,-62,]),'CONTINUE':([0,3,4,6,7,12,15,16,20,21,22,23,24,30,31,32,33,34,39,50,60,61,67,79,80,81,82,83,84,85,86,92,94,101,103,104,105,109,116,121,122,129,130,],[9,9,-5,-7,-8,9,-59,-60,-4,-6,-9,-10,-11,-38,-34,-35,-36,-37,9,-12,-28,-29,-13,-24,-25,-26,-27,-30,-31,-32,-33,-42,9,9,-39,-40,-41,-53,-61,9,9,-54,-62,]),'PRINT':([0,3,4,6,7,12,15,16,20,21,22,23,24,30,31,32,33,34,39,50,60,61,67,79,80,81,82,83,84,85,86,92,94,101,103,104,105,109,116,121,122,129,130,],[11,11,-5,-7,-8,11,-59,-60,-4,-6,-9,-10,-11,-38,-34,-35,-36,-37,11,-12,-28,-29,-13,-24,-25,-26,-27,-30,-31,-32,-33,-42,11,11,-39,-40,-41,-53,-61,11,11,-54,-62,]),'{':([0,3,4,6,7,12,15,16,20,21,22,23,24,30,31,32,33,34,39,50,60,61,67,79,80,81,82,83,84,85,86,92,94,101,103,104,105,109,116,121,122,129,130,],[12,12,-5,-7,-8,12,-59,-60,-4,-6,-9,-10,-11,-38,-34,-35,-36,-37,12,-12,-28,-29,-13,-24,-25,-26,-27,-30,-31,-32,-33,-42,12,12,-39,-40,-41,-53,-61,12,12,-54,-62,]),'ID':([0,3,4,6,7,11,12,15,16,17,19,20,21,22,23,24,29,30,31,32,33,34,39,40,41,42,43,44,45,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,77,79,80,81,82,83,84,85,86,92,93,94,95,96,97,98,99,100,101,103,104,105,107,109,116,117,121,122,124,125,126,127,128,129,130,],[13,13,-5,-7,-8,30,13,-59,-60,30,49,-4,-6,-9,-10,-11,30,-38,-34,-35,-36,-37,13,30,30,30,30,30,30,30,30,-12,30,30,30,30,30,30,30,30,30,-28,-29,30,30,30,30,-13,30,-24,-25,-26,-27,-30,-31,-32,-33,-42,30,13,30,30,30,30,30,30,13,-39,-40,-41,30,-53,-61,30,13,13,30,30,30,30,30,-54,-62,]),'IF':([0,3,4,6,7,12,15,16,20,21,22,23,24,30,31,32,33,34,39,50,60,61,67,79,80,81,82,83,84,85,86,92,94,101,103,104,105,109,116,121,122,129,130,],[14,14,-5,-7,-8,14,-59,-60,-4,-6,-9,-10,-11,-38,-34,-35,-36,-37,14,-12,-28,-29,-13,-24,-25,-26,-27,-30,-31,-32,-33,-42,14,14,-39,-40,-41,-53,-61,14,14,-54,-62,]),'RETURN':([0,3,4,6,7,12,15,16,20,21,22,23,24,30,31,32,33,34,39,50,60,61,67,79,80,81,82,83,84,85,86,92,94,101,103,104,105,109,116,121,122,129,130,],[17,17,-5,-7,-8,17,-59,-60,-4,-6,-9,-10,-11,-38,-34,-35,-36,-37,17,-12,-28,-29,-13,-24,-25,-26,-27,-30,-31,-32,-33,-42,17,17,-39,-40,-41,-53,-61,17,17,-54,-62,]),'WHILE':([0,3,4,6,7,12,15,16,20,21,22,23,24,30,31,32,33,34,39,50,60,61,67,79,80,81,82,83,84,85,86,92,94,101,103,104,105,109,116,121,122,129,130,],[18,18,-5,-7,-8,18,-59,-60,-4,-6,-9,-10,-11,-38,-34,-35,-36,-37,18,-12,-28,-29,-13,-24,-25,-26,-27,-30,-31,-32,-33,-42,18,18,-39,-40,-41,-53,-61,18,18,-54,-62,]),'FOR':([0,3,4,6,7,12,15,16,20,21,22,23,24,30,31,32,33,34,39,50,60,61,67,79,80,81,82,83,84,85,86,92,94,101,103,104,105,109,116,121,122,129,130,],[19,19,-5,-7,-8,19,-59,-60,-4,-6,-9,-10,-11,-38,-34,-35,-36,-37,19,-12,-28,-29,-13,-24,-25,-26,-27,-30,-31,-32,-33,-42,19,19,-39,-40,-41,-53,-61,19,19,-54,-62,]),'}':([4,6,7,15,16,20,21,22,23,24,39,50,67,109,116,129,130,],[-5,-7,-8,-59,-60,-4,-6,-9,-10,-11,67,-12,-13,-53,-61,-54,-62,]),';':([5,8,9,10,17,25,26,27,28,30,31,32,33,34,47,60,61,68,69,70,71,72,78,79,80,81,82,83,84,85,86,92,103,104,105,131,132,133,134,135,],[21,22,23,24,-63,50,-55,-56,-58,-38,-34,-35,-36,-37,-64,-28,-29,-14,-15,-16,-17,-18,-57,-24,-25,-26,-27,-30,-31,-32,-33,-42,-39,-40,-41,-19,-20,-21,-22,-23,]),'ELSE':([6,7,15,16,21,22,23,24,50,67,109,116,129,130,],[-7,-8,-59,-60,-6,-9,-10,-11,-12,-13,121,-61,-54,-62,]),'STRING':([11,],[27,]),'MINUS':([11,17,28,29,30,31,32,33,34,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,75,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,97,98,99,100,102,103,104,105,107,108,110,111,112,113,114,115,117,122,124,125,126,127,128,131,132,133,134,135,],[29,29,53,29,-38,-34,-35,-36,-37,29,29,29,29,29,29,29,53,29,29,29,29,29,29,29,29,29,29,-28,-29,29,29,29,29,53,53,53,53,53,53,53,29,53,-24,-25,-26,-27,53,53,-32,-33,53,53,53,53,-42,29,29,29,29,29,29,29,53,-39,-40,-41,29,53,53,53,53,53,53,53,29,53,29,29,29,29,29,53,53,53,53,53,]),'INTNUM':([11,17,29,40,41,42,43,44,45,46,48,51,52,53,54,55,56,57,58,59,62,63,64,65,77,93,95,96,97,98,99,100,107,117,124,125,126,127,128,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'FLOAT':([11,17,29,40,41,42,43,44,45,46,48,51,52,53,54,55,56,57,58,59,62,63,64,65,77,93,95,96,97,98,99,100,107,117,124,125,126,127,128,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'ZEROS':([11,17,29,40,41,42,43,44,45,46,48,51,52,53,54,55,56,57,58,59,62,63,64,65,77,93,95,96,97,98,99,100,107,117,124,125,126,127,128,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'ONES':([11,17,29,40,41,42,43,44,45,46,48,51,52,53,54,55,56,57,58,59,62,63,64,65,77,93,95,96,97,98,99,100,107,117,124,125,126,127,128,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'EYE':([11,17,29,40,41,42,43,44,45,46,48,51,52,53,54,55,56,57,58,59,62,63,64,65,77,93,95,96,97,98,99,100,107,117,124,125,126,127,128,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'[':([11,13,17,29,38,40,41,42,43,44,45,46,48,51,52,53,54,55,56,57,58,59,62,63,64,65,77,93,95,96,97,98,99,100,107,117,118,124,125,126,127,128,],[38,45,38,38,65,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,65,38,38,38,38,38,]),'=':([13,49,120,],[40,77,128,]),'ADDASSIGN':([13,120,],[41,124,]),'SUBASSIGN':([13,120,],[42,125,]),'MULASSIGN':([13,120,],[43,126,]),'DIVASSIGN':([13,120,],[44,127,]),'(':([14,18,35,36,37,],[46,48,62,63,64,]),',':([26,27,28,30,31,32,33,34,60,61,73,78,79,80,81,82,83,84,85,86,91,92,103,104,105,106,],[51,-56,-58,-38,-34,-35,-36,-37,-28,-29,93,-57,-24,-25,-26,-27,-30,-31,-32,-33,107,-42,-39,-40,-41,118,]),'ADD':([28,30,31,32,33,34,47,60,61,68,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,91,92,102,103,104,105,108,110,111,112,113,114,115,122,131,132,133,134,135,],[52,-38,-34,-35,-36,-37,52,-28,-29,52,52,52,52,52,52,52,52,-24,-25,-26,-27,52,52,-32,-33,52,52,52,52,-42,52,-39,-40,-41,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'MUL':([28,30,31,32,33,34,47,60,61,68,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,91,92,102,103,104,105,108,110,111,112,113,114,115,122,131,132,133,134,135,],[54,-38,-34,-35,-36,-37,54,-28,-29,54,54,54,54,54,54,54,54,54,54,-26,-27,54,54,54,54,54,54,54,54,-42,54,-39,-40,-41,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'DIVIDE':([28,30,31,32,33,34,47,60,61,68,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,91,92,102,103,104,105,108,110,111,112,113,114,115,122,131,132,133,134,135,],[55,-38,-34,-35,-36,-37,55,-28,-29,55,55,55,55,55,55,55,55,55,55,-26,-27,55,55,55,55,55,55,55,55,-42,55,-39,-40,-41,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'DOTADD':([28,30,31,32,33,34,47,60,61,68,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,91,92,102,103,104,105,108,110,111,112,113,114,115,122,131,132,133,134,135,],[56,-38,-34,-35,-36,-37,56,-28,-29,56,56,56,56,56,56,56,56,-24,-25,-26,-27,-30,-31,-32,-33,56,56,56,56,-42,56,-39,-40,-41,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'DOTSUB':([28,30,31,32,33,34,47,60,61,68,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,91,92,102,103,104,105,108,110,111,112,113,114,115,122,131,132,133,134,135,],[57,-38,-34,-35,-36,-37,57,-28,-29,57,57,57,57,57,57,57,57,-24,-25,-26,-27,-30,-31,-32,-33,57,57,57,57,-42,57,-39,-40,-41,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'DOTMUL':([28,30,31,32,33,34,47,60,61,68,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,91,92,102,103,104,105,108,110,111,112,113,114,115,122,131,132,133,134,135,],[58,-38,-34,-35,-36,-37,58,-28,-29,58,58,58,58,58,58,58,58,58,58,-26,-27,58,58,-32,-33,58,58,58,58,-42,58,-39,-40,-41,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'DOTDIVIDE':([28,30,31,32,33,34,47,60,61,68,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,91,92,102,103,104,105,108,110,111,112,113,114,115,122,131,132,133,134,135,],[59,-38,-34,-35,-36,-37,59,-28,-29,59,59,59,59,59,59,59,59,59,59,-26,-27,59,59,-32,-33,59,59,59,59,-42,59,-39,-40,-41,59,59,59,59,59,59,59,59,59,59,59,59,59,]),"'":([30,],[61,]),'GREATER':([30,31,32,33,34,60,61,75,79,80,81,82,83,84,85,86,92,103,104,105,],[-38,-34,-35,-36,-37,-28,-29,95,-24,-25,-26,-27,-30,-31,-32,-33,-42,-39,-40,-41,]),'LESS':([30,31,32,33,34,60,61,75,79,80,81,82,83,84,85,86,92,103,104,105,],[-38,-34,-35,-36,-37,-28,-29,96,-24,-25,-26,-27,-30,-31,-32,-33,-42,-39,-40,-41,]),'GREATEREQ':([30,31,32,33,34,60,61,75,79,80,81,82,83,84,85,86,92,103,104,105,],[-38,-34,-35,-36,-37,-28,-29,97,-24,-25,-26,-27,-30,-31,-32,-33,-42,-39,-40,-41,]),'LESSEQ':([30,31,32,33,34,60,61,75,79,80,81,82,83,84,85,86,92,103,104,105,],[-38,-34,-35,-36,-37,-28,-29,98,-24,-25,-26,-27,-30,-31,-32,-33,-42,-39,-40,-41,]),'NOTEQ':([30,31,32,33,34,60,61,75,79,80,81,82,83,84,85,86,92,103,104,105,],[-38,-34,-35,-36,-37,-28,-29,99,-24,-25,-26,-27,-30,-31,-32,-33,-42,-39,-40,-41,]),'EQ':([30,31,32,33,34,60,61,75,79,80,81,82,83,84,85,86,92,103,104,105,],[-38,-34,-35,-36,-37,-28,-29,100,-24,-25,-26,-27,-30,-31,-32,-33,-42,-39,-40,-41,]),')':([30,31,32,33,34,60,61,74,76,79,80,81,82,83,84,85,86,87,88,89,92,103,104,105,110,111,112,113,114,115,],[-38,-34,-35,-36,-37,-28,-29,94,101,-24,-25,-26,-27,-30,-31,-32,-33,103,104,105,-42,-39,-40,-41,-47,-48,-49,-50,-51,-52,]),']':([30,31,32,33,34,60,61,66,79,80,81,82,83,84,85,86,90,91,92,103,104,105,106,108,119,123,],[-38,-34,-35,-36,-37,-28,-29,92,-24,-25,-26,-27,-30,-31,-32,-33,106,-46,-42,-39,-40,-41,-44,120,-45,-43,]),':':([30,31,32,33,34,60,61,79,80,81,82,83,84,85,86,92,102,103,104,105,],[-38,-34,-35,-36,-37,-28,-29,-24,-25,-26,-27,-30,-31,-32,-33,-42,117,-39,-40,-41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,12,],[3,39,]),'instruction':([0,3,12,39,94,101,121,122,],[4,20,4,20,109,116,129,130,]),'assignment':([0,3,12,39,94,101,121,122,],[5,5,5,5,5,5,5,5,]),'if_stmt':([0,3,12,39,94,101,121,122,],[6,6,6,6,6,6,6,6,]),'loops':([0,3,12,39,94,101,121,122,],[7,7,7,7,7,7,7,7,]),'return_expr':([0,3,12,39,94,101,121,122,],[10,10,10,10,10,10,10,10,]),'while_l':([0,3,12,39,94,101,121,122,],[15,15,15,15,15,15,15,15,]),'for_l':([0,3,12,39,94,101,121,122,],[16,16,16,16,16,16,16,16,]),'create_stmt':([11,],[25,]),'p_print_list':([11,],[26,]),'expression':([11,17,29,40,41,42,43,44,45,46,48,51,52,53,54,55,56,57,58,59,62,63,64,65,77,93,95,96,97,98,99,100,107,117,124,125,126,127,128,],[28,47,60,68,69,70,71,72,73,75,75,78,79,80,81,82,83,84,85,86,87,88,89,91,102,108,110,111,112,113,114,115,91,122,131,132,133,134,135,]),'matrix_expression':([11,17,29,40,41,42,43,44,45,46,48,51,52,53,54,55,56,57,58,59,62,63,64,65,77,93,95,96,97,98,99,100,107,117,124,125,126,127,128,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'matrix_create':([11,17,29,40,41,42,43,44,45,46,48,51,52,53,54,55,56,57,58,59,62,63,64,65,77,93,95,96,97,98,99,100,107,117,124,125,126,127,128,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'matrix_rows':([38,118,],[66,123,]),'condition':([46,48,],[74,76,]),'matrix_elems':([65,107,],[90,119,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',30),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','Mparser.py',34),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','Mparser.py',38),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','Mparser.py',42),
  ('instructions -> instruction','instructions',1,'p_instructions_2','Mparser.py',46),
  ('instruction -> assignment ;','instruction',2,'p_instruction','Mparser.py',50),
  ('instruction -> if_stmt','instruction',1,'p_instruction','Mparser.py',51),
  ('instruction -> loops','instruction',1,'p_instruction','Mparser.py',52),
  ('instruction -> BREAK ;','instruction',2,'p_instruction','Mparser.py',53),
  ('instruction -> CONTINUE ;','instruction',2,'p_instruction','Mparser.py',54),
  ('instruction -> return_expr ;','instruction',2,'p_instruction','Mparser.py',55),
  ('instruction -> PRINT create_stmt ;','instruction',3,'p_instruction_2','Mparser.py',59),
  ('instruction -> { instructions }','instruction',3,'p_instruction_brackets','Mparser.py',63),
  ('assignment -> ID = expression','assignment',3,'p_assignment','Mparser.py',68),
  ('assignment -> ID ADDASSIGN expression','assignment',3,'p_assignment','Mparser.py',69),
  ('assignment -> ID SUBASSIGN expression','assignment',3,'p_assignment','Mparser.py',70),
  ('assignment -> ID MULASSIGN expression','assignment',3,'p_assignment','Mparser.py',71),
  ('assignment -> ID DIVASSIGN expression','assignment',3,'p_assignment','Mparser.py',72),
  ('assignment -> ID [ expression , expression ] ADDASSIGN expression','assignment',8,'p_assignment','Mparser.py',73),
  ('assignment -> ID [ expression , expression ] SUBASSIGN expression','assignment',8,'p_assignment','Mparser.py',74),
  ('assignment -> ID [ expression , expression ] MULASSIGN expression','assignment',8,'p_assignment','Mparser.py',75),
  ('assignment -> ID [ expression , expression ] DIVASSIGN expression','assignment',8,'p_assignment','Mparser.py',76),
  ('assignment -> ID [ expression , expression ] = expression','assignment',8,'p_assignment','Mparser.py',77),
  ('expression -> expression ADD expression','expression',3,'p_expression_binop','Mparser.py',84),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','Mparser.py',85),
  ('expression -> expression MUL expression','expression',3,'p_expression_binop','Mparser.py',86),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','Mparser.py',87),
  ('expression -> MINUS expression','expression',2,'p_expressions_unaryneg','Mparser.py',91),
  ("expression -> ID '",'expression',2,'p_expressions_transpose','Mparser.py',95),
  ('expression -> expression DOTADD expression','expression',3,'p_expression_matrixop','Mparser.py',99),
  ('expression -> expression DOTSUB expression','expression',3,'p_expression_matrixop','Mparser.py',100),
  ('expression -> expression DOTMUL expression','expression',3,'p_expression_matrixop','Mparser.py',101),
  ('expression -> expression DOTDIVIDE expression','expression',3,'p_expression_matrixop','Mparser.py',102),
  ('expression -> matrix_expression','expression',1,'p_expression_number','Mparser.py',106),
  ('expression -> matrix_create','expression',1,'p_expression_number','Mparser.py',107),
  ('expression -> INTNUM','expression',1,'p_intnum','Mparser.py',111),
  ('expression -> FLOAT','expression',1,'p_float','Mparser.py',115),
  ('expression -> ID','expression',1,'p_expression_id','Mparser.py',119),
  ('matrix_expression -> ZEROS ( expression )','matrix_expression',4,'p_matrix_expression_z','Mparser.py',123),
  ('matrix_expression -> ONES ( expression )','matrix_expression',4,'p_matrix_expression_o','Mparser.py',127),
  ('matrix_expression -> EYE ( expression )','matrix_expression',4,'p_matrix_expression_e','Mparser.py',131),
  ('matrix_create -> [ matrix_rows ]','matrix_create',3,'p_matrix_create','Mparser.py',135),
  ('matrix_rows -> [ matrix_elems ] , matrix_rows','matrix_rows',5,'p_matrix_rows','Mparser.py',139),
  ('matrix_rows -> [ matrix_elems ]','matrix_rows',3,'p_matrix_rows','Mparser.py',140),
  ('matrix_elems -> expression , matrix_elems','matrix_elems',3,'p_matrix_elems','Mparser.py',147),
  ('matrix_elems -> expression','matrix_elems',1,'p_matrix_elems','Mparser.py',148),
  ('condition -> expression GREATER expression','condition',3,'p_condition','Mparser.py',155),
  ('condition -> expression LESS expression','condition',3,'p_condition','Mparser.py',156),
  ('condition -> expression GREATEREQ expression','condition',3,'p_condition','Mparser.py',157),
  ('condition -> expression LESSEQ expression','condition',3,'p_condition','Mparser.py',158),
  ('condition -> expression NOTEQ expression','condition',3,'p_condition','Mparser.py',159),
  ('condition -> expression EQ expression','condition',3,'p_condition','Mparser.py',160),
  ('if_stmt -> IF ( condition ) instruction','if_stmt',5,'p_if_stmt','Mparser.py',164),
  ('if_stmt -> IF ( condition ) instruction ELSE instruction','if_stmt',7,'p_if_stmt','Mparser.py',165),
  ('create_stmt -> p_print_list','create_stmt',1,'p_create_stmt','Mparser.py',173),
  ('p_print_list -> STRING','p_print_list',1,'p_print_list_1','Mparser.py',177),
  ('p_print_list -> p_print_list , expression','p_print_list',3,'p_print_list_2','Mparser.py',181),
  ('p_print_list -> expression','p_print_list',1,'p_print_list_2','Mparser.py',182),
  ('loops -> while_l','loops',1,'p_loops','Mparser.py',190),
  ('loops -> for_l','loops',1,'p_loops','Mparser.py',191),
  ('while_l -> WHILE ( condition ) instruction','while_l',5,'p_while_l','Mparser.py',195),
  ('for_l -> FOR ID = expression : expression instruction','for_l',7,'p_for_l','Mparser.py',199),
  ('return_expr -> RETURN','return_expr',1,'p_return_expr','Mparser.py',203),
  ('return_expr -> RETURN expression','return_expr',2,'p_return_expr','Mparser.py',204),
]
