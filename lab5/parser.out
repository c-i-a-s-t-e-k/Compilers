Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> <empty>
Rule 4     instructions -> instructions instruction
Rule 5     instructions -> instruction
Rule 6     instruction -> assignment
Rule 7     instruction -> if_stmt
Rule 8     instruction -> loops
Rule 9     instruction -> break
Rule 10    instruction -> continue
Rule 11    instruction -> return_expr ;
Rule 12    instruction -> PRINT create_stmt ;
Rule 13    instruction -> { instructions }
Rule 14    continue -> CONTINUE ;
Rule 15    break -> BREAK ;
Rule 16    id_change -> ID
Rule 17    id_change -> ID [ expression , expression ]
Rule 18    id_change -> ID [ expression ]
Rule 19    assignment -> id_change = expression ;
Rule 20    assignment -> id_change ADDASSIGN expression ;
Rule 21    assignment -> id_change SUBASSIGN expression ;
Rule 22    assignment -> id_change MULASSIGN expression ;
Rule 23    assignment -> id_change DIVASSIGN expression ;
Rule 24    assignment -> id_change = id_change ;
Rule 25    assignment -> id_change ADDASSIGN id_change ;
Rule 26    assignment -> id_change SUBASSIGN id_change ;
Rule 27    assignment -> id_change MULASSIGN id_change ;
Rule 28    assignment -> id_change DIVASSIGN id_change ;
Rule 29    expression -> expression ADD expression
Rule 30    expression -> expression MINUS expression
Rule 31    expression -> expression MUL expression
Rule 32    expression -> expression DIVIDE expression
Rule 33    expression -> MINUS expression
Rule 34    expression -> ID '
Rule 35    expression -> expression DOTADD expression
Rule 36    expression -> expression DOTSUB expression
Rule 37    expression -> expression DOTMUL expression
Rule 38    expression -> expression DOTDIVIDE expression
Rule 39    expression -> matrix_expression
Rule 40    expression -> matrix_create
Rule 41    expression -> vector_create
Rule 42    expression -> INTNUM
Rule 43    expression -> FLOAT
Rule 44    expression -> ID
Rule 45    matrix_expression -> ZEROS ( expression )
Rule 46    matrix_expression -> ONES ( expression )
Rule 47    matrix_expression -> EYE ( expression )
Rule 48    matrix_create -> [ matrix_rows ]
Rule 49    vector_create -> [ vector_elems ]
Rule 50    vector_elems -> expression , vector_elems
Rule 51    vector_elems -> expression
Rule 52    matrix_rows -> [ matrix_elems ] , matrix_rows
Rule 53    matrix_rows -> [ matrix_elems ]
Rule 54    matrix_elems -> expression , matrix_elems
Rule 55    matrix_elems -> expression
Rule 56    condition -> expression GREATER expression
Rule 57    condition -> expression LESS expression
Rule 58    condition -> expression GREATEREQ expression
Rule 59    condition -> expression LESSEQ expression
Rule 60    condition -> expression NOTEQ expression
Rule 61    condition -> expression EQ expression
Rule 62    if_stmt -> IF ( condition ) instruction
Rule 63    if_stmt -> IF ( condition ) instruction ELSE instruction
Rule 64    create_stmt -> p_print_list
Rule 65    p_print_list -> STRING
Rule 66    p_print_list -> p_print_list , expression
Rule 67    p_print_list -> expression
Rule 68    loops -> while_l
Rule 69    loops -> for_l
Rule 70    while_l -> WHILE ( condition ) instruction
Rule 71    for_l -> FOR ID = expression : expression instruction
Rule 72    return_expr -> RETURN
Rule 73    return_expr -> RETURN expression

Terminals, with rules where they appear

'                    : 34
(                    : 45 46 47 62 63 70
)                    : 45 46 47 62 63 70
,                    : 17 50 52 54 66
:                    : 71
;                    : 11 12 14 15 19 20 21 22 23 24 25 26 27 28
=                    : 19 24 71
ADD                  : 29
ADDASSIGN            : 20 25
BREAK                : 15
CONTINUE             : 14
DIVASSIGN            : 23 28
DIVIDE               : 32
DOTADD               : 35
DOTDIVIDE            : 38
DOTMUL               : 37
DOTSUB               : 36
ELSE                 : 63
EQ                   : 61
EYE                  : 47
FLOAT                : 43
FOR                  : 71
GREATER              : 56
GREATEREQ            : 58
ID                   : 16 17 18 34 44 71
IF                   : 62 63
INTNUM               : 42
LESS                 : 57
LESSEQ               : 59
MINUS                : 30 33
MUL                  : 31
MULASSIGN            : 22 27
NOTEQ                : 60
ONES                 : 46
PRINT                : 12
RETURN               : 72 73
STRING               : 65
SUBASSIGN            : 21 26
WHILE                : 70
ZEROS                : 45
[                    : 17 18 48 49 52 53
]                    : 17 18 48 49 52 53
error                : 
{                    : 13
}                    : 13

Nonterminals, with rules where they appear

assignment           : 6
break                : 9
condition            : 62 63 70
continue             : 10
create_stmt          : 12
expression           : 17 17 18 19 20 21 22 23 29 29 30 30 31 31 32 32 33 35 35 36 36 37 37 38 38 45 46 47 50 51 54 55 56 56 57 57 58 58 59 59 60 60 61 61 66 67 71 71 73
for_l                : 69
id_change            : 19 20 21 22 23 24 24 25 25 26 26 27 27 28 28
if_stmt              : 7
instruction          : 4 5 62 63 63 70 71
instructions         : 2 4 13
instructions_opt     : 1
loops                : 8
matrix_create        : 40
matrix_elems         : 52 53 54
matrix_expression    : 39
matrix_rows          : 48 52
p_print_list         : 64 66
program              : 0
return_expr          : 11
vector_create        : 41
vector_elems         : 49 50
while_l              : 68

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> .
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . assignment
    (7) instruction -> . if_stmt
    (8) instruction -> . loops
    (9) instruction -> . break
    (10) instruction -> . continue
    (11) instruction -> . return_expr ;
    (12) instruction -> . PRINT create_stmt ;
    (13) instruction -> . { instructions }
    (19) assignment -> . id_change = expression ;
    (20) assignment -> . id_change ADDASSIGN expression ;
    (21) assignment -> . id_change SUBASSIGN expression ;
    (22) assignment -> . id_change MULASSIGN expression ;
    (23) assignment -> . id_change DIVASSIGN expression ;
    (24) assignment -> . id_change = id_change ;
    (25) assignment -> . id_change ADDASSIGN id_change ;
    (26) assignment -> . id_change SUBASSIGN id_change ;
    (27) assignment -> . id_change MULASSIGN id_change ;
    (28) assignment -> . id_change DIVASSIGN id_change ;
    (62) if_stmt -> . IF ( condition ) instruction
    (63) if_stmt -> . IF ( condition ) instruction ELSE instruction
    (68) loops -> . while_l
    (69) loops -> . for_l
    (15) break -> . BREAK ;
    (14) continue -> . CONTINUE ;
    (72) return_expr -> . RETURN
    (73) return_expr -> . RETURN expression
    (16) id_change -> . ID
    (17) id_change -> . ID [ expression , expression ]
    (18) id_change -> . ID [ expression ]
    (70) while_l -> . WHILE ( condition ) instruction
    (71) for_l -> . FOR ID = expression : expression instruction

    $end            reduce using rule 3 (instructions_opt -> .)
    PRINT           shift and go to state 11
    {               shift and go to state 12
    IF              shift and go to state 14
    BREAK           shift and go to state 17
    CONTINUE        shift and go to state 18
    RETURN          shift and go to state 19
    ID              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    instruction                    shift and go to state 4
    assignment                     shift and go to state 5
    if_stmt                        shift and go to state 6
    loops                          shift and go to state 7
    break                          shift and go to state 8
    continue                       shift and go to state 9
    return_expr                    shift and go to state 10
    id_change                      shift and go to state 13
    while_l                        shift and go to state 15
    for_l                          shift and go to state 16

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . assignment
    (7) instruction -> . if_stmt
    (8) instruction -> . loops
    (9) instruction -> . break
    (10) instruction -> . continue
    (11) instruction -> . return_expr ;
    (12) instruction -> . PRINT create_stmt ;
    (13) instruction -> . { instructions }
    (19) assignment -> . id_change = expression ;
    (20) assignment -> . id_change ADDASSIGN expression ;
    (21) assignment -> . id_change SUBASSIGN expression ;
    (22) assignment -> . id_change MULASSIGN expression ;
    (23) assignment -> . id_change DIVASSIGN expression ;
    (24) assignment -> . id_change = id_change ;
    (25) assignment -> . id_change ADDASSIGN id_change ;
    (26) assignment -> . id_change SUBASSIGN id_change ;
    (27) assignment -> . id_change MULASSIGN id_change ;
    (28) assignment -> . id_change DIVASSIGN id_change ;
    (62) if_stmt -> . IF ( condition ) instruction
    (63) if_stmt -> . IF ( condition ) instruction ELSE instruction
    (68) loops -> . while_l
    (69) loops -> . for_l
    (15) break -> . BREAK ;
    (14) continue -> . CONTINUE ;
    (72) return_expr -> . RETURN
    (73) return_expr -> . RETURN expression
    (16) id_change -> . ID
    (17) id_change -> . ID [ expression , expression ]
    (18) id_change -> . ID [ expression ]
    (70) while_l -> . WHILE ( condition ) instruction
    (71) for_l -> . FOR ID = expression : expression instruction

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    PRINT           shift and go to state 11
    {               shift and go to state 12
    IF              shift and go to state 14
    BREAK           shift and go to state 17
    CONTINUE        shift and go to state 18
    RETURN          shift and go to state 19
    ID              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22

    instruction                    shift and go to state 23
    assignment                     shift and go to state 5
    if_stmt                        shift and go to state 6
    loops                          shift and go to state 7
    break                          shift and go to state 8
    continue                       shift and go to state 9
    return_expr                    shift and go to state 10
    id_change                      shift and go to state 13
    while_l                        shift and go to state 15
    for_l                          shift and go to state 16

state 4

    (5) instructions -> instruction .

    PRINT           reduce using rule 5 (instructions -> instruction .)
    {               reduce using rule 5 (instructions -> instruction .)
    IF              reduce using rule 5 (instructions -> instruction .)
    BREAK           reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)
    }               reduce using rule 5 (instructions -> instruction .)


state 5

    (6) instruction -> assignment .

    PRINT           reduce using rule 6 (instruction -> assignment .)
    {               reduce using rule 6 (instruction -> assignment .)
    IF              reduce using rule 6 (instruction -> assignment .)
    BREAK           reduce using rule 6 (instruction -> assignment .)
    CONTINUE        reduce using rule 6 (instruction -> assignment .)
    RETURN          reduce using rule 6 (instruction -> assignment .)
    ID              reduce using rule 6 (instruction -> assignment .)
    WHILE           reduce using rule 6 (instruction -> assignment .)
    FOR             reduce using rule 6 (instruction -> assignment .)
    $end            reduce using rule 6 (instruction -> assignment .)
    }               reduce using rule 6 (instruction -> assignment .)
    ELSE            reduce using rule 6 (instruction -> assignment .)


state 6

    (7) instruction -> if_stmt .

    PRINT           reduce using rule 7 (instruction -> if_stmt .)
    {               reduce using rule 7 (instruction -> if_stmt .)
    IF              reduce using rule 7 (instruction -> if_stmt .)
    BREAK           reduce using rule 7 (instruction -> if_stmt .)
    CONTINUE        reduce using rule 7 (instruction -> if_stmt .)
    RETURN          reduce using rule 7 (instruction -> if_stmt .)
    ID              reduce using rule 7 (instruction -> if_stmt .)
    WHILE           reduce using rule 7 (instruction -> if_stmt .)
    FOR             reduce using rule 7 (instruction -> if_stmt .)
    $end            reduce using rule 7 (instruction -> if_stmt .)
    }               reduce using rule 7 (instruction -> if_stmt .)
    ELSE            reduce using rule 7 (instruction -> if_stmt .)


state 7

    (8) instruction -> loops .

    PRINT           reduce using rule 8 (instruction -> loops .)
    {               reduce using rule 8 (instruction -> loops .)
    IF              reduce using rule 8 (instruction -> loops .)
    BREAK           reduce using rule 8 (instruction -> loops .)
    CONTINUE        reduce using rule 8 (instruction -> loops .)
    RETURN          reduce using rule 8 (instruction -> loops .)
    ID              reduce using rule 8 (instruction -> loops .)
    WHILE           reduce using rule 8 (instruction -> loops .)
    FOR             reduce using rule 8 (instruction -> loops .)
    $end            reduce using rule 8 (instruction -> loops .)
    }               reduce using rule 8 (instruction -> loops .)
    ELSE            reduce using rule 8 (instruction -> loops .)


state 8

    (9) instruction -> break .

    PRINT           reduce using rule 9 (instruction -> break .)
    {               reduce using rule 9 (instruction -> break .)
    IF              reduce using rule 9 (instruction -> break .)
    BREAK           reduce using rule 9 (instruction -> break .)
    CONTINUE        reduce using rule 9 (instruction -> break .)
    RETURN          reduce using rule 9 (instruction -> break .)
    ID              reduce using rule 9 (instruction -> break .)
    WHILE           reduce using rule 9 (instruction -> break .)
    FOR             reduce using rule 9 (instruction -> break .)
    $end            reduce using rule 9 (instruction -> break .)
    }               reduce using rule 9 (instruction -> break .)
    ELSE            reduce using rule 9 (instruction -> break .)


state 9

    (10) instruction -> continue .

    PRINT           reduce using rule 10 (instruction -> continue .)
    {               reduce using rule 10 (instruction -> continue .)
    IF              reduce using rule 10 (instruction -> continue .)
    BREAK           reduce using rule 10 (instruction -> continue .)
    CONTINUE        reduce using rule 10 (instruction -> continue .)
    RETURN          reduce using rule 10 (instruction -> continue .)
    ID              reduce using rule 10 (instruction -> continue .)
    WHILE           reduce using rule 10 (instruction -> continue .)
    FOR             reduce using rule 10 (instruction -> continue .)
    $end            reduce using rule 10 (instruction -> continue .)
    }               reduce using rule 10 (instruction -> continue .)
    ELSE            reduce using rule 10 (instruction -> continue .)


state 10

    (11) instruction -> return_expr . ;

    ;               shift and go to state 24


state 11

    (12) instruction -> PRINT . create_stmt ;
    (64) create_stmt -> . p_print_list
    (65) p_print_list -> . STRING
    (66) p_print_list -> . p_print_list , expression
    (67) p_print_list -> . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    STRING          shift and go to state 27
    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    create_stmt                    shift and go to state 25
    p_print_list                   shift and go to state 26
    expression                     shift and go to state 28
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 12

    (13) instruction -> { . instructions }
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . assignment
    (7) instruction -> . if_stmt
    (8) instruction -> . loops
    (9) instruction -> . break
    (10) instruction -> . continue
    (11) instruction -> . return_expr ;
    (12) instruction -> . PRINT create_stmt ;
    (13) instruction -> . { instructions }
    (19) assignment -> . id_change = expression ;
    (20) assignment -> . id_change ADDASSIGN expression ;
    (21) assignment -> . id_change SUBASSIGN expression ;
    (22) assignment -> . id_change MULASSIGN expression ;
    (23) assignment -> . id_change DIVASSIGN expression ;
    (24) assignment -> . id_change = id_change ;
    (25) assignment -> . id_change ADDASSIGN id_change ;
    (26) assignment -> . id_change SUBASSIGN id_change ;
    (27) assignment -> . id_change MULASSIGN id_change ;
    (28) assignment -> . id_change DIVASSIGN id_change ;
    (62) if_stmt -> . IF ( condition ) instruction
    (63) if_stmt -> . IF ( condition ) instruction ELSE instruction
    (68) loops -> . while_l
    (69) loops -> . for_l
    (15) break -> . BREAK ;
    (14) continue -> . CONTINUE ;
    (72) return_expr -> . RETURN
    (73) return_expr -> . RETURN expression
    (16) id_change -> . ID
    (17) id_change -> . ID [ expression , expression ]
    (18) id_change -> . ID [ expression ]
    (70) while_l -> . WHILE ( condition ) instruction
    (71) for_l -> . FOR ID = expression : expression instruction

    PRINT           shift and go to state 11
    {               shift and go to state 12
    IF              shift and go to state 14
    BREAK           shift and go to state 17
    CONTINUE        shift and go to state 18
    RETURN          shift and go to state 19
    ID              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22

    instructions                   shift and go to state 40
    instruction                    shift and go to state 4
    assignment                     shift and go to state 5
    if_stmt                        shift and go to state 6
    loops                          shift and go to state 7
    break                          shift and go to state 8
    continue                       shift and go to state 9
    return_expr                    shift and go to state 10
    id_change                      shift and go to state 13
    while_l                        shift and go to state 15
    for_l                          shift and go to state 16

state 13

    (19) assignment -> id_change . = expression ;
    (20) assignment -> id_change . ADDASSIGN expression ;
    (21) assignment -> id_change . SUBASSIGN expression ;
    (22) assignment -> id_change . MULASSIGN expression ;
    (23) assignment -> id_change . DIVASSIGN expression ;
    (24) assignment -> id_change . = id_change ;
    (25) assignment -> id_change . ADDASSIGN id_change ;
    (26) assignment -> id_change . SUBASSIGN id_change ;
    (27) assignment -> id_change . MULASSIGN id_change ;
    (28) assignment -> id_change . DIVASSIGN id_change ;

    =               shift and go to state 41
    ADDASSIGN       shift and go to state 42
    SUBASSIGN       shift and go to state 43
    MULASSIGN       shift and go to state 44
    DIVASSIGN       shift and go to state 45


state 14

    (62) if_stmt -> IF . ( condition ) instruction
    (63) if_stmt -> IF . ( condition ) instruction ELSE instruction

    (               shift and go to state 46


state 15

    (68) loops -> while_l .

    PRINT           reduce using rule 68 (loops -> while_l .)
    {               reduce using rule 68 (loops -> while_l .)
    IF              reduce using rule 68 (loops -> while_l .)
    BREAK           reduce using rule 68 (loops -> while_l .)
    CONTINUE        reduce using rule 68 (loops -> while_l .)
    RETURN          reduce using rule 68 (loops -> while_l .)
    ID              reduce using rule 68 (loops -> while_l .)
    WHILE           reduce using rule 68 (loops -> while_l .)
    FOR             reduce using rule 68 (loops -> while_l .)
    $end            reduce using rule 68 (loops -> while_l .)
    }               reduce using rule 68 (loops -> while_l .)
    ELSE            reduce using rule 68 (loops -> while_l .)


state 16

    (69) loops -> for_l .

    PRINT           reduce using rule 69 (loops -> for_l .)
    {               reduce using rule 69 (loops -> for_l .)
    IF              reduce using rule 69 (loops -> for_l .)
    BREAK           reduce using rule 69 (loops -> for_l .)
    CONTINUE        reduce using rule 69 (loops -> for_l .)
    RETURN          reduce using rule 69 (loops -> for_l .)
    ID              reduce using rule 69 (loops -> for_l .)
    WHILE           reduce using rule 69 (loops -> for_l .)
    FOR             reduce using rule 69 (loops -> for_l .)
    $end            reduce using rule 69 (loops -> for_l .)
    }               reduce using rule 69 (loops -> for_l .)
    ELSE            reduce using rule 69 (loops -> for_l .)


state 17

    (15) break -> BREAK . ;

    ;               shift and go to state 47


state 18

    (14) continue -> CONTINUE . ;

    ;               shift and go to state 48


state 19

    (72) return_expr -> RETURN .
    (73) return_expr -> RETURN . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    ;               reduce using rule 72 (return_expr -> RETURN .)
    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 49
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 20

    (16) id_change -> ID .
    (17) id_change -> ID . [ expression , expression ]
    (18) id_change -> ID . [ expression ]

    =               reduce using rule 16 (id_change -> ID .)
    ADDASSIGN       reduce using rule 16 (id_change -> ID .)
    SUBASSIGN       reduce using rule 16 (id_change -> ID .)
    MULASSIGN       reduce using rule 16 (id_change -> ID .)
    DIVASSIGN       reduce using rule 16 (id_change -> ID .)
    [               shift and go to state 50


state 21

    (70) while_l -> WHILE . ( condition ) instruction

    (               shift and go to state 51


state 22

    (71) for_l -> FOR . ID = expression : expression instruction

    ID              shift and go to state 52


state 23

    (4) instructions -> instructions instruction .

    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    {               reduce using rule 4 (instructions -> instructions instruction .)
    IF              reduce using rule 4 (instructions -> instructions instruction .)
    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    }               reduce using rule 4 (instructions -> instructions instruction .)


state 24

    (11) instruction -> return_expr ; .

    PRINT           reduce using rule 11 (instruction -> return_expr ; .)
    {               reduce using rule 11 (instruction -> return_expr ; .)
    IF              reduce using rule 11 (instruction -> return_expr ; .)
    BREAK           reduce using rule 11 (instruction -> return_expr ; .)
    CONTINUE        reduce using rule 11 (instruction -> return_expr ; .)
    RETURN          reduce using rule 11 (instruction -> return_expr ; .)
    ID              reduce using rule 11 (instruction -> return_expr ; .)
    WHILE           reduce using rule 11 (instruction -> return_expr ; .)
    FOR             reduce using rule 11 (instruction -> return_expr ; .)
    $end            reduce using rule 11 (instruction -> return_expr ; .)
    }               reduce using rule 11 (instruction -> return_expr ; .)
    ELSE            reduce using rule 11 (instruction -> return_expr ; .)


state 25

    (12) instruction -> PRINT create_stmt . ;

    ;               shift and go to state 53


state 26

    (64) create_stmt -> p_print_list .
    (66) p_print_list -> p_print_list . , expression

    ;               reduce using rule 64 (create_stmt -> p_print_list .)
    ,               shift and go to state 54


state 27

    (65) p_print_list -> STRING .

    ,               reduce using rule 65 (p_print_list -> STRING .)
    ;               reduce using rule 65 (p_print_list -> STRING .)


state 28

    (67) p_print_list -> expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ,               reduce using rule 67 (p_print_list -> expression .)
    ;               reduce using rule 67 (p_print_list -> expression .)
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 29

    (33) expression -> MINUS . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 63
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 30

    (34) expression -> ID . '
    (44) expression -> ID .

    '               shift and go to state 64
    ADD             reduce using rule 44 (expression -> ID .)
    MINUS           reduce using rule 44 (expression -> ID .)
    MUL             reduce using rule 44 (expression -> ID .)
    DIVIDE          reduce using rule 44 (expression -> ID .)
    DOTADD          reduce using rule 44 (expression -> ID .)
    DOTSUB          reduce using rule 44 (expression -> ID .)
    DOTMUL          reduce using rule 44 (expression -> ID .)
    DOTDIVIDE       reduce using rule 44 (expression -> ID .)
    ,               reduce using rule 44 (expression -> ID .)
    ;               reduce using rule 44 (expression -> ID .)
    ]               reduce using rule 44 (expression -> ID .)
    GREATER         reduce using rule 44 (expression -> ID .)
    LESS            reduce using rule 44 (expression -> ID .)
    GREATEREQ       reduce using rule 44 (expression -> ID .)
    LESSEQ          reduce using rule 44 (expression -> ID .)
    NOTEQ           reduce using rule 44 (expression -> ID .)
    EQ              reduce using rule 44 (expression -> ID .)
    )               reduce using rule 44 (expression -> ID .)
    :               reduce using rule 44 (expression -> ID .)
    PRINT           reduce using rule 44 (expression -> ID .)
    {               reduce using rule 44 (expression -> ID .)
    IF              reduce using rule 44 (expression -> ID .)
    BREAK           reduce using rule 44 (expression -> ID .)
    CONTINUE        reduce using rule 44 (expression -> ID .)
    RETURN          reduce using rule 44 (expression -> ID .)
    ID              reduce using rule 44 (expression -> ID .)
    WHILE           reduce using rule 44 (expression -> ID .)
    FOR             reduce using rule 44 (expression -> ID .)


state 31

    (39) expression -> matrix_expression .

    ADD             reduce using rule 39 (expression -> matrix_expression .)
    MINUS           reduce using rule 39 (expression -> matrix_expression .)
    MUL             reduce using rule 39 (expression -> matrix_expression .)
    DIVIDE          reduce using rule 39 (expression -> matrix_expression .)
    DOTADD          reduce using rule 39 (expression -> matrix_expression .)
    DOTSUB          reduce using rule 39 (expression -> matrix_expression .)
    DOTMUL          reduce using rule 39 (expression -> matrix_expression .)
    DOTDIVIDE       reduce using rule 39 (expression -> matrix_expression .)
    ,               reduce using rule 39 (expression -> matrix_expression .)
    ;               reduce using rule 39 (expression -> matrix_expression .)
    ]               reduce using rule 39 (expression -> matrix_expression .)
    GREATER         reduce using rule 39 (expression -> matrix_expression .)
    LESS            reduce using rule 39 (expression -> matrix_expression .)
    GREATEREQ       reduce using rule 39 (expression -> matrix_expression .)
    LESSEQ          reduce using rule 39 (expression -> matrix_expression .)
    NOTEQ           reduce using rule 39 (expression -> matrix_expression .)
    EQ              reduce using rule 39 (expression -> matrix_expression .)
    )               reduce using rule 39 (expression -> matrix_expression .)
    :               reduce using rule 39 (expression -> matrix_expression .)
    PRINT           reduce using rule 39 (expression -> matrix_expression .)
    {               reduce using rule 39 (expression -> matrix_expression .)
    IF              reduce using rule 39 (expression -> matrix_expression .)
    BREAK           reduce using rule 39 (expression -> matrix_expression .)
    CONTINUE        reduce using rule 39 (expression -> matrix_expression .)
    RETURN          reduce using rule 39 (expression -> matrix_expression .)
    ID              reduce using rule 39 (expression -> matrix_expression .)
    WHILE           reduce using rule 39 (expression -> matrix_expression .)
    FOR             reduce using rule 39 (expression -> matrix_expression .)


state 32

    (40) expression -> matrix_create .

    ADD             reduce using rule 40 (expression -> matrix_create .)
    MINUS           reduce using rule 40 (expression -> matrix_create .)
    MUL             reduce using rule 40 (expression -> matrix_create .)
    DIVIDE          reduce using rule 40 (expression -> matrix_create .)
    DOTADD          reduce using rule 40 (expression -> matrix_create .)
    DOTSUB          reduce using rule 40 (expression -> matrix_create .)
    DOTMUL          reduce using rule 40 (expression -> matrix_create .)
    DOTDIVIDE       reduce using rule 40 (expression -> matrix_create .)
    ,               reduce using rule 40 (expression -> matrix_create .)
    ;               reduce using rule 40 (expression -> matrix_create .)
    ]               reduce using rule 40 (expression -> matrix_create .)
    GREATER         reduce using rule 40 (expression -> matrix_create .)
    LESS            reduce using rule 40 (expression -> matrix_create .)
    GREATEREQ       reduce using rule 40 (expression -> matrix_create .)
    LESSEQ          reduce using rule 40 (expression -> matrix_create .)
    NOTEQ           reduce using rule 40 (expression -> matrix_create .)
    EQ              reduce using rule 40 (expression -> matrix_create .)
    )               reduce using rule 40 (expression -> matrix_create .)
    :               reduce using rule 40 (expression -> matrix_create .)
    PRINT           reduce using rule 40 (expression -> matrix_create .)
    {               reduce using rule 40 (expression -> matrix_create .)
    IF              reduce using rule 40 (expression -> matrix_create .)
    BREAK           reduce using rule 40 (expression -> matrix_create .)
    CONTINUE        reduce using rule 40 (expression -> matrix_create .)
    RETURN          reduce using rule 40 (expression -> matrix_create .)
    ID              reduce using rule 40 (expression -> matrix_create .)
    WHILE           reduce using rule 40 (expression -> matrix_create .)
    FOR             reduce using rule 40 (expression -> matrix_create .)


state 33

    (41) expression -> vector_create .

    ADD             reduce using rule 41 (expression -> vector_create .)
    MINUS           reduce using rule 41 (expression -> vector_create .)
    MUL             reduce using rule 41 (expression -> vector_create .)
    DIVIDE          reduce using rule 41 (expression -> vector_create .)
    DOTADD          reduce using rule 41 (expression -> vector_create .)
    DOTSUB          reduce using rule 41 (expression -> vector_create .)
    DOTMUL          reduce using rule 41 (expression -> vector_create .)
    DOTDIVIDE       reduce using rule 41 (expression -> vector_create .)
    ,               reduce using rule 41 (expression -> vector_create .)
    ;               reduce using rule 41 (expression -> vector_create .)
    ]               reduce using rule 41 (expression -> vector_create .)
    GREATER         reduce using rule 41 (expression -> vector_create .)
    LESS            reduce using rule 41 (expression -> vector_create .)
    GREATEREQ       reduce using rule 41 (expression -> vector_create .)
    LESSEQ          reduce using rule 41 (expression -> vector_create .)
    NOTEQ           reduce using rule 41 (expression -> vector_create .)
    EQ              reduce using rule 41 (expression -> vector_create .)
    )               reduce using rule 41 (expression -> vector_create .)
    :               reduce using rule 41 (expression -> vector_create .)
    PRINT           reduce using rule 41 (expression -> vector_create .)
    {               reduce using rule 41 (expression -> vector_create .)
    IF              reduce using rule 41 (expression -> vector_create .)
    BREAK           reduce using rule 41 (expression -> vector_create .)
    CONTINUE        reduce using rule 41 (expression -> vector_create .)
    RETURN          reduce using rule 41 (expression -> vector_create .)
    ID              reduce using rule 41 (expression -> vector_create .)
    WHILE           reduce using rule 41 (expression -> vector_create .)
    FOR             reduce using rule 41 (expression -> vector_create .)


state 34

    (42) expression -> INTNUM .

    ADD             reduce using rule 42 (expression -> INTNUM .)
    MINUS           reduce using rule 42 (expression -> INTNUM .)
    MUL             reduce using rule 42 (expression -> INTNUM .)
    DIVIDE          reduce using rule 42 (expression -> INTNUM .)
    DOTADD          reduce using rule 42 (expression -> INTNUM .)
    DOTSUB          reduce using rule 42 (expression -> INTNUM .)
    DOTMUL          reduce using rule 42 (expression -> INTNUM .)
    DOTDIVIDE       reduce using rule 42 (expression -> INTNUM .)
    ,               reduce using rule 42 (expression -> INTNUM .)
    ;               reduce using rule 42 (expression -> INTNUM .)
    ]               reduce using rule 42 (expression -> INTNUM .)
    GREATER         reduce using rule 42 (expression -> INTNUM .)
    LESS            reduce using rule 42 (expression -> INTNUM .)
    GREATEREQ       reduce using rule 42 (expression -> INTNUM .)
    LESSEQ          reduce using rule 42 (expression -> INTNUM .)
    NOTEQ           reduce using rule 42 (expression -> INTNUM .)
    EQ              reduce using rule 42 (expression -> INTNUM .)
    )               reduce using rule 42 (expression -> INTNUM .)
    :               reduce using rule 42 (expression -> INTNUM .)
    PRINT           reduce using rule 42 (expression -> INTNUM .)
    {               reduce using rule 42 (expression -> INTNUM .)
    IF              reduce using rule 42 (expression -> INTNUM .)
    BREAK           reduce using rule 42 (expression -> INTNUM .)
    CONTINUE        reduce using rule 42 (expression -> INTNUM .)
    RETURN          reduce using rule 42 (expression -> INTNUM .)
    ID              reduce using rule 42 (expression -> INTNUM .)
    WHILE           reduce using rule 42 (expression -> INTNUM .)
    FOR             reduce using rule 42 (expression -> INTNUM .)


state 35

    (43) expression -> FLOAT .

    ADD             reduce using rule 43 (expression -> FLOAT .)
    MINUS           reduce using rule 43 (expression -> FLOAT .)
    MUL             reduce using rule 43 (expression -> FLOAT .)
    DIVIDE          reduce using rule 43 (expression -> FLOAT .)
    DOTADD          reduce using rule 43 (expression -> FLOAT .)
    DOTSUB          reduce using rule 43 (expression -> FLOAT .)
    DOTMUL          reduce using rule 43 (expression -> FLOAT .)
    DOTDIVIDE       reduce using rule 43 (expression -> FLOAT .)
    ,               reduce using rule 43 (expression -> FLOAT .)
    ;               reduce using rule 43 (expression -> FLOAT .)
    ]               reduce using rule 43 (expression -> FLOAT .)
    GREATER         reduce using rule 43 (expression -> FLOAT .)
    LESS            reduce using rule 43 (expression -> FLOAT .)
    GREATEREQ       reduce using rule 43 (expression -> FLOAT .)
    LESSEQ          reduce using rule 43 (expression -> FLOAT .)
    NOTEQ           reduce using rule 43 (expression -> FLOAT .)
    EQ              reduce using rule 43 (expression -> FLOAT .)
    )               reduce using rule 43 (expression -> FLOAT .)
    :               reduce using rule 43 (expression -> FLOAT .)
    PRINT           reduce using rule 43 (expression -> FLOAT .)
    {               reduce using rule 43 (expression -> FLOAT .)
    IF              reduce using rule 43 (expression -> FLOAT .)
    BREAK           reduce using rule 43 (expression -> FLOAT .)
    CONTINUE        reduce using rule 43 (expression -> FLOAT .)
    RETURN          reduce using rule 43 (expression -> FLOAT .)
    ID              reduce using rule 43 (expression -> FLOAT .)
    WHILE           reduce using rule 43 (expression -> FLOAT .)
    FOR             reduce using rule 43 (expression -> FLOAT .)


state 36

    (45) matrix_expression -> ZEROS . ( expression )

    (               shift and go to state 65


state 37

    (46) matrix_expression -> ONES . ( expression )

    (               shift and go to state 66


state 38

    (47) matrix_expression -> EYE . ( expression )

    (               shift and go to state 67


state 39

    (48) matrix_create -> [ . matrix_rows ]
    (49) vector_create -> [ . vector_elems ]
    (52) matrix_rows -> . [ matrix_elems ] , matrix_rows
    (53) matrix_rows -> . [ matrix_elems ]
    (50) vector_elems -> . expression , vector_elems
    (51) vector_elems -> . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    [               shift and go to state 68
    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38

    matrix_rows                    shift and go to state 69
    vector_elems                   shift and go to state 70
    expression                     shift and go to state 71
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 40

    (13) instruction -> { instructions . }
    (4) instructions -> instructions . instruction
    (6) instruction -> . assignment
    (7) instruction -> . if_stmt
    (8) instruction -> . loops
    (9) instruction -> . break
    (10) instruction -> . continue
    (11) instruction -> . return_expr ;
    (12) instruction -> . PRINT create_stmt ;
    (13) instruction -> . { instructions }
    (19) assignment -> . id_change = expression ;
    (20) assignment -> . id_change ADDASSIGN expression ;
    (21) assignment -> . id_change SUBASSIGN expression ;
    (22) assignment -> . id_change MULASSIGN expression ;
    (23) assignment -> . id_change DIVASSIGN expression ;
    (24) assignment -> . id_change = id_change ;
    (25) assignment -> . id_change ADDASSIGN id_change ;
    (26) assignment -> . id_change SUBASSIGN id_change ;
    (27) assignment -> . id_change MULASSIGN id_change ;
    (28) assignment -> . id_change DIVASSIGN id_change ;
    (62) if_stmt -> . IF ( condition ) instruction
    (63) if_stmt -> . IF ( condition ) instruction ELSE instruction
    (68) loops -> . while_l
    (69) loops -> . for_l
    (15) break -> . BREAK ;
    (14) continue -> . CONTINUE ;
    (72) return_expr -> . RETURN
    (73) return_expr -> . RETURN expression
    (16) id_change -> . ID
    (17) id_change -> . ID [ expression , expression ]
    (18) id_change -> . ID [ expression ]
    (70) while_l -> . WHILE ( condition ) instruction
    (71) for_l -> . FOR ID = expression : expression instruction

    }               shift and go to state 72
    PRINT           shift and go to state 11
    {               shift and go to state 12
    IF              shift and go to state 14
    BREAK           shift and go to state 17
    CONTINUE        shift and go to state 18
    RETURN          shift and go to state 19
    ID              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22

    instruction                    shift and go to state 23
    assignment                     shift and go to state 5
    if_stmt                        shift and go to state 6
    loops                          shift and go to state 7
    break                          shift and go to state 8
    continue                       shift and go to state 9
    return_expr                    shift and go to state 10
    id_change                      shift and go to state 13
    while_l                        shift and go to state 15
    for_l                          shift and go to state 16

state 41

    (19) assignment -> id_change = . expression ;
    (24) assignment -> id_change = . id_change ;
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (16) id_change -> . ID
    (17) id_change -> . ID [ expression , expression ]
    (18) id_change -> . ID [ expression ]
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 75
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    id_change                      shift and go to state 73
    expression                     shift and go to state 74
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 42

    (20) assignment -> id_change ADDASSIGN . expression ;
    (25) assignment -> id_change ADDASSIGN . id_change ;
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (16) id_change -> . ID
    (17) id_change -> . ID [ expression , expression ]
    (18) id_change -> . ID [ expression ]
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 75
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    id_change                      shift and go to state 76
    expression                     shift and go to state 77
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 43

    (21) assignment -> id_change SUBASSIGN . expression ;
    (26) assignment -> id_change SUBASSIGN . id_change ;
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (16) id_change -> . ID
    (17) id_change -> . ID [ expression , expression ]
    (18) id_change -> . ID [ expression ]
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 75
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    id_change                      shift and go to state 78
    expression                     shift and go to state 79
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 44

    (22) assignment -> id_change MULASSIGN . expression ;
    (27) assignment -> id_change MULASSIGN . id_change ;
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (16) id_change -> . ID
    (17) id_change -> . ID [ expression , expression ]
    (18) id_change -> . ID [ expression ]
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 75
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    id_change                      shift and go to state 80
    expression                     shift and go to state 81
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 45

    (23) assignment -> id_change DIVASSIGN . expression ;
    (28) assignment -> id_change DIVASSIGN . id_change ;
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (16) id_change -> . ID
    (17) id_change -> . ID [ expression , expression ]
    (18) id_change -> . ID [ expression ]
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 75
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    id_change                      shift and go to state 82
    expression                     shift and go to state 83
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 46

    (62) if_stmt -> IF ( . condition ) instruction
    (63) if_stmt -> IF ( . condition ) instruction ELSE instruction
    (56) condition -> . expression GREATER expression
    (57) condition -> . expression LESS expression
    (58) condition -> . expression GREATEREQ expression
    (59) condition -> . expression LESSEQ expression
    (60) condition -> . expression NOTEQ expression
    (61) condition -> . expression EQ expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    condition                      shift and go to state 84
    expression                     shift and go to state 85
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 47

    (15) break -> BREAK ; .

    PRINT           reduce using rule 15 (break -> BREAK ; .)
    {               reduce using rule 15 (break -> BREAK ; .)
    IF              reduce using rule 15 (break -> BREAK ; .)
    BREAK           reduce using rule 15 (break -> BREAK ; .)
    CONTINUE        reduce using rule 15 (break -> BREAK ; .)
    RETURN          reduce using rule 15 (break -> BREAK ; .)
    ID              reduce using rule 15 (break -> BREAK ; .)
    WHILE           reduce using rule 15 (break -> BREAK ; .)
    FOR             reduce using rule 15 (break -> BREAK ; .)
    $end            reduce using rule 15 (break -> BREAK ; .)
    }               reduce using rule 15 (break -> BREAK ; .)
    ELSE            reduce using rule 15 (break -> BREAK ; .)


state 48

    (14) continue -> CONTINUE ; .

    PRINT           reduce using rule 14 (continue -> CONTINUE ; .)
    {               reduce using rule 14 (continue -> CONTINUE ; .)
    IF              reduce using rule 14 (continue -> CONTINUE ; .)
    BREAK           reduce using rule 14 (continue -> CONTINUE ; .)
    CONTINUE        reduce using rule 14 (continue -> CONTINUE ; .)
    RETURN          reduce using rule 14 (continue -> CONTINUE ; .)
    ID              reduce using rule 14 (continue -> CONTINUE ; .)
    WHILE           reduce using rule 14 (continue -> CONTINUE ; .)
    FOR             reduce using rule 14 (continue -> CONTINUE ; .)
    $end            reduce using rule 14 (continue -> CONTINUE ; .)
    }               reduce using rule 14 (continue -> CONTINUE ; .)
    ELSE            reduce using rule 14 (continue -> CONTINUE ; .)


state 49

    (73) return_expr -> RETURN expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ;               reduce using rule 73 (return_expr -> RETURN expression .)
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 50

    (17) id_change -> ID [ . expression , expression ]
    (18) id_change -> ID [ . expression ]
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 86
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 51

    (70) while_l -> WHILE ( . condition ) instruction
    (56) condition -> . expression GREATER expression
    (57) condition -> . expression LESS expression
    (58) condition -> . expression GREATEREQ expression
    (59) condition -> . expression LESSEQ expression
    (60) condition -> . expression NOTEQ expression
    (61) condition -> . expression EQ expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    condition                      shift and go to state 87
    expression                     shift and go to state 85
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 52

    (71) for_l -> FOR ID . = expression : expression instruction

    =               shift and go to state 88


state 53

    (12) instruction -> PRINT create_stmt ; .

    PRINT           reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    {               reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    IF              reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    BREAK           reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    CONTINUE        reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    RETURN          reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    ID              reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    WHILE           reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    FOR             reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    $end            reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    }               reduce using rule 12 (instruction -> PRINT create_stmt ; .)
    ELSE            reduce using rule 12 (instruction -> PRINT create_stmt ; .)


state 54

    (66) p_print_list -> p_print_list , . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 89
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 55

    (29) expression -> expression ADD . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 90
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 56

    (30) expression -> expression MINUS . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 91
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 57

    (31) expression -> expression MUL . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 92
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 58

    (32) expression -> expression DIVIDE . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 93
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 59

    (35) expression -> expression DOTADD . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 94
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 60

    (36) expression -> expression DOTSUB . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 95
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 61

    (37) expression -> expression DOTMUL . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 96
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 62

    (38) expression -> expression DOTDIVIDE . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 97
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 63

    (33) expression -> MINUS expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ADD             reduce using rule 33 (expression -> MINUS expression .)
    MINUS           reduce using rule 33 (expression -> MINUS expression .)
    MUL             reduce using rule 33 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 33 (expression -> MINUS expression .)
    DOTADD          reduce using rule 33 (expression -> MINUS expression .)
    DOTSUB          reduce using rule 33 (expression -> MINUS expression .)
    DOTMUL          reduce using rule 33 (expression -> MINUS expression .)
    DOTDIVIDE       reduce using rule 33 (expression -> MINUS expression .)
    ,               reduce using rule 33 (expression -> MINUS expression .)
    ;               reduce using rule 33 (expression -> MINUS expression .)
    ]               reduce using rule 33 (expression -> MINUS expression .)
    GREATER         reduce using rule 33 (expression -> MINUS expression .)
    LESS            reduce using rule 33 (expression -> MINUS expression .)
    GREATEREQ       reduce using rule 33 (expression -> MINUS expression .)
    LESSEQ          reduce using rule 33 (expression -> MINUS expression .)
    NOTEQ           reduce using rule 33 (expression -> MINUS expression .)
    EQ              reduce using rule 33 (expression -> MINUS expression .)
    )               reduce using rule 33 (expression -> MINUS expression .)
    :               reduce using rule 33 (expression -> MINUS expression .)
    PRINT           reduce using rule 33 (expression -> MINUS expression .)
    {               reduce using rule 33 (expression -> MINUS expression .)
    IF              reduce using rule 33 (expression -> MINUS expression .)
    BREAK           reduce using rule 33 (expression -> MINUS expression .)
    CONTINUE        reduce using rule 33 (expression -> MINUS expression .)
    RETURN          reduce using rule 33 (expression -> MINUS expression .)
    ID              reduce using rule 33 (expression -> MINUS expression .)
    WHILE           reduce using rule 33 (expression -> MINUS expression .)
    FOR             reduce using rule 33 (expression -> MINUS expression .)

  ! ADD             [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! MUL             [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIVIDE       [ shift and go to state 62 ]


state 64

    (34) expression -> ID ' .

    ADD             reduce using rule 34 (expression -> ID ' .)
    MINUS           reduce using rule 34 (expression -> ID ' .)
    MUL             reduce using rule 34 (expression -> ID ' .)
    DIVIDE          reduce using rule 34 (expression -> ID ' .)
    DOTADD          reduce using rule 34 (expression -> ID ' .)
    DOTSUB          reduce using rule 34 (expression -> ID ' .)
    DOTMUL          reduce using rule 34 (expression -> ID ' .)
    DOTDIVIDE       reduce using rule 34 (expression -> ID ' .)
    ,               reduce using rule 34 (expression -> ID ' .)
    ;               reduce using rule 34 (expression -> ID ' .)
    ]               reduce using rule 34 (expression -> ID ' .)
    GREATER         reduce using rule 34 (expression -> ID ' .)
    LESS            reduce using rule 34 (expression -> ID ' .)
    GREATEREQ       reduce using rule 34 (expression -> ID ' .)
    LESSEQ          reduce using rule 34 (expression -> ID ' .)
    NOTEQ           reduce using rule 34 (expression -> ID ' .)
    EQ              reduce using rule 34 (expression -> ID ' .)
    )               reduce using rule 34 (expression -> ID ' .)
    :               reduce using rule 34 (expression -> ID ' .)
    PRINT           reduce using rule 34 (expression -> ID ' .)
    {               reduce using rule 34 (expression -> ID ' .)
    IF              reduce using rule 34 (expression -> ID ' .)
    BREAK           reduce using rule 34 (expression -> ID ' .)
    CONTINUE        reduce using rule 34 (expression -> ID ' .)
    RETURN          reduce using rule 34 (expression -> ID ' .)
    ID              reduce using rule 34 (expression -> ID ' .)
    WHILE           reduce using rule 34 (expression -> ID ' .)
    FOR             reduce using rule 34 (expression -> ID ' .)


state 65

    (45) matrix_expression -> ZEROS ( . expression )
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 98
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 66

    (46) matrix_expression -> ONES ( . expression )
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 99
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 67

    (47) matrix_expression -> EYE ( . expression )
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 100
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 68

    (52) matrix_rows -> [ . matrix_elems ] , matrix_rows
    (53) matrix_rows -> [ . matrix_elems ]
    (48) matrix_create -> [ . matrix_rows ]
    (49) vector_create -> [ . vector_elems ]
    (54) matrix_elems -> . expression , matrix_elems
    (55) matrix_elems -> . expression
    (52) matrix_rows -> . [ matrix_elems ] , matrix_rows
    (53) matrix_rows -> . [ matrix_elems ]
    (50) vector_elems -> . expression , vector_elems
    (51) vector_elems -> . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    [               shift and go to state 68
    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38

    matrix_elems                   shift and go to state 101
    matrix_rows                    shift and go to state 69
    vector_elems                   shift and go to state 70
    expression                     shift and go to state 102
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 69

    (48) matrix_create -> [ matrix_rows . ]

    ]               shift and go to state 103


state 70

    (49) vector_create -> [ vector_elems . ]

    ]               shift and go to state 104


state 71

    (50) vector_elems -> expression . , vector_elems
    (51) vector_elems -> expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ,               shift and go to state 105
    ]               reduce using rule 51 (vector_elems -> expression .)
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 72

    (13) instruction -> { instructions } .

    PRINT           reduce using rule 13 (instruction -> { instructions } .)
    {               reduce using rule 13 (instruction -> { instructions } .)
    IF              reduce using rule 13 (instruction -> { instructions } .)
    BREAK           reduce using rule 13 (instruction -> { instructions } .)
    CONTINUE        reduce using rule 13 (instruction -> { instructions } .)
    RETURN          reduce using rule 13 (instruction -> { instructions } .)
    ID              reduce using rule 13 (instruction -> { instructions } .)
    WHILE           reduce using rule 13 (instruction -> { instructions } .)
    FOR             reduce using rule 13 (instruction -> { instructions } .)
    $end            reduce using rule 13 (instruction -> { instructions } .)
    }               reduce using rule 13 (instruction -> { instructions } .)
    ELSE            reduce using rule 13 (instruction -> { instructions } .)


state 73

    (24) assignment -> id_change = id_change . ;

    ;               shift and go to state 106


state 74

    (19) assignment -> id_change = expression . ;
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ;               shift and go to state 107
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 75

    (34) expression -> ID . '
    (44) expression -> ID .
    (16) id_change -> ID .
    (17) id_change -> ID . [ expression , expression ]
    (18) id_change -> ID . [ expression ]

  ! reduce/reduce conflict for ; resolved using rule 16 (id_change -> ID .)
    '               shift and go to state 64
    ADD             reduce using rule 44 (expression -> ID .)
    MINUS           reduce using rule 44 (expression -> ID .)
    MUL             reduce using rule 44 (expression -> ID .)
    DIVIDE          reduce using rule 44 (expression -> ID .)
    DOTADD          reduce using rule 44 (expression -> ID .)
    DOTSUB          reduce using rule 44 (expression -> ID .)
    DOTMUL          reduce using rule 44 (expression -> ID .)
    DOTDIVIDE       reduce using rule 44 (expression -> ID .)
    ;               reduce using rule 16 (id_change -> ID .)
    [               shift and go to state 50

  ! ;               [ reduce using rule 44 (expression -> ID .) ]


state 76

    (25) assignment -> id_change ADDASSIGN id_change . ;

    ;               shift and go to state 108


state 77

    (20) assignment -> id_change ADDASSIGN expression . ;
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ;               shift and go to state 109
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 78

    (26) assignment -> id_change SUBASSIGN id_change . ;

    ;               shift and go to state 110


state 79

    (21) assignment -> id_change SUBASSIGN expression . ;
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ;               shift and go to state 111
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 80

    (27) assignment -> id_change MULASSIGN id_change . ;

    ;               shift and go to state 112


state 81

    (22) assignment -> id_change MULASSIGN expression . ;
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ;               shift and go to state 113
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 82

    (28) assignment -> id_change DIVASSIGN id_change . ;

    ;               shift and go to state 114


state 83

    (23) assignment -> id_change DIVASSIGN expression . ;
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ;               shift and go to state 115
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 84

    (62) if_stmt -> IF ( condition . ) instruction
    (63) if_stmt -> IF ( condition . ) instruction ELSE instruction

    )               shift and go to state 116


state 85

    (56) condition -> expression . GREATER expression
    (57) condition -> expression . LESS expression
    (58) condition -> expression . GREATEREQ expression
    (59) condition -> expression . LESSEQ expression
    (60) condition -> expression . NOTEQ expression
    (61) condition -> expression . EQ expression
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    GREATER         shift and go to state 117
    LESS            shift and go to state 118
    GREATEREQ       shift and go to state 119
    LESSEQ          shift and go to state 120
    NOTEQ           shift and go to state 121
    EQ              shift and go to state 122
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 86

    (17) id_change -> ID [ expression . , expression ]
    (18) id_change -> ID [ expression . ]
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ,               shift and go to state 123
    ]               shift and go to state 124
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 87

    (70) while_l -> WHILE ( condition . ) instruction

    )               shift and go to state 125


state 88

    (71) for_l -> FOR ID = . expression : expression instruction
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 126
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 89

    (66) p_print_list -> p_print_list , expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ,               reduce using rule 66 (p_print_list -> p_print_list , expression .)
    ;               reduce using rule 66 (p_print_list -> p_print_list , expression .)
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 90

    (29) expression -> expression ADD expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ADD             reduce using rule 29 (expression -> expression ADD expression .)
    MINUS           reduce using rule 29 (expression -> expression ADD expression .)
    DOTADD          reduce using rule 29 (expression -> expression ADD expression .)
    DOTSUB          reduce using rule 29 (expression -> expression ADD expression .)
    ,               reduce using rule 29 (expression -> expression ADD expression .)
    ;               reduce using rule 29 (expression -> expression ADD expression .)
    ]               reduce using rule 29 (expression -> expression ADD expression .)
    GREATER         reduce using rule 29 (expression -> expression ADD expression .)
    LESS            reduce using rule 29 (expression -> expression ADD expression .)
    GREATEREQ       reduce using rule 29 (expression -> expression ADD expression .)
    LESSEQ          reduce using rule 29 (expression -> expression ADD expression .)
    NOTEQ           reduce using rule 29 (expression -> expression ADD expression .)
    EQ              reduce using rule 29 (expression -> expression ADD expression .)
    )               reduce using rule 29 (expression -> expression ADD expression .)
    :               reduce using rule 29 (expression -> expression ADD expression .)
    PRINT           reduce using rule 29 (expression -> expression ADD expression .)
    {               reduce using rule 29 (expression -> expression ADD expression .)
    IF              reduce using rule 29 (expression -> expression ADD expression .)
    BREAK           reduce using rule 29 (expression -> expression ADD expression .)
    CONTINUE        reduce using rule 29 (expression -> expression ADD expression .)
    RETURN          reduce using rule 29 (expression -> expression ADD expression .)
    ID              reduce using rule 29 (expression -> expression ADD expression .)
    WHILE           reduce using rule 29 (expression -> expression ADD expression .)
    FOR             reduce using rule 29 (expression -> expression ADD expression .)
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62

  ! MUL             [ reduce using rule 29 (expression -> expression ADD expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression ADD expression .) ]
  ! DOTMUL          [ reduce using rule 29 (expression -> expression ADD expression .) ]
  ! DOTDIVIDE       [ reduce using rule 29 (expression -> expression ADD expression .) ]
  ! ADD             [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]


state 91

    (30) expression -> expression MINUS expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ADD             reduce using rule 30 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 30 (expression -> expression MINUS expression .)
    DOTADD          reduce using rule 30 (expression -> expression MINUS expression .)
    DOTSUB          reduce using rule 30 (expression -> expression MINUS expression .)
    ,               reduce using rule 30 (expression -> expression MINUS expression .)
    ;               reduce using rule 30 (expression -> expression MINUS expression .)
    ]               reduce using rule 30 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 30 (expression -> expression MINUS expression .)
    LESS            reduce using rule 30 (expression -> expression MINUS expression .)
    GREATEREQ       reduce using rule 30 (expression -> expression MINUS expression .)
    LESSEQ          reduce using rule 30 (expression -> expression MINUS expression .)
    NOTEQ           reduce using rule 30 (expression -> expression MINUS expression .)
    EQ              reduce using rule 30 (expression -> expression MINUS expression .)
    )               reduce using rule 30 (expression -> expression MINUS expression .)
    :               reduce using rule 30 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 30 (expression -> expression MINUS expression .)
    {               reduce using rule 30 (expression -> expression MINUS expression .)
    IF              reduce using rule 30 (expression -> expression MINUS expression .)
    BREAK           reduce using rule 30 (expression -> expression MINUS expression .)
    CONTINUE        reduce using rule 30 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 30 (expression -> expression MINUS expression .)
    ID              reduce using rule 30 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 30 (expression -> expression MINUS expression .)
    FOR             reduce using rule 30 (expression -> expression MINUS expression .)
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62

  ! MUL             [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! DOTMUL          [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! DOTDIVIDE       [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! ADD             [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]


state 92

    (31) expression -> expression MUL expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ADD             reduce using rule 31 (expression -> expression MUL expression .)
    MINUS           reduce using rule 31 (expression -> expression MUL expression .)
    MUL             reduce using rule 31 (expression -> expression MUL expression .)
    DIVIDE          reduce using rule 31 (expression -> expression MUL expression .)
    DOTADD          reduce using rule 31 (expression -> expression MUL expression .)
    DOTSUB          reduce using rule 31 (expression -> expression MUL expression .)
    DOTMUL          reduce using rule 31 (expression -> expression MUL expression .)
    DOTDIVIDE       reduce using rule 31 (expression -> expression MUL expression .)
    ,               reduce using rule 31 (expression -> expression MUL expression .)
    ;               reduce using rule 31 (expression -> expression MUL expression .)
    ]               reduce using rule 31 (expression -> expression MUL expression .)
    GREATER         reduce using rule 31 (expression -> expression MUL expression .)
    LESS            reduce using rule 31 (expression -> expression MUL expression .)
    GREATEREQ       reduce using rule 31 (expression -> expression MUL expression .)
    LESSEQ          reduce using rule 31 (expression -> expression MUL expression .)
    NOTEQ           reduce using rule 31 (expression -> expression MUL expression .)
    EQ              reduce using rule 31 (expression -> expression MUL expression .)
    )               reduce using rule 31 (expression -> expression MUL expression .)
    :               reduce using rule 31 (expression -> expression MUL expression .)
    PRINT           reduce using rule 31 (expression -> expression MUL expression .)
    {               reduce using rule 31 (expression -> expression MUL expression .)
    IF              reduce using rule 31 (expression -> expression MUL expression .)
    BREAK           reduce using rule 31 (expression -> expression MUL expression .)
    CONTINUE        reduce using rule 31 (expression -> expression MUL expression .)
    RETURN          reduce using rule 31 (expression -> expression MUL expression .)
    ID              reduce using rule 31 (expression -> expression MUL expression .)
    WHILE           reduce using rule 31 (expression -> expression MUL expression .)
    FOR             reduce using rule 31 (expression -> expression MUL expression .)

  ! ADD             [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! MUL             [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIVIDE       [ shift and go to state 62 ]


state 93

    (32) expression -> expression DIVIDE expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ADD             reduce using rule 32 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 32 (expression -> expression DIVIDE expression .)
    MUL             reduce using rule 32 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 32 (expression -> expression DIVIDE expression .)
    DOTADD          reduce using rule 32 (expression -> expression DIVIDE expression .)
    DOTSUB          reduce using rule 32 (expression -> expression DIVIDE expression .)
    DOTMUL          reduce using rule 32 (expression -> expression DIVIDE expression .)
    DOTDIVIDE       reduce using rule 32 (expression -> expression DIVIDE expression .)
    ,               reduce using rule 32 (expression -> expression DIVIDE expression .)
    ;               reduce using rule 32 (expression -> expression DIVIDE expression .)
    ]               reduce using rule 32 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 32 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 32 (expression -> expression DIVIDE expression .)
    GREATEREQ       reduce using rule 32 (expression -> expression DIVIDE expression .)
    LESSEQ          reduce using rule 32 (expression -> expression DIVIDE expression .)
    NOTEQ           reduce using rule 32 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 32 (expression -> expression DIVIDE expression .)
    )               reduce using rule 32 (expression -> expression DIVIDE expression .)
    :               reduce using rule 32 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 32 (expression -> expression DIVIDE expression .)
    {               reduce using rule 32 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 32 (expression -> expression DIVIDE expression .)
    BREAK           reduce using rule 32 (expression -> expression DIVIDE expression .)
    CONTINUE        reduce using rule 32 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 32 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 32 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 32 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 32 (expression -> expression DIVIDE expression .)

  ! ADD             [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! MUL             [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIVIDE       [ shift and go to state 62 ]


state 94

    (35) expression -> expression DOTADD expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    DOTADD          reduce using rule 35 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 35 (expression -> expression DOTADD expression .)
    ,               reduce using rule 35 (expression -> expression DOTADD expression .)
    ;               reduce using rule 35 (expression -> expression DOTADD expression .)
    ]               reduce using rule 35 (expression -> expression DOTADD expression .)
    GREATER         reduce using rule 35 (expression -> expression DOTADD expression .)
    LESS            reduce using rule 35 (expression -> expression DOTADD expression .)
    GREATEREQ       reduce using rule 35 (expression -> expression DOTADD expression .)
    LESSEQ          reduce using rule 35 (expression -> expression DOTADD expression .)
    NOTEQ           reduce using rule 35 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 35 (expression -> expression DOTADD expression .)
    )               reduce using rule 35 (expression -> expression DOTADD expression .)
    :               reduce using rule 35 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 35 (expression -> expression DOTADD expression .)
    {               reduce using rule 35 (expression -> expression DOTADD expression .)
    IF              reduce using rule 35 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 35 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 35 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 35 (expression -> expression DOTADD expression .)
    ID              reduce using rule 35 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 35 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 35 (expression -> expression DOTADD expression .)
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62

  ! ADD             [ reduce using rule 35 (expression -> expression DOTADD expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression DOTADD expression .) ]
  ! MUL             [ reduce using rule 35 (expression -> expression DOTADD expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 35 (expression -> expression DOTADD expression .) ]
  ! DOTDIVIDE       [ reduce using rule 35 (expression -> expression DOTADD expression .) ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]


state 95

    (36) expression -> expression DOTSUB expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    DOTADD          reduce using rule 36 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 36 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 36 (expression -> expression DOTSUB expression .)
    ;               reduce using rule 36 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 36 (expression -> expression DOTSUB expression .)
    GREATER         reduce using rule 36 (expression -> expression DOTSUB expression .)
    LESS            reduce using rule 36 (expression -> expression DOTSUB expression .)
    GREATEREQ       reduce using rule 36 (expression -> expression DOTSUB expression .)
    LESSEQ          reduce using rule 36 (expression -> expression DOTSUB expression .)
    NOTEQ           reduce using rule 36 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 36 (expression -> expression DOTSUB expression .)
    )               reduce using rule 36 (expression -> expression DOTSUB expression .)
    :               reduce using rule 36 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 36 (expression -> expression DOTSUB expression .)
    {               reduce using rule 36 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 36 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 36 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 36 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 36 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 36 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 36 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 36 (expression -> expression DOTSUB expression .)
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62

  ! ADD             [ reduce using rule 36 (expression -> expression DOTSUB expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression DOTSUB expression .) ]
  ! MUL             [ reduce using rule 36 (expression -> expression DOTSUB expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 36 (expression -> expression DOTSUB expression .) ]
  ! DOTDIVIDE       [ reduce using rule 36 (expression -> expression DOTSUB expression .) ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]


state 96

    (37) expression -> expression DOTMUL expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ADD             reduce using rule 37 (expression -> expression DOTMUL expression .)
    MINUS           reduce using rule 37 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 37 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 37 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 37 (expression -> expression DOTMUL expression .)
    DOTDIVIDE       reduce using rule 37 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 37 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 37 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 37 (expression -> expression DOTMUL expression .)
    GREATER         reduce using rule 37 (expression -> expression DOTMUL expression .)
    LESS            reduce using rule 37 (expression -> expression DOTMUL expression .)
    GREATEREQ       reduce using rule 37 (expression -> expression DOTMUL expression .)
    LESSEQ          reduce using rule 37 (expression -> expression DOTMUL expression .)
    NOTEQ           reduce using rule 37 (expression -> expression DOTMUL expression .)
    EQ              reduce using rule 37 (expression -> expression DOTMUL expression .)
    )               reduce using rule 37 (expression -> expression DOTMUL expression .)
    :               reduce using rule 37 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 37 (expression -> expression DOTMUL expression .)
    {               reduce using rule 37 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 37 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 37 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 37 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 37 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 37 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 37 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 37 (expression -> expression DOTMUL expression .)
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58

  ! MUL             [ reduce using rule 37 (expression -> expression DOTMUL expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression DOTMUL expression .) ]
  ! ADD             [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIVIDE       [ shift and go to state 62 ]


state 97

    (38) expression -> expression DOTDIVIDE expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ADD             reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    MINUS           reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    DOTADD          reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    DOTSUB          reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    DOTMUL          reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    DOTDIVIDE       reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    ,               reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    ;               reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    ]               reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    GREATER         reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    LESS            reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    GREATEREQ       reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    LESSEQ          reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    NOTEQ           reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    EQ              reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    )               reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    :               reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    PRINT           reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    {               reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    IF              reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    BREAK           reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    CONTINUE        reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    RETURN          reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    ID              reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    WHILE           reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    FOR             reduce using rule 38 (expression -> expression DOTDIVIDE expression .)
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58

  ! MUL             [ reduce using rule 38 (expression -> expression DOTDIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression DOTDIVIDE expression .) ]
  ! ADD             [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIVIDE       [ shift and go to state 62 ]


state 98

    (45) matrix_expression -> ZEROS ( expression . )
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    )               shift and go to state 127
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 99

    (46) matrix_expression -> ONES ( expression . )
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    )               shift and go to state 128
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 100

    (47) matrix_expression -> EYE ( expression . )
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    )               shift and go to state 129
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 101

    (52) matrix_rows -> [ matrix_elems . ] , matrix_rows
    (53) matrix_rows -> [ matrix_elems . ]

    ]               shift and go to state 130


state 102

    (54) matrix_elems -> expression . , matrix_elems
    (55) matrix_elems -> expression .
    (50) vector_elems -> expression . , vector_elems
    (51) vector_elems -> expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

  ! reduce/reduce conflict for ] resolved using rule 51 (vector_elems -> expression .)
    ,               shift and go to state 131
    ]               reduce using rule 51 (vector_elems -> expression .)
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62

  ! ]               [ reduce using rule 55 (matrix_elems -> expression .) ]


state 103

    (48) matrix_create -> [ matrix_rows ] .

    ADD             reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    MINUS           reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    MUL             reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    DIVIDE          reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    DOTADD          reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    DOTSUB          reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    DOTMUL          reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    DOTDIVIDE       reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    ,               reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    ;               reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    ]               reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    GREATER         reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    LESS            reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    GREATEREQ       reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    LESSEQ          reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    NOTEQ           reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    EQ              reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    )               reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    :               reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    PRINT           reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    {               reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    IF              reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    BREAK           reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    CONTINUE        reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    RETURN          reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    ID              reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    WHILE           reduce using rule 48 (matrix_create -> [ matrix_rows ] .)
    FOR             reduce using rule 48 (matrix_create -> [ matrix_rows ] .)


state 104

    (49) vector_create -> [ vector_elems ] .

    ADD             reduce using rule 49 (vector_create -> [ vector_elems ] .)
    MINUS           reduce using rule 49 (vector_create -> [ vector_elems ] .)
    MUL             reduce using rule 49 (vector_create -> [ vector_elems ] .)
    DIVIDE          reduce using rule 49 (vector_create -> [ vector_elems ] .)
    DOTADD          reduce using rule 49 (vector_create -> [ vector_elems ] .)
    DOTSUB          reduce using rule 49 (vector_create -> [ vector_elems ] .)
    DOTMUL          reduce using rule 49 (vector_create -> [ vector_elems ] .)
    DOTDIVIDE       reduce using rule 49 (vector_create -> [ vector_elems ] .)
    ,               reduce using rule 49 (vector_create -> [ vector_elems ] .)
    ;               reduce using rule 49 (vector_create -> [ vector_elems ] .)
    ]               reduce using rule 49 (vector_create -> [ vector_elems ] .)
    GREATER         reduce using rule 49 (vector_create -> [ vector_elems ] .)
    LESS            reduce using rule 49 (vector_create -> [ vector_elems ] .)
    GREATEREQ       reduce using rule 49 (vector_create -> [ vector_elems ] .)
    LESSEQ          reduce using rule 49 (vector_create -> [ vector_elems ] .)
    NOTEQ           reduce using rule 49 (vector_create -> [ vector_elems ] .)
    EQ              reduce using rule 49 (vector_create -> [ vector_elems ] .)
    )               reduce using rule 49 (vector_create -> [ vector_elems ] .)
    :               reduce using rule 49 (vector_create -> [ vector_elems ] .)
    PRINT           reduce using rule 49 (vector_create -> [ vector_elems ] .)
    {               reduce using rule 49 (vector_create -> [ vector_elems ] .)
    IF              reduce using rule 49 (vector_create -> [ vector_elems ] .)
    BREAK           reduce using rule 49 (vector_create -> [ vector_elems ] .)
    CONTINUE        reduce using rule 49 (vector_create -> [ vector_elems ] .)
    RETURN          reduce using rule 49 (vector_create -> [ vector_elems ] .)
    ID              reduce using rule 49 (vector_create -> [ vector_elems ] .)
    WHILE           reduce using rule 49 (vector_create -> [ vector_elems ] .)
    FOR             reduce using rule 49 (vector_create -> [ vector_elems ] .)


state 105

    (50) vector_elems -> expression , . vector_elems
    (50) vector_elems -> . expression , vector_elems
    (51) vector_elems -> . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 71
    vector_elems                   shift and go to state 132
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 106

    (24) assignment -> id_change = id_change ; .

    PRINT           reduce using rule 24 (assignment -> id_change = id_change ; .)
    {               reduce using rule 24 (assignment -> id_change = id_change ; .)
    IF              reduce using rule 24 (assignment -> id_change = id_change ; .)
    BREAK           reduce using rule 24 (assignment -> id_change = id_change ; .)
    CONTINUE        reduce using rule 24 (assignment -> id_change = id_change ; .)
    RETURN          reduce using rule 24 (assignment -> id_change = id_change ; .)
    ID              reduce using rule 24 (assignment -> id_change = id_change ; .)
    WHILE           reduce using rule 24 (assignment -> id_change = id_change ; .)
    FOR             reduce using rule 24 (assignment -> id_change = id_change ; .)
    $end            reduce using rule 24 (assignment -> id_change = id_change ; .)
    }               reduce using rule 24 (assignment -> id_change = id_change ; .)
    ELSE            reduce using rule 24 (assignment -> id_change = id_change ; .)


state 107

    (19) assignment -> id_change = expression ; .

    PRINT           reduce using rule 19 (assignment -> id_change = expression ; .)
    {               reduce using rule 19 (assignment -> id_change = expression ; .)
    IF              reduce using rule 19 (assignment -> id_change = expression ; .)
    BREAK           reduce using rule 19 (assignment -> id_change = expression ; .)
    CONTINUE        reduce using rule 19 (assignment -> id_change = expression ; .)
    RETURN          reduce using rule 19 (assignment -> id_change = expression ; .)
    ID              reduce using rule 19 (assignment -> id_change = expression ; .)
    WHILE           reduce using rule 19 (assignment -> id_change = expression ; .)
    FOR             reduce using rule 19 (assignment -> id_change = expression ; .)
    $end            reduce using rule 19 (assignment -> id_change = expression ; .)
    }               reduce using rule 19 (assignment -> id_change = expression ; .)
    ELSE            reduce using rule 19 (assignment -> id_change = expression ; .)


state 108

    (25) assignment -> id_change ADDASSIGN id_change ; .

    PRINT           reduce using rule 25 (assignment -> id_change ADDASSIGN id_change ; .)
    {               reduce using rule 25 (assignment -> id_change ADDASSIGN id_change ; .)
    IF              reduce using rule 25 (assignment -> id_change ADDASSIGN id_change ; .)
    BREAK           reduce using rule 25 (assignment -> id_change ADDASSIGN id_change ; .)
    CONTINUE        reduce using rule 25 (assignment -> id_change ADDASSIGN id_change ; .)
    RETURN          reduce using rule 25 (assignment -> id_change ADDASSIGN id_change ; .)
    ID              reduce using rule 25 (assignment -> id_change ADDASSIGN id_change ; .)
    WHILE           reduce using rule 25 (assignment -> id_change ADDASSIGN id_change ; .)
    FOR             reduce using rule 25 (assignment -> id_change ADDASSIGN id_change ; .)
    $end            reduce using rule 25 (assignment -> id_change ADDASSIGN id_change ; .)
    }               reduce using rule 25 (assignment -> id_change ADDASSIGN id_change ; .)
    ELSE            reduce using rule 25 (assignment -> id_change ADDASSIGN id_change ; .)


state 109

    (20) assignment -> id_change ADDASSIGN expression ; .

    PRINT           reduce using rule 20 (assignment -> id_change ADDASSIGN expression ; .)
    {               reduce using rule 20 (assignment -> id_change ADDASSIGN expression ; .)
    IF              reduce using rule 20 (assignment -> id_change ADDASSIGN expression ; .)
    BREAK           reduce using rule 20 (assignment -> id_change ADDASSIGN expression ; .)
    CONTINUE        reduce using rule 20 (assignment -> id_change ADDASSIGN expression ; .)
    RETURN          reduce using rule 20 (assignment -> id_change ADDASSIGN expression ; .)
    ID              reduce using rule 20 (assignment -> id_change ADDASSIGN expression ; .)
    WHILE           reduce using rule 20 (assignment -> id_change ADDASSIGN expression ; .)
    FOR             reduce using rule 20 (assignment -> id_change ADDASSIGN expression ; .)
    $end            reduce using rule 20 (assignment -> id_change ADDASSIGN expression ; .)
    }               reduce using rule 20 (assignment -> id_change ADDASSIGN expression ; .)
    ELSE            reduce using rule 20 (assignment -> id_change ADDASSIGN expression ; .)


state 110

    (26) assignment -> id_change SUBASSIGN id_change ; .

    PRINT           reduce using rule 26 (assignment -> id_change SUBASSIGN id_change ; .)
    {               reduce using rule 26 (assignment -> id_change SUBASSIGN id_change ; .)
    IF              reduce using rule 26 (assignment -> id_change SUBASSIGN id_change ; .)
    BREAK           reduce using rule 26 (assignment -> id_change SUBASSIGN id_change ; .)
    CONTINUE        reduce using rule 26 (assignment -> id_change SUBASSIGN id_change ; .)
    RETURN          reduce using rule 26 (assignment -> id_change SUBASSIGN id_change ; .)
    ID              reduce using rule 26 (assignment -> id_change SUBASSIGN id_change ; .)
    WHILE           reduce using rule 26 (assignment -> id_change SUBASSIGN id_change ; .)
    FOR             reduce using rule 26 (assignment -> id_change SUBASSIGN id_change ; .)
    $end            reduce using rule 26 (assignment -> id_change SUBASSIGN id_change ; .)
    }               reduce using rule 26 (assignment -> id_change SUBASSIGN id_change ; .)
    ELSE            reduce using rule 26 (assignment -> id_change SUBASSIGN id_change ; .)


state 111

    (21) assignment -> id_change SUBASSIGN expression ; .

    PRINT           reduce using rule 21 (assignment -> id_change SUBASSIGN expression ; .)
    {               reduce using rule 21 (assignment -> id_change SUBASSIGN expression ; .)
    IF              reduce using rule 21 (assignment -> id_change SUBASSIGN expression ; .)
    BREAK           reduce using rule 21 (assignment -> id_change SUBASSIGN expression ; .)
    CONTINUE        reduce using rule 21 (assignment -> id_change SUBASSIGN expression ; .)
    RETURN          reduce using rule 21 (assignment -> id_change SUBASSIGN expression ; .)
    ID              reduce using rule 21 (assignment -> id_change SUBASSIGN expression ; .)
    WHILE           reduce using rule 21 (assignment -> id_change SUBASSIGN expression ; .)
    FOR             reduce using rule 21 (assignment -> id_change SUBASSIGN expression ; .)
    $end            reduce using rule 21 (assignment -> id_change SUBASSIGN expression ; .)
    }               reduce using rule 21 (assignment -> id_change SUBASSIGN expression ; .)
    ELSE            reduce using rule 21 (assignment -> id_change SUBASSIGN expression ; .)


state 112

    (27) assignment -> id_change MULASSIGN id_change ; .

    PRINT           reduce using rule 27 (assignment -> id_change MULASSIGN id_change ; .)
    {               reduce using rule 27 (assignment -> id_change MULASSIGN id_change ; .)
    IF              reduce using rule 27 (assignment -> id_change MULASSIGN id_change ; .)
    BREAK           reduce using rule 27 (assignment -> id_change MULASSIGN id_change ; .)
    CONTINUE        reduce using rule 27 (assignment -> id_change MULASSIGN id_change ; .)
    RETURN          reduce using rule 27 (assignment -> id_change MULASSIGN id_change ; .)
    ID              reduce using rule 27 (assignment -> id_change MULASSIGN id_change ; .)
    WHILE           reduce using rule 27 (assignment -> id_change MULASSIGN id_change ; .)
    FOR             reduce using rule 27 (assignment -> id_change MULASSIGN id_change ; .)
    $end            reduce using rule 27 (assignment -> id_change MULASSIGN id_change ; .)
    }               reduce using rule 27 (assignment -> id_change MULASSIGN id_change ; .)
    ELSE            reduce using rule 27 (assignment -> id_change MULASSIGN id_change ; .)


state 113

    (22) assignment -> id_change MULASSIGN expression ; .

    PRINT           reduce using rule 22 (assignment -> id_change MULASSIGN expression ; .)
    {               reduce using rule 22 (assignment -> id_change MULASSIGN expression ; .)
    IF              reduce using rule 22 (assignment -> id_change MULASSIGN expression ; .)
    BREAK           reduce using rule 22 (assignment -> id_change MULASSIGN expression ; .)
    CONTINUE        reduce using rule 22 (assignment -> id_change MULASSIGN expression ; .)
    RETURN          reduce using rule 22 (assignment -> id_change MULASSIGN expression ; .)
    ID              reduce using rule 22 (assignment -> id_change MULASSIGN expression ; .)
    WHILE           reduce using rule 22 (assignment -> id_change MULASSIGN expression ; .)
    FOR             reduce using rule 22 (assignment -> id_change MULASSIGN expression ; .)
    $end            reduce using rule 22 (assignment -> id_change MULASSIGN expression ; .)
    }               reduce using rule 22 (assignment -> id_change MULASSIGN expression ; .)
    ELSE            reduce using rule 22 (assignment -> id_change MULASSIGN expression ; .)


state 114

    (28) assignment -> id_change DIVASSIGN id_change ; .

    PRINT           reduce using rule 28 (assignment -> id_change DIVASSIGN id_change ; .)
    {               reduce using rule 28 (assignment -> id_change DIVASSIGN id_change ; .)
    IF              reduce using rule 28 (assignment -> id_change DIVASSIGN id_change ; .)
    BREAK           reduce using rule 28 (assignment -> id_change DIVASSIGN id_change ; .)
    CONTINUE        reduce using rule 28 (assignment -> id_change DIVASSIGN id_change ; .)
    RETURN          reduce using rule 28 (assignment -> id_change DIVASSIGN id_change ; .)
    ID              reduce using rule 28 (assignment -> id_change DIVASSIGN id_change ; .)
    WHILE           reduce using rule 28 (assignment -> id_change DIVASSIGN id_change ; .)
    FOR             reduce using rule 28 (assignment -> id_change DIVASSIGN id_change ; .)
    $end            reduce using rule 28 (assignment -> id_change DIVASSIGN id_change ; .)
    }               reduce using rule 28 (assignment -> id_change DIVASSIGN id_change ; .)
    ELSE            reduce using rule 28 (assignment -> id_change DIVASSIGN id_change ; .)


state 115

    (23) assignment -> id_change DIVASSIGN expression ; .

    PRINT           reduce using rule 23 (assignment -> id_change DIVASSIGN expression ; .)
    {               reduce using rule 23 (assignment -> id_change DIVASSIGN expression ; .)
    IF              reduce using rule 23 (assignment -> id_change DIVASSIGN expression ; .)
    BREAK           reduce using rule 23 (assignment -> id_change DIVASSIGN expression ; .)
    CONTINUE        reduce using rule 23 (assignment -> id_change DIVASSIGN expression ; .)
    RETURN          reduce using rule 23 (assignment -> id_change DIVASSIGN expression ; .)
    ID              reduce using rule 23 (assignment -> id_change DIVASSIGN expression ; .)
    WHILE           reduce using rule 23 (assignment -> id_change DIVASSIGN expression ; .)
    FOR             reduce using rule 23 (assignment -> id_change DIVASSIGN expression ; .)
    $end            reduce using rule 23 (assignment -> id_change DIVASSIGN expression ; .)
    }               reduce using rule 23 (assignment -> id_change DIVASSIGN expression ; .)
    ELSE            reduce using rule 23 (assignment -> id_change DIVASSIGN expression ; .)


state 116

    (62) if_stmt -> IF ( condition ) . instruction
    (63) if_stmt -> IF ( condition ) . instruction ELSE instruction
    (6) instruction -> . assignment
    (7) instruction -> . if_stmt
    (8) instruction -> . loops
    (9) instruction -> . break
    (10) instruction -> . continue
    (11) instruction -> . return_expr ;
    (12) instruction -> . PRINT create_stmt ;
    (13) instruction -> . { instructions }
    (19) assignment -> . id_change = expression ;
    (20) assignment -> . id_change ADDASSIGN expression ;
    (21) assignment -> . id_change SUBASSIGN expression ;
    (22) assignment -> . id_change MULASSIGN expression ;
    (23) assignment -> . id_change DIVASSIGN expression ;
    (24) assignment -> . id_change = id_change ;
    (25) assignment -> . id_change ADDASSIGN id_change ;
    (26) assignment -> . id_change SUBASSIGN id_change ;
    (27) assignment -> . id_change MULASSIGN id_change ;
    (28) assignment -> . id_change DIVASSIGN id_change ;
    (62) if_stmt -> . IF ( condition ) instruction
    (63) if_stmt -> . IF ( condition ) instruction ELSE instruction
    (68) loops -> . while_l
    (69) loops -> . for_l
    (15) break -> . BREAK ;
    (14) continue -> . CONTINUE ;
    (72) return_expr -> . RETURN
    (73) return_expr -> . RETURN expression
    (16) id_change -> . ID
    (17) id_change -> . ID [ expression , expression ]
    (18) id_change -> . ID [ expression ]
    (70) while_l -> . WHILE ( condition ) instruction
    (71) for_l -> . FOR ID = expression : expression instruction

    PRINT           shift and go to state 11
    {               shift and go to state 12
    IF              shift and go to state 14
    BREAK           shift and go to state 17
    CONTINUE        shift and go to state 18
    RETURN          shift and go to state 19
    ID              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22

    instruction                    shift and go to state 133
    assignment                     shift and go to state 5
    if_stmt                        shift and go to state 6
    loops                          shift and go to state 7
    break                          shift and go to state 8
    continue                       shift and go to state 9
    return_expr                    shift and go to state 10
    id_change                      shift and go to state 13
    while_l                        shift and go to state 15
    for_l                          shift and go to state 16

state 117

    (56) condition -> expression GREATER . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 134
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 118

    (57) condition -> expression LESS . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 135
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 119

    (58) condition -> expression GREATEREQ . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 136
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 120

    (59) condition -> expression LESSEQ . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 137
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 121

    (60) condition -> expression NOTEQ . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 138
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 122

    (61) condition -> expression EQ . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 139
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 123

    (17) id_change -> ID [ expression , . expression ]
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 140
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 124

    (18) id_change -> ID [ expression ] .

    =               reduce using rule 18 (id_change -> ID [ expression ] .)
    ADDASSIGN       reduce using rule 18 (id_change -> ID [ expression ] .)
    SUBASSIGN       reduce using rule 18 (id_change -> ID [ expression ] .)
    MULASSIGN       reduce using rule 18 (id_change -> ID [ expression ] .)
    DIVASSIGN       reduce using rule 18 (id_change -> ID [ expression ] .)
    ;               reduce using rule 18 (id_change -> ID [ expression ] .)


state 125

    (70) while_l -> WHILE ( condition ) . instruction
    (6) instruction -> . assignment
    (7) instruction -> . if_stmt
    (8) instruction -> . loops
    (9) instruction -> . break
    (10) instruction -> . continue
    (11) instruction -> . return_expr ;
    (12) instruction -> . PRINT create_stmt ;
    (13) instruction -> . { instructions }
    (19) assignment -> . id_change = expression ;
    (20) assignment -> . id_change ADDASSIGN expression ;
    (21) assignment -> . id_change SUBASSIGN expression ;
    (22) assignment -> . id_change MULASSIGN expression ;
    (23) assignment -> . id_change DIVASSIGN expression ;
    (24) assignment -> . id_change = id_change ;
    (25) assignment -> . id_change ADDASSIGN id_change ;
    (26) assignment -> . id_change SUBASSIGN id_change ;
    (27) assignment -> . id_change MULASSIGN id_change ;
    (28) assignment -> . id_change DIVASSIGN id_change ;
    (62) if_stmt -> . IF ( condition ) instruction
    (63) if_stmt -> . IF ( condition ) instruction ELSE instruction
    (68) loops -> . while_l
    (69) loops -> . for_l
    (15) break -> . BREAK ;
    (14) continue -> . CONTINUE ;
    (72) return_expr -> . RETURN
    (73) return_expr -> . RETURN expression
    (16) id_change -> . ID
    (17) id_change -> . ID [ expression , expression ]
    (18) id_change -> . ID [ expression ]
    (70) while_l -> . WHILE ( condition ) instruction
    (71) for_l -> . FOR ID = expression : expression instruction

    PRINT           shift and go to state 11
    {               shift and go to state 12
    IF              shift and go to state 14
    BREAK           shift and go to state 17
    CONTINUE        shift and go to state 18
    RETURN          shift and go to state 19
    ID              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22

    instruction                    shift and go to state 141
    assignment                     shift and go to state 5
    if_stmt                        shift and go to state 6
    loops                          shift and go to state 7
    break                          shift and go to state 8
    continue                       shift and go to state 9
    return_expr                    shift and go to state 10
    id_change                      shift and go to state 13
    while_l                        shift and go to state 15
    for_l                          shift and go to state 16

state 126

    (71) for_l -> FOR ID = expression . : expression instruction
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    :               shift and go to state 142
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 127

    (45) matrix_expression -> ZEROS ( expression ) .

    ADD             reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    MINUS           reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    MUL             reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    DIVIDE          reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    DOTADD          reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    DOTSUB          reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    DOTMUL          reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    DOTDIVIDE       reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    ,               reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    ;               reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    ]               reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    GREATER         reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    LESS            reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    GREATEREQ       reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    LESSEQ          reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    NOTEQ           reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    EQ              reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    )               reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    :               reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    PRINT           reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    {               reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    IF              reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    BREAK           reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    CONTINUE        reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    RETURN          reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    ID              reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    WHILE           reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)
    FOR             reduce using rule 45 (matrix_expression -> ZEROS ( expression ) .)


state 128

    (46) matrix_expression -> ONES ( expression ) .

    ADD             reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    MINUS           reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    MUL             reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    DIVIDE          reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    DOTADD          reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    DOTSUB          reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    DOTMUL          reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    DOTDIVIDE       reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    ,               reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    ;               reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    ]               reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    GREATER         reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    LESS            reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    GREATEREQ       reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    LESSEQ          reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    NOTEQ           reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    EQ              reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    )               reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    :               reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    PRINT           reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    {               reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    IF              reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    BREAK           reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    CONTINUE        reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    RETURN          reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    ID              reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    WHILE           reduce using rule 46 (matrix_expression -> ONES ( expression ) .)
    FOR             reduce using rule 46 (matrix_expression -> ONES ( expression ) .)


state 129

    (47) matrix_expression -> EYE ( expression ) .

    ADD             reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    MINUS           reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    MUL             reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    DIVIDE          reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    DOTADD          reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    DOTSUB          reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    DOTMUL          reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    DOTDIVIDE       reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    ,               reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    ;               reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    ]               reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    GREATER         reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    LESS            reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    GREATEREQ       reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    LESSEQ          reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    NOTEQ           reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    EQ              reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    )               reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    :               reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    PRINT           reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    {               reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    IF              reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    BREAK           reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    CONTINUE        reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    RETURN          reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    ID              reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    WHILE           reduce using rule 47 (matrix_expression -> EYE ( expression ) .)
    FOR             reduce using rule 47 (matrix_expression -> EYE ( expression ) .)


state 130

    (52) matrix_rows -> [ matrix_elems ] . , matrix_rows
    (53) matrix_rows -> [ matrix_elems ] .

    ,               shift and go to state 143
    ]               reduce using rule 53 (matrix_rows -> [ matrix_elems ] .)


state 131

    (54) matrix_elems -> expression , . matrix_elems
    (50) vector_elems -> expression , . vector_elems
    (54) matrix_elems -> . expression , matrix_elems
    (55) matrix_elems -> . expression
    (50) vector_elems -> . expression , vector_elems
    (51) vector_elems -> . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 102
    matrix_elems                   shift and go to state 144
    vector_elems                   shift and go to state 132
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 132

    (50) vector_elems -> expression , vector_elems .

    ]               reduce using rule 50 (vector_elems -> expression , vector_elems .)


state 133

    (62) if_stmt -> IF ( condition ) instruction .
    (63) if_stmt -> IF ( condition ) instruction . ELSE instruction

    PRINT           reduce using rule 62 (if_stmt -> IF ( condition ) instruction .)
    {               reduce using rule 62 (if_stmt -> IF ( condition ) instruction .)
    IF              reduce using rule 62 (if_stmt -> IF ( condition ) instruction .)
    BREAK           reduce using rule 62 (if_stmt -> IF ( condition ) instruction .)
    CONTINUE        reduce using rule 62 (if_stmt -> IF ( condition ) instruction .)
    RETURN          reduce using rule 62 (if_stmt -> IF ( condition ) instruction .)
    ID              reduce using rule 62 (if_stmt -> IF ( condition ) instruction .)
    WHILE           reduce using rule 62 (if_stmt -> IF ( condition ) instruction .)
    FOR             reduce using rule 62 (if_stmt -> IF ( condition ) instruction .)
    $end            reduce using rule 62 (if_stmt -> IF ( condition ) instruction .)
    }               reduce using rule 62 (if_stmt -> IF ( condition ) instruction .)
    ELSE            shift and go to state 145

  ! ELSE            [ reduce using rule 62 (if_stmt -> IF ( condition ) instruction .) ]


state 134

    (56) condition -> expression GREATER expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    )               reduce using rule 56 (condition -> expression GREATER expression .)
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 135

    (57) condition -> expression LESS expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    )               reduce using rule 57 (condition -> expression LESS expression .)
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 136

    (58) condition -> expression GREATEREQ expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    )               reduce using rule 58 (condition -> expression GREATEREQ expression .)
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 137

    (59) condition -> expression LESSEQ expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    )               reduce using rule 59 (condition -> expression LESSEQ expression .)
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 138

    (60) condition -> expression NOTEQ expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    )               reduce using rule 60 (condition -> expression NOTEQ expression .)
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 139

    (61) condition -> expression EQ expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    )               reduce using rule 61 (condition -> expression EQ expression .)
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 140

    (17) id_change -> ID [ expression , expression . ]
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ]               shift and go to state 146
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 141

    (70) while_l -> WHILE ( condition ) instruction .

    PRINT           reduce using rule 70 (while_l -> WHILE ( condition ) instruction .)
    {               reduce using rule 70 (while_l -> WHILE ( condition ) instruction .)
    IF              reduce using rule 70 (while_l -> WHILE ( condition ) instruction .)
    BREAK           reduce using rule 70 (while_l -> WHILE ( condition ) instruction .)
    CONTINUE        reduce using rule 70 (while_l -> WHILE ( condition ) instruction .)
    RETURN          reduce using rule 70 (while_l -> WHILE ( condition ) instruction .)
    ID              reduce using rule 70 (while_l -> WHILE ( condition ) instruction .)
    WHILE           reduce using rule 70 (while_l -> WHILE ( condition ) instruction .)
    FOR             reduce using rule 70 (while_l -> WHILE ( condition ) instruction .)
    $end            reduce using rule 70 (while_l -> WHILE ( condition ) instruction .)
    }               reduce using rule 70 (while_l -> WHILE ( condition ) instruction .)
    ELSE            reduce using rule 70 (while_l -> WHILE ( condition ) instruction .)


state 142

    (71) for_l -> FOR ID = expression : . expression instruction
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 147
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 143

    (52) matrix_rows -> [ matrix_elems ] , . matrix_rows
    (52) matrix_rows -> . [ matrix_elems ] , matrix_rows
    (53) matrix_rows -> . [ matrix_elems ]

    [               shift and go to state 148

    matrix_rows                    shift and go to state 149

state 144

    (54) matrix_elems -> expression , matrix_elems .

    ]               reduce using rule 54 (matrix_elems -> expression , matrix_elems .)


state 145

    (63) if_stmt -> IF ( condition ) instruction ELSE . instruction
    (6) instruction -> . assignment
    (7) instruction -> . if_stmt
    (8) instruction -> . loops
    (9) instruction -> . break
    (10) instruction -> . continue
    (11) instruction -> . return_expr ;
    (12) instruction -> . PRINT create_stmt ;
    (13) instruction -> . { instructions }
    (19) assignment -> . id_change = expression ;
    (20) assignment -> . id_change ADDASSIGN expression ;
    (21) assignment -> . id_change SUBASSIGN expression ;
    (22) assignment -> . id_change MULASSIGN expression ;
    (23) assignment -> . id_change DIVASSIGN expression ;
    (24) assignment -> . id_change = id_change ;
    (25) assignment -> . id_change ADDASSIGN id_change ;
    (26) assignment -> . id_change SUBASSIGN id_change ;
    (27) assignment -> . id_change MULASSIGN id_change ;
    (28) assignment -> . id_change DIVASSIGN id_change ;
    (62) if_stmt -> . IF ( condition ) instruction
    (63) if_stmt -> . IF ( condition ) instruction ELSE instruction
    (68) loops -> . while_l
    (69) loops -> . for_l
    (15) break -> . BREAK ;
    (14) continue -> . CONTINUE ;
    (72) return_expr -> . RETURN
    (73) return_expr -> . RETURN expression
    (16) id_change -> . ID
    (17) id_change -> . ID [ expression , expression ]
    (18) id_change -> . ID [ expression ]
    (70) while_l -> . WHILE ( condition ) instruction
    (71) for_l -> . FOR ID = expression : expression instruction

    PRINT           shift and go to state 11
    {               shift and go to state 12
    IF              shift and go to state 14
    BREAK           shift and go to state 17
    CONTINUE        shift and go to state 18
    RETURN          shift and go to state 19
    ID              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22

    instruction                    shift and go to state 150
    assignment                     shift and go to state 5
    if_stmt                        shift and go to state 6
    loops                          shift and go to state 7
    break                          shift and go to state 8
    continue                       shift and go to state 9
    return_expr                    shift and go to state 10
    id_change                      shift and go to state 13
    while_l                        shift and go to state 15
    for_l                          shift and go to state 16

state 146

    (17) id_change -> ID [ expression , expression ] .

    =               reduce using rule 17 (id_change -> ID [ expression , expression ] .)
    ADDASSIGN       reduce using rule 17 (id_change -> ID [ expression , expression ] .)
    SUBASSIGN       reduce using rule 17 (id_change -> ID [ expression , expression ] .)
    MULASSIGN       reduce using rule 17 (id_change -> ID [ expression , expression ] .)
    DIVASSIGN       reduce using rule 17 (id_change -> ID [ expression , expression ] .)
    ;               reduce using rule 17 (id_change -> ID [ expression , expression ] .)


state 147

    (71) for_l -> FOR ID = expression : expression . instruction
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression
    (6) instruction -> . assignment
    (7) instruction -> . if_stmt
    (8) instruction -> . loops
    (9) instruction -> . break
    (10) instruction -> . continue
    (11) instruction -> . return_expr ;
    (12) instruction -> . PRINT create_stmt ;
    (13) instruction -> . { instructions }
    (19) assignment -> . id_change = expression ;
    (20) assignment -> . id_change ADDASSIGN expression ;
    (21) assignment -> . id_change SUBASSIGN expression ;
    (22) assignment -> . id_change MULASSIGN expression ;
    (23) assignment -> . id_change DIVASSIGN expression ;
    (24) assignment -> . id_change = id_change ;
    (25) assignment -> . id_change ADDASSIGN id_change ;
    (26) assignment -> . id_change SUBASSIGN id_change ;
    (27) assignment -> . id_change MULASSIGN id_change ;
    (28) assignment -> . id_change DIVASSIGN id_change ;
    (62) if_stmt -> . IF ( condition ) instruction
    (63) if_stmt -> . IF ( condition ) instruction ELSE instruction
    (68) loops -> . while_l
    (69) loops -> . for_l
    (15) break -> . BREAK ;
    (14) continue -> . CONTINUE ;
    (72) return_expr -> . RETURN
    (73) return_expr -> . RETURN expression
    (16) id_change -> . ID
    (17) id_change -> . ID [ expression , expression ]
    (18) id_change -> . ID [ expression ]
    (70) while_l -> . WHILE ( condition ) instruction
    (71) for_l -> . FOR ID = expression : expression instruction

    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62
    PRINT           shift and go to state 11
    {               shift and go to state 12
    IF              shift and go to state 14
    BREAK           shift and go to state 17
    CONTINUE        shift and go to state 18
    RETURN          shift and go to state 19
    ID              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22

    instruction                    shift and go to state 151
    assignment                     shift and go to state 5
    if_stmt                        shift and go to state 6
    loops                          shift and go to state 7
    break                          shift and go to state 8
    continue                       shift and go to state 9
    return_expr                    shift and go to state 10
    id_change                      shift and go to state 13
    while_l                        shift and go to state 15
    for_l                          shift and go to state 16

state 148

    (52) matrix_rows -> [ . matrix_elems ] , matrix_rows
    (53) matrix_rows -> [ . matrix_elems ]
    (54) matrix_elems -> . expression , matrix_elems
    (55) matrix_elems -> . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    matrix_elems                   shift and go to state 101
    expression                     shift and go to state 152
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33

state 149

    (52) matrix_rows -> [ matrix_elems ] , matrix_rows .

    ]               reduce using rule 52 (matrix_rows -> [ matrix_elems ] , matrix_rows .)


state 150

    (63) if_stmt -> IF ( condition ) instruction ELSE instruction .

    PRINT           reduce using rule 63 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    {               reduce using rule 63 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    IF              reduce using rule 63 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    BREAK           reduce using rule 63 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 63 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    RETURN          reduce using rule 63 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    ID              reduce using rule 63 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    WHILE           reduce using rule 63 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    FOR             reduce using rule 63 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    $end            reduce using rule 63 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    }               reduce using rule 63 (if_stmt -> IF ( condition ) instruction ELSE instruction .)
    ELSE            reduce using rule 63 (if_stmt -> IF ( condition ) instruction ELSE instruction .)


state 151

    (71) for_l -> FOR ID = expression : expression instruction .

    PRINT           reduce using rule 71 (for_l -> FOR ID = expression : expression instruction .)
    {               reduce using rule 71 (for_l -> FOR ID = expression : expression instruction .)
    IF              reduce using rule 71 (for_l -> FOR ID = expression : expression instruction .)
    BREAK           reduce using rule 71 (for_l -> FOR ID = expression : expression instruction .)
    CONTINUE        reduce using rule 71 (for_l -> FOR ID = expression : expression instruction .)
    RETURN          reduce using rule 71 (for_l -> FOR ID = expression : expression instruction .)
    ID              reduce using rule 71 (for_l -> FOR ID = expression : expression instruction .)
    WHILE           reduce using rule 71 (for_l -> FOR ID = expression : expression instruction .)
    FOR             reduce using rule 71 (for_l -> FOR ID = expression : expression instruction .)
    $end            reduce using rule 71 (for_l -> FOR ID = expression : expression instruction .)
    }               reduce using rule 71 (for_l -> FOR ID = expression : expression instruction .)
    ELSE            reduce using rule 71 (for_l -> FOR ID = expression : expression instruction .)


state 152

    (54) matrix_elems -> expression . , matrix_elems
    (55) matrix_elems -> expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIVIDE expression
    (35) expression -> expression . DOTADD expression
    (36) expression -> expression . DOTSUB expression
    (37) expression -> expression . DOTMUL expression
    (38) expression -> expression . DOTDIVIDE expression

    ,               shift and go to state 153
    ]               reduce using rule 55 (matrix_elems -> expression .)
    ADD             shift and go to state 55
    MINUS           shift and go to state 56
    MUL             shift and go to state 57
    DIVIDE          shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIVIDE       shift and go to state 62


state 153

    (54) matrix_elems -> expression , . matrix_elems
    (54) matrix_elems -> . expression , matrix_elems
    (55) matrix_elems -> . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . MINUS expression
    (34) expression -> . ID '
    (35) expression -> . expression DOTADD expression
    (36) expression -> . expression DOTSUB expression
    (37) expression -> . expression DOTMUL expression
    (38) expression -> . expression DOTDIVIDE expression
    (39) expression -> . matrix_expression
    (40) expression -> . matrix_create
    (41) expression -> . vector_create
    (42) expression -> . INTNUM
    (43) expression -> . FLOAT
    (44) expression -> . ID
    (45) matrix_expression -> . ZEROS ( expression )
    (46) matrix_expression -> . ONES ( expression )
    (47) matrix_expression -> . EYE ( expression )
    (48) matrix_create -> . [ matrix_rows ]
    (49) vector_create -> . [ vector_elems ]

    MINUS           shift and go to state 29
    ID              shift and go to state 30
    INTNUM          shift and go to state 34
    FLOAT           shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    [               shift and go to state 39

    expression                     shift and go to state 152
    matrix_elems                   shift and go to state 144
    matrix_expression              shift and go to state 31
    matrix_create                  shift and go to state 32
    vector_create                  shift and go to state 33
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 75 resolved using rule (id_change -> ID)
WARNING: rejected rule (expression -> ID) in state 75
WARNING: reduce/reduce conflict in state 102 resolved using rule (vector_elems -> expression)
WARNING: rejected rule (matrix_elems -> expression) in state 102
